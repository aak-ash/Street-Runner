
==================== FINAL INTERFACE ====================
2019-04-26 14:29:08.30282815 UTC

interface street-runner-0.0.0-8ZEy2IVHyWYJYWzE7qtJkg:StreetRun.Picture 8064
  interface hash: 4b5e59fbb395ad1ffb31b89cc8705e29
  ABI hash: b3a434655916c9bd40f5e83b30c22973
  export-list hash: 3a912206f39fec45a542e7a9b7b90546
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd6997935d09daa6a687cb8eb0447281
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Picture.adjustCamera'
  StreetRun.Picture.moveCamera
  StreetRun.Picture.CameraControl{StreetRun.Picture.adjustCamera}
module dependencies: StreetRun.Assets StreetRun.Assets_1
                     StreetRun.Assets_2 StreetRun.CFL StreetRun.Camera StreetRun.Common
                     StreetRun.Config StreetRun.Font StreetRun.Font_functions
                     StreetRun.Hurdle StreetRun.Hurdle_1 StreetRun.Input StreetRun.Out
                     StreetRun.Out_func StreetRun.Physics StreetRun.Quake
                     StreetRun.Quake_BackStreet StreetRun.Quake_Building
                     StreetRun.Quake_Grass StreetRun.Quake_Street StreetRun.Runner
                     StreetRun.Runner_func_1 StreetRun.Runner_func_2 StreetRun.Scenario
                     StreetRun.Sfx StreetRun.Snag StreetRun.State StreetRun.Step
                     StreetRun.Tag StreetRun.Tag_func StreetRun.Types StreetRun.Work
                     StreetRun.Work_func
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      base16-bytestring-0.1.1.6 base64-bytestring-1.0.0.2
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 data-default-class-0.1.2.0
                      deepseq-1.4.4.0 distributive-0.6 dlist-0.8.0.6 errors-2.3.0
                      exceptions-0.10.1 free-5.1 ghc-boot-th-8.6.4 ghc-prim-0.5.3
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      kan-extensions-5.2 key-state-0.2.0 lens-4.17 libyaml-0.1.1.0
                      lifted-base-0.2.3.12 linear-1.20.8 monad-control-1.0.2.3 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17 scientific-0.3.6.2
                      sdl2-2.4.1.0 sdl2-image-2.0.0 sdl2-mixer-1.1.0 sdl2-ttf-2.0.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 text-conversions-0.3.0
                      th-abstraction-0.2.11.0 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.6.2 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.2
                      yaml-0.11.0.0
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Clock.TAI
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         reflection-2.1.4:Data.Reflection
         vector-0.12.0.2:Data.Vector.Unboxed stm-2.5.0.0:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         linear-1.20.8:Linear.Instances base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Affine linear-1.20.8:Linear.Plucker
                         linear-1.20.8:Linear.Quaternion linear-1.20.8:Linear.V
                         linear-1.20.8:Linear.V0 linear-1.20.8:Linear.V1
                         linear-1.20.8:Linear.V2 linear-1.20.8:Linear.V3
                         linear-1.20.8:Linear.V4
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         sdl2-2.4.1.0:SDL.Audio sdl2-2.4.1.0:SDL.Event
                         sdl2-2.4.1.0:SDL.Exception sdl2-2.4.1.0:SDL.Hint
                         sdl2-2.4.1.0:SDL.Init sdl2-2.4.1.0:SDL.Input.GameController
                         sdl2-2.4.1.0:SDL.Input.Joystick sdl2-2.4.1.0:SDL.Input.Keyboard
                         sdl2-2.4.1.0:SDL.Input.Keyboard.Codes sdl2-2.4.1.0:SDL.Input.Mouse
                         sdl2-2.4.1.0:SDL.Internal.Types sdl2-2.4.1.0:SDL.Power
                         sdl2-2.4.1.0:SDL.Time sdl2-2.4.1.0:SDL.Video
                         sdl2-2.4.1.0:SDL.Video.OpenGL sdl2-2.4.1.0:SDL.Video.Renderer
                         sdl2-image-2.0.0:SDL.Image sdl2-ttf-2.0.2:SDL.Font
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  StateVar-1.1.1.1:Data.StateVar 3356bd62ad24ee9ca28de7ecf3cb79ab
import  -/  base-4.12.0.0:Control.Monad.IO.Class e96805f9d79f75be66a0d44eb83064c1
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Real af2b985dd29515c375fb78b2c9298d42
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  linear-1.20.8:Linear.Affine d36c64474d5a73db89d8620023f2c4b0
import  -/  linear-1.20.8:Linear.V2 8a9154bf8e5f0fecb2cc8fb6a057e650
import  -/  mtl-2.2.2:Control.Monad.Reader d5c3a33f1c95bb71f4ae02f87a7048ff
import  -/  mtl-2.2.2:Control.Monad.Reader.Class 56d676c7504f5007ee5b66906716abcc
import  -/  mtl-2.2.2:Control.Monad.State 753def63fe8e937dc636f11e5230745a
import  -/  mtl-2.2.2:Control.Monad.State.Class 94cc1438f3f9a3259fb0a2c56d3d0303
import  -/  sdl2-2.4.1.0:SDL a509879ea64738370e9e96c8f0b5e49f
import  -/  sdl2-2.4.1.0:SDL.Internal.Types 7b679d0a22de4708b08683438715e813
import  -/  sdl2-2.4.1.0:SDL.Vect 87cebfb5451b5123ac5e23d9821e85c2
import  -/  sdl2-2.4.1.0:SDL.Video.Renderer 93203afab1f85132f9da5863a7f04f06
import  -/  StreetRun.Camera 15520c15c72428459c71d35d468598c8
  exports: 445eb368813d35f6641c1446797753f7
  $sel:camOrigin:Camera b5968deab63503d8481a66bb851490e6
  $sel:camZoom:Camera b5968deab63503d8481a66bb851490e6
  Camera 50f7b673c29ffcb8d7ebee383f5cb5b6
  Camera b5968deab63503d8481a66bb851490e6
  moveOrigin c1d3998015c783bdb0ee398ffa38a68b
  screenV2 bfbff365d903fb8d57bf6a7a5b4b9ace
import  -/  StreetRun.Config b599dd5c3a0bd39090f183027c337ded
  exports: a84af2eb49502a4ece92fede76199115
  $sel:cRenderer:Config 74b4b3d61d611d8fd0371c0c604c9c1b
  Config 74b4b3d61d611d8fd0371c0c604c9c1b
import  -/  StreetRun.State 879bfe0721b41cea3eaddf89be35a0d2
  exports: 2ad9459b3bdc4835614d220ed9e341f2
  $sel:vCamera:Vars 94cac8e669b0992d9fdeb1c0cad361f9
  Vars 94cac8e669b0992d9fdeb1c0cad361f9
4b6ecb54354c1c6dba8dc7d0ae2a08f1
  $tc'C:CameraControl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15408077831268309658##
                   12011727682764063784##
                   StreetRun.Picture.$trModule
                   StreetRun.Picture.$tc'C:CameraControl2
                   1#
                   StreetRun.Picture.$tc'C:CameraControl1) -}
3fd8a25a1b4181eeef175bdaf5b80aec
  $tc'C:CameraControl1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
60fe7cd25c767f08a1e7132bad7efbc9
  $tc'C:CameraControl2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Picture.$tc'C:CameraControl3) -}
d6e9470e5d7ebba2ffd7599647242d32
  $tc'C:CameraControl3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:CameraControl"#) -}
7b945bc7786876ffdb83f98d9b00e115
  $tcCameraControl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6087024812329836397##
                   17864115817368504640##
                   StreetRun.Picture.$trModule
                   StreetRun.Picture.$tcCameraControl2
                   0#
                   StreetRun.Picture.$tcCameraControl1) -}
d248c83eef6880c015bbd09beaa30d0a
  $tcCameraControl1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
93b9e9b1ef51bc2dc3efe6536354f0e0
  $tcCameraControl2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Picture.$tcCameraControl3) -}
b4896018c750e0168c47d190358c31e8
  $tcCameraControl3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CameraControl"#) -}
d1dcc84a8c6ecd0372be574242f3a5fb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Picture.$trModule3
                   StreetRun.Picture.$trModule1) -}
904ec4893e2a81002dd71f9ed2d9a571
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Picture.$trModule2) -}
06f3ea6353b8bb2b9534cd3bfb1f9b0c
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Picture"#) -}
7893100dfdded208c7f72111d470a8bf
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Picture.$trModule4) -}
78d6f539153c5030c70c53158bfa111a
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-8ZEy2IVHyWYJYWzE7qtJkg"#) -}
753460ac009711b11842fff1fc39800d
  $wadjustCamera' ::
    (forall a b. m a -> (a -> m b) -> m b)
    -> (forall a b. m a -> m b -> m b)
    -> (forall a. GHC.Types.IO a -> m a)
    -> (Control.Monad.Reader.Class.MonadReader
          StreetRun.Config.Config m,
        Control.Monad.State.Class.MonadState StreetRun.State.Vars m) =>
       StreetRun.Camera.Camera -> m ()
  {- Arity: 6,
     Strictness: <L,1*C1(C1(U))><C(C(S)),C(C1(U))><L,C(U)><L,1*U(A,A,A,1*C1(U))><L,1*U(A,A,A,1*C1(U))><L,U(U(U(U),U(U)),U(U,U))>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: forall a b. m a -> (a -> m b) -> m b)
                   (ww1 :: forall a b. m a -> m b -> m b)
                   (ww2 :: forall a. GHC.Types.IO a -> m a)
                   (w :: Control.Monad.Reader.Class.MonadReader
                           StreetRun.Config.Config m)
                   (w1 :: Control.Monad.State.Class.MonadState StreetRun.State.Vars m)
                   (w2 :: StreetRun.Camera.Camera) ->
                 ww1
                   @ ()
                   @ ()
                   (Control.Monad.State.Class.state
                      @ StreetRun.State.Vars
                      @ m
                      w1
                      @ ()
                      (\ (s1 :: StreetRun.State.Vars) ->
                       (GHC.Tuple.(),
                        case s1 of wild { StreetRun.State.Vars ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                        StreetRun.State.Vars ds ds1 ds2 ds3 ds4 ds5 ds6 w2 })))
                   (ww
                      @ SDL.Internal.Types.Renderer
                      @ ()
                      (Control.Monad.Reader.Class.reader
                         @ StreetRun.Config.Config
                         @ m
                         w
                         @ SDL.Internal.Types.Renderer
                         StreetRun.Config.$sel:cRenderer:Config)
                      (\ (renderer :: SDL.Internal.Types.Renderer) ->
                       case w2 of ww3 { StreetRun.Camera.Camera ww4 ww5 ->
                       StreetRun.Picture.$wmoveCamera @ m ww1 ww2 renderer ww4 ww5 }))) -}
e5d023fdbec0d4b3396ee0f573a29955
  $wmoveCamera ::
    (forall a b. m a -> m b -> m b)
    -> (forall a. GHC.Types.IO a -> m a)
    -> SDL.Internal.Types.Renderer
    -> Linear.V2.V2 GHC.Types.Float
    -> Linear.V2.V2 GHC.Types.Float
    -> m ()
  {- Arity: 5,
     Strictness: <C(C(S)),C(C1(U))><L,C(U)><L,U(U)><L,1*U(U(U),U(U))><L,1*U(U,U)>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: forall a b. m a -> m b -> m b)
                   (ww1 :: forall a. GHC.Types.IO a -> m a)
                   (w :: SDL.Internal.Types.Renderer)
                   (ww2 :: Linear.V2.V2 GHC.Types.Float)
                   (ww3 :: Linear.V2.V2 GHC.Types.Float) ->
                 ww
                   @ ()
                   @ ()
                   (case SDL.Video.Renderer.$wrendererScale
                           w of ww4 { (#,#) ww5 ww6 ->
                    ww1
                      @ ()
                      (ww6
                         (case ww3 of wild { Linear.V2.V2 a1 b1 ->
                          Linear.V2.V2
                            @ Foreign.C.Types.CFloat
                            a1 `cast` (Sym (Foreign.C.Types.N:CFloat[0]))
                            b1 `cast` (Sym (Foreign.C.Types.N:CFloat[0])) })) })
                   (ww
                      @ ()
                      @ ()
                      (case SDL.Video.Renderer.$wrendererViewport
                              w of ww4 { (#,#) ww5 ww6 ->
                       ww1
                         @ ()
                         (ww6
                            (GHC.Maybe.Just
                               @ (SDL.Video.Renderer.Rectangle Foreign.C.Types.CInt)
                               (SDL.Video.Renderer.Rectangle
                                  @ Foreign.C.Types.CInt
                                  (case ww2 of wild { Linear.V2.V2 x y ->
                                   case x of wild1 { GHC.Types.F# y1 ->
                                   case y of wild2 { GHC.Types.F# y2 ->
                                   case GHC.Float.$w$cproperFraction1
                                          @ Foreign.C.Types.CInt
                                          Foreign.C.Types.$fIntegralCInt
                                          (GHC.Prim.minusFloat# 640.0# y1) of ww7 { (#,#) ww8 ww9 ->
                                   case ww8
                                          `cast`
                                        (Foreign.C.Types.N:CInt[0]) of nt { GHC.Int.I32# ipv ->
                                   case GHC.Float.$w$cproperFraction1
                                          @ Foreign.C.Types.CInt
                                          Foreign.C.Types.$fIntegralCInt
                                          (GHC.Prim.minusFloat#
                                             640.0#
                                             y2) of ww10 { (#,#) ww11 ww12 ->
                                   case ww11
                                          `cast`
                                        (Foreign.C.Types.N:CInt[0]) of nt1 { GHC.Int.I32# ipv1 ->
                                   (Linear.V2.V2
                                      @ Foreign.C.Types.CInt
                                      nt `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                                      nt1 `cast` (Sym (Foreign.C.Types.N:CInt[0])))
                                     `cast`
                                   (Sym (Linear.Affine.N:Point[0]
                                             <Linear.V2.V2>_R) <Foreign.C.Types.CInt>_N) } } } } } } })
                                  StreetRun.Picture.adjustCamera'_dim))) })
                      (case SDL.Video.Renderer.$wrendererClipRect
                              w of ww4 { (#,#) ww5 ww6 ->
                       ww1 @ () (ww6 StreetRun.Picture.adjustCamera'1) }))) -}
4fbff540ba209f3d818863d970cdf797
  class GHC.Base.Monad m => CameraControl (m :: * -> *) where
    adjustCamera :: StreetRun.Camera.Camera -> m ()
    {-# MINIMAL adjustCamera #-}
b8e15433cf3c4c8223073926be73c883
  adjustCamera' ::
    (Control.Monad.IO.Class.MonadIO m,
     Control.Monad.Reader.Class.MonadReader StreetRun.Config.Config m,
     Control.Monad.State.Class.MonadState StreetRun.State.Vars m) =>
    StreetRun.Camera.Camera -> m ()
  {- Arity: 4,
     Strictness: <S(S(LLC(C(S))LL)L),1*U(1*U(A,1*C1(C1(U)),C(C1(U)),A,A),C(U))><L,1*U(A,A,A,1*C1(U))><L,1*U(A,A,A,1*C1(U))><L,U(U(U(U),U(U)),U(U,U))>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.IO.Class.MonadIO m)
                   (w1 :: Control.Monad.Reader.Class.MonadReader
                            StreetRun.Config.Config m)
                   (w2 :: Control.Monad.State.Class.MonadState StreetRun.State.Vars m)
                   (w3 :: StreetRun.Camera.Camera) ->
                 case w of ww { Control.Monad.IO.Class.C:MonadIO ww1 ww2 ->
                 case ww1 of ww3 { GHC.Base.C:Monad ww4 ww5 ww6 ww7 ww8 ->
                 StreetRun.Picture.$wadjustCamera' @ m ww5 ww6 ww2 w1 w2 w3 } }) -}
7a8dfb239a2844c9078f7749cc8bf027
  adjustCamera'1 ::
    GHC.Maybe.Maybe (SDL.Video.Renderer.Rectangle Foreign.C.Types.CInt)
  {- Strictness: m2,
     Unfolding: (GHC.Maybe.Just
                   @ (SDL.Video.Renderer.Rectangle Foreign.C.Types.CInt)
                   StreetRun.Picture.adjustCamera'2) -}
2498e1233cb67931d4d1a6a44f31724c
  adjustCamera'2 :: SDL.Video.Renderer.Rectangle Foreign.C.Types.CInt
  {- Strictness: m,
     Unfolding: (SDL.Video.Renderer.Rectangle
                   @ Foreign.C.Types.CInt
                   StreetRun.Picture.adjustCamera'3
                     `cast`
                   (Sym (Linear.Affine.N:Point[0]
                             <Linear.V2.V2>_R) <Foreign.C.Types.CInt>_N)
                   StreetRun.Picture.adjustCamera'_dim) -}
fe6596341706f6d8b7c539ad240d6a86
  adjustCamera'3 :: Linear.V2.V2 Foreign.C.Types.CInt
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V2.V2
                   @ Foreign.C.Types.CInt
                   StreetRun.Picture.adjustCamera'4
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   StreetRun.Picture.adjustCamera'4
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))) -}
a02cb4301bdf9fce896a7926136f7887
  adjustCamera'4 :: GHC.Int.Int32
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I32# 0#) -}
1ecfd0c0034a04ad48169413b10a53f0
  adjustCamera'_dim :: Linear.V2.V2 Foreign.C.Types.CInt
  {- Unfolding: (case GHC.Float.$w$cproperFraction1
                        @ Foreign.C.Types.CInt
                        Foreign.C.Types.$fIntegralCInt
                        1280.0# of ww2 { (#,#) ww3 ww4 ->
                 case ww3
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of nt { GHC.Int.I32# ipv ->
                 Linear.V2.V2
                   @ Foreign.C.Types.CInt
                   nt `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                   (GHC.Int.I32# ipv) `cast` (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
e55cdd45051ece501632c8a496e50e02
  moveCamera ::
    Control.Monad.IO.Class.MonadIO m =>
    SDL.Internal.Types.Renderer -> StreetRun.Camera.Camera -> m ()
  {- Arity: 3,
     Strictness: <S(S(LLC(C(S))LL)L),1*U(1*U(A,A,C(C1(U)),A,A),C(U))><L,U(U)><S,1*U(1*U(U(U),U(U)),1*U(U,U))>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.IO.Class.MonadIO m)
                   (w1 :: SDL.Internal.Types.Renderer)
                   (w2 :: StreetRun.Camera.Camera) ->
                 case w of ww { Control.Monad.IO.Class.C:MonadIO ww1 ww2 ->
                 case ww1 of ww3 { GHC.Base.C:Monad ww4 ww5 ww6 ww7 ww8 ->
                 case w2 of ww9 { StreetRun.Camera.Camera ww10 ww11 ->
                 StreetRun.Picture.$wmoveCamera @ m ww6 ww2 w1 ww10 ww11 } } }) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

