
==================== FINAL INTERFACE ====================
2019-04-26 14:29:01.877900864 UTC

interface street-runner-0.0.0-8ZEy2IVHyWYJYWzE7qtJkg:StreetRun.Snag 8064
  interface hash: af8ceefddc76b14cd4ae208b42e78d29
  ABI hash: 91cafec8e0a3bc8aded7f9bc89567610
  export-list hash: c07ed761210af14f8b0800e144209504
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd6997935d09daa6a687cb8eb0447281
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Snag.birdKey'keyName
  StreetRun.Snag.lavaKey'keyName
  StreetRun.Snag.rockKey'keyName
  StreetRun.Snag.BirdKey{StreetRun.Snag.BirdKey'Idle}
  StreetRun.Snag.LavaKey{StreetRun.Snag.LavaKey'Idle}
  StreetRun.Snag.RockKey{StreetRun.Snag.RockKey'Idle}
module dependencies:
package dependencies: aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0
                      attoparsec-0.13.2.2 base-4.12.0.0 base-compat-0.10.5 binary-0.8.6.0
                      bytestring-0.10.8.2 conduit-1.3.1.1 containers-0.6.0.1
                      deepseq-1.4.4.0 dlist-0.8.0.6 exceptions-0.10.1 ghc-boot-th-8.6.4
                      ghc-prim-0.5.3 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 libyaml-0.1.1.0 mtl-2.2.2
                      primitive-0.6.4.0 random-1.1 resourcet-1.2.2 scientific-0.3.6.2
                      stm-2.5.0.0 tagged-0.8.6 template-haskell-2.14.0.0 text-1.2.3.1
                      time-1.8.0.2 time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.2 yaml-0.11.0.0
orphans: stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: aeson-1.4.2.0:Data.Aeson.Types.Internal
                         animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  animate-0.7.0:Animate cf529f033c38156be2990062be8eb570
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Enum 87204abed08db8735fc0be5ab48689aa
import  -/  base-4.12.0.0:GHC.Err ea5e313ef4146b40b5d8b27aa168e736
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  text-1.2.3.1:Data.Text 18aabeaea44861e012250635c667d309
import  -/  text-1.2.3.1:Data.Text.Internal 33f95a55c7e327b089fd4ee34193da3c
f88ace211280dc1d7921a1773951ed44
  $fBoundedBirdKey :: GHC.Enum.Bounded StreetRun.Snag.BirdKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.BirdKey
                  StreetRun.Snag.BirdKey'Idle
                  StreetRun.Snag.BirdKey'Idle -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fBoundedLavaKey :: GHC.Enum.Bounded StreetRun.Snag.LavaKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.LavaKey
                  StreetRun.Snag.LavaKey'Idle
                  StreetRun.Snag.LavaKey'Idle -}
5221b707992783923c608096f51488e5
  $fBoundedRockKey :: GHC.Enum.Bounded StreetRun.Snag.RockKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.RockKey
                  StreetRun.Snag.RockKey'Idle
                  StreetRun.Snag.RockKey'Idle -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey :: GHC.Enum.Enum StreetRun.Snag.BirdKey
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.BirdKey
                  StreetRun.Snag.$fEnumBirdKey_$csucc
                  StreetRun.Snag.$fEnumBirdKey_$cpred
                  StreetRun.Snag.$fEnumBirdKey_$ctoEnum
                  StreetRun.Snag.$fEnumBirdKey_$cfromEnum
                  StreetRun.Snag.$fEnumBirdKey_$cenumFrom
                  StreetRun.Snag.$fEnumBirdKey_$cenumFromThen
                  StreetRun.Snag.$fEnumBirdKey_$cenumFromTo
                  StreetRun.Snag.$fEnumBirdKey_$cenumFromThenTo -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey1 :: [StreetRun.Snag.BirdKey]
  {- Unfolding: (StreetRun.Snag.$fEnumBirdKey_go_up 0#) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey2 :: [StreetRun.Snag.BirdKey]
  {- Unfolding: (StreetRun.Snag.$fEnumBirdKey_go 0#) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey3 :: [StreetRun.Snag.BirdKey]
  {- Unfolding: (StreetRun.Snag.$fEnumBirdKey_go1 0#) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey4 :: StreetRun.Snag.BirdKey
  {- Strictness: x -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey5 :: StreetRun.Snag.BirdKey
  {- Strictness: x -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_$cenumFrom ::
    StreetRun.Snag.BirdKey -> [StreetRun.Snag.BirdKey]
  {- Arity: 1, Strictness: <S,1*H>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: StreetRun.Snag.BirdKey) ->
                 case w of w1 { StreetRun.Snag.BirdKey'Idle ->
                 StreetRun.Snag.$fEnumBirdKey3 }) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_$cenumFromThen ::
    StreetRun.Snag.BirdKey
    -> StreetRun.Snag.BirdKey -> [StreetRun.Snag.BirdKey]
  {- Arity: 2, Strictness: <S,1*H><S,1*H>m2, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Snag.BirdKey) (w1 :: StreetRun.Snag.BirdKey) ->
                 case w of w2 { StreetRun.Snag.BirdKey'Idle ->
                 case w1 of w3 { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Types.:
                   @ StreetRun.Snag.BirdKey
                   StreetRun.Snag.BirdKey'Idle
                   (letrec {
                      go_up3 :: GHC.Prim.Int# -> [StreetRun.Snag.BirdKey]
                        {- Arity: 1, Strictness: <S,U> -}
                      = \ (x :: GHC.Prim.Int#) ->
                        case GHC.Prim.># x 0# of lwild1 {
                          DEFAULT
                          -> GHC.Types.:
                               @ StreetRun.Snag.BirdKey
                               (GHC.Prim.tagToEnum# @ StreetRun.Snag.BirdKey x)
                               (go_up3 x)
                          1#
                          -> GHC.Types.:
                               @ StreetRun.Snag.BirdKey
                               (GHC.Prim.tagToEnum# @ StreetRun.Snag.BirdKey x)
                               (GHC.Types.[] @ StreetRun.Snag.BirdKey) }
                    } in
                    go_up3 0#) } }) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_$cenumFromThenTo ::
    StreetRun.Snag.BirdKey
    -> StreetRun.Snag.BirdKey
    -> StreetRun.Snag.BirdKey
    -> [StreetRun.Snag.BirdKey]
  {- Arity: 3, Strictness: <S,1*H><S,1*H><S,1*H>m2, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: StreetRun.Snag.BirdKey)
                   (w1 :: StreetRun.Snag.BirdKey)
                   (w2 :: StreetRun.Snag.BirdKey) ->
                 case w of w3 { StreetRun.Snag.BirdKey'Idle ->
                 case w1 of w4 { StreetRun.Snag.BirdKey'Idle ->
                 case w2 of w5 { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Types.:
                   @ StreetRun.Snag.BirdKey
                   StreetRun.Snag.BirdKey'Idle
                   StreetRun.Snag.$fEnumBirdKey1 } } }) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_$cenumFromTo ::
    StreetRun.Snag.BirdKey
    -> StreetRun.Snag.BirdKey -> [StreetRun.Snag.BirdKey]
  {- Arity: 2, Strictness: <S,1*H><S,1*H>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Snag.BirdKey) (w1 :: StreetRun.Snag.BirdKey) ->
                 case w of w2 { StreetRun.Snag.BirdKey'Idle ->
                 case w1 of w3 { StreetRun.Snag.BirdKey'Idle ->
                 StreetRun.Snag.$fEnumBirdKey2 } }) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_$cfromEnum :: StreetRun.Snag.BirdKey -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Snag.BirdKey) ->
                 case a of wild { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Types.I# 0# }) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_$cpred ::
    StreetRun.Snag.BirdKey -> StreetRun.Snag.BirdKey
  {- Arity: 1, Strictness: <B,1*H>x,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Snag.BirdKey) ->
                 case a of wild { StreetRun.Snag.BirdKey'Idle ->
                 StreetRun.Snag.$fEnumBirdKey4 }) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_$csucc ::
    StreetRun.Snag.BirdKey -> StreetRun.Snag.BirdKey
  {- Arity: 1, Strictness: <B,1*H>x,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Snag.BirdKey) ->
                 case a of wild { StreetRun.Snag.BirdKey'Idle ->
                 StreetRun.Snag.$fEnumBirdKey5 }) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_$ctoEnum :: GHC.Types.Int -> StreetRun.Snag.BirdKey
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 StreetRun.Snag.$w$ctoEnum ww1 }) -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_go :: GHC.Prim.Int# -> [StreetRun.Snag.BirdKey]
  {- Arity: 1, Strictness: <L,U>m2 -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_go1 :: GHC.Prim.Int# -> [StreetRun.Snag.BirdKey]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
f88ace211280dc1d7921a1773951ed44
  $fEnumBirdKey_go_up :: GHC.Prim.Int# -> [StreetRun.Snag.BirdKey]
  {- Arity: 1, Strictness: <S,U>m2 -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey :: GHC.Enum.Enum StreetRun.Snag.LavaKey
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.LavaKey
                  StreetRun.Snag.$fEnumLavaKey_$csucc
                  StreetRun.Snag.$fEnumLavaKey_$cpred
                  StreetRun.Snag.$fEnumLavaKey_$ctoEnum
                  StreetRun.Snag.$fEnumLavaKey_$cfromEnum
                  StreetRun.Snag.$fEnumLavaKey_$cenumFrom
                  StreetRun.Snag.$fEnumLavaKey_$cenumFromThen
                  StreetRun.Snag.$fEnumLavaKey_$cenumFromTo
                  StreetRun.Snag.$fEnumLavaKey_$cenumFromThenTo -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey1 :: [StreetRun.Snag.LavaKey]
  {- Unfolding: (StreetRun.Snag.$fEnumLavaKey_go_up 0#) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey2 :: [StreetRun.Snag.LavaKey]
  {- Unfolding: (StreetRun.Snag.$fEnumLavaKey_go 0#) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey3 :: [StreetRun.Snag.LavaKey]
  {- Unfolding: (StreetRun.Snag.$fEnumLavaKey_go1 0#) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey4 :: StreetRun.Snag.LavaKey
  {- Strictness: x -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey5 :: StreetRun.Snag.LavaKey
  {- Strictness: x -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_$cenumFrom ::
    StreetRun.Snag.LavaKey -> [StreetRun.Snag.LavaKey]
  {- Arity: 1, Strictness: <S,1*H>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: StreetRun.Snag.LavaKey) ->
                 case w of w1 { StreetRun.Snag.LavaKey'Idle ->
                 StreetRun.Snag.$fEnumLavaKey3 }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_$cenumFromThen ::
    StreetRun.Snag.LavaKey
    -> StreetRun.Snag.LavaKey -> [StreetRun.Snag.LavaKey]
  {- Arity: 2, Strictness: <S,1*H><S,1*H>m2, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Snag.LavaKey) (w1 :: StreetRun.Snag.LavaKey) ->
                 case w of w2 { StreetRun.Snag.LavaKey'Idle ->
                 case w1 of w3 { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Types.:
                   @ StreetRun.Snag.LavaKey
                   StreetRun.Snag.LavaKey'Idle
                   (letrec {
                      go_up3 :: GHC.Prim.Int# -> [StreetRun.Snag.LavaKey]
                        {- Arity: 1, Strictness: <S,U> -}
                      = \ (x :: GHC.Prim.Int#) ->
                        case GHC.Prim.># x 0# of lwild1 {
                          DEFAULT
                          -> GHC.Types.:
                               @ StreetRun.Snag.LavaKey
                               (GHC.Prim.tagToEnum# @ StreetRun.Snag.LavaKey x)
                               (go_up3 x)
                          1#
                          -> GHC.Types.:
                               @ StreetRun.Snag.LavaKey
                               (GHC.Prim.tagToEnum# @ StreetRun.Snag.LavaKey x)
                               (GHC.Types.[] @ StreetRun.Snag.LavaKey) }
                    } in
                    go_up3 0#) } }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_$cenumFromThenTo ::
    StreetRun.Snag.LavaKey
    -> StreetRun.Snag.LavaKey
    -> StreetRun.Snag.LavaKey
    -> [StreetRun.Snag.LavaKey]
  {- Arity: 3, Strictness: <S,1*H><S,1*H><S,1*H>m2, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: StreetRun.Snag.LavaKey)
                   (w1 :: StreetRun.Snag.LavaKey)
                   (w2 :: StreetRun.Snag.LavaKey) ->
                 case w of w3 { StreetRun.Snag.LavaKey'Idle ->
                 case w1 of w4 { StreetRun.Snag.LavaKey'Idle ->
                 case w2 of w5 { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Types.:
                   @ StreetRun.Snag.LavaKey
                   StreetRun.Snag.LavaKey'Idle
                   StreetRun.Snag.$fEnumLavaKey1 } } }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_$cenumFromTo ::
    StreetRun.Snag.LavaKey
    -> StreetRun.Snag.LavaKey -> [StreetRun.Snag.LavaKey]
  {- Arity: 2, Strictness: <S,1*H><S,1*H>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Snag.LavaKey) (w1 :: StreetRun.Snag.LavaKey) ->
                 case w of w2 { StreetRun.Snag.LavaKey'Idle ->
                 case w1 of w3 { StreetRun.Snag.LavaKey'Idle ->
                 StreetRun.Snag.$fEnumLavaKey2 } }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_$cfromEnum :: StreetRun.Snag.LavaKey -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Snag.LavaKey) ->
                 case a of wild { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Types.I# 0# }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_$cpred ::
    StreetRun.Snag.LavaKey -> StreetRun.Snag.LavaKey
  {- Arity: 1, Strictness: <B,1*H>x,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Snag.LavaKey) ->
                 case a of wild { StreetRun.Snag.LavaKey'Idle ->
                 StreetRun.Snag.$fEnumLavaKey4 }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_$csucc ::
    StreetRun.Snag.LavaKey -> StreetRun.Snag.LavaKey
  {- Arity: 1, Strictness: <B,1*H>x,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Snag.LavaKey) ->
                 case a of wild { StreetRun.Snag.LavaKey'Idle ->
                 StreetRun.Snag.$fEnumLavaKey5 }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_$ctoEnum :: GHC.Types.Int -> StreetRun.Snag.LavaKey
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 StreetRun.Snag.$w$ctoEnum1 ww1 }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_go :: GHC.Prim.Int# -> [StreetRun.Snag.LavaKey]
  {- Arity: 1, Strictness: <L,U>m2 -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_go1 :: GHC.Prim.Int# -> [StreetRun.Snag.LavaKey]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEnumLavaKey_go_up :: GHC.Prim.Int# -> [StreetRun.Snag.LavaKey]
  {- Arity: 1, Strictness: <S,U>m2 -}
5221b707992783923c608096f51488e5
  $fEnumRockKey :: GHC.Enum.Enum StreetRun.Snag.RockKey
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.RockKey
                  StreetRun.Snag.$fEnumRockKey_$csucc
                  StreetRun.Snag.$fEnumRockKey_$cpred
                  StreetRun.Snag.$fEnumRockKey_$ctoEnum
                  StreetRun.Snag.$fEnumRockKey_$cfromEnum
                  StreetRun.Snag.$fEnumRockKey_$cenumFrom
                  StreetRun.Snag.$fEnumRockKey_$cenumFromThen
                  StreetRun.Snag.$fEnumRockKey_$cenumFromTo
                  StreetRun.Snag.$fEnumRockKey_$cenumFromThenTo -}
5221b707992783923c608096f51488e5
  $fEnumRockKey1 :: [StreetRun.Snag.RockKey]
  {- Unfolding: (StreetRun.Snag.$fEnumRockKey_go_up 0#) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey2 :: [StreetRun.Snag.RockKey]
  {- Unfolding: (StreetRun.Snag.$fEnumRockKey_go 0#) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey3 :: [StreetRun.Snag.RockKey]
  {- Unfolding: (StreetRun.Snag.$fEnumRockKey_go1 0#) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey4 :: StreetRun.Snag.RockKey
  {- Strictness: x -}
5221b707992783923c608096f51488e5
  $fEnumRockKey5 :: StreetRun.Snag.RockKey
  {- Strictness: x -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_$cenumFrom ::
    StreetRun.Snag.RockKey -> [StreetRun.Snag.RockKey]
  {- Arity: 1, Strictness: <S,1*H>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: StreetRun.Snag.RockKey) ->
                 case w of w1 { StreetRun.Snag.RockKey'Idle ->
                 StreetRun.Snag.$fEnumRockKey3 }) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_$cenumFromThen ::
    StreetRun.Snag.RockKey
    -> StreetRun.Snag.RockKey -> [StreetRun.Snag.RockKey]
  {- Arity: 2, Strictness: <S,1*H><S,1*H>m2, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Snag.RockKey) (w1 :: StreetRun.Snag.RockKey) ->
                 case w of w2 { StreetRun.Snag.RockKey'Idle ->
                 case w1 of w3 { StreetRun.Snag.RockKey'Idle ->
                 GHC.Types.:
                   @ StreetRun.Snag.RockKey
                   StreetRun.Snag.RockKey'Idle
                   (letrec {
                      go_up3 :: GHC.Prim.Int# -> [StreetRun.Snag.RockKey]
                        {- Arity: 1, Strictness: <S,U> -}
                      = \ (x :: GHC.Prim.Int#) ->
                        case GHC.Prim.># x 0# of lwild1 {
                          DEFAULT
                          -> GHC.Types.:
                               @ StreetRun.Snag.RockKey
                               (GHC.Prim.tagToEnum# @ StreetRun.Snag.RockKey x)
                               (go_up3 x)
                          1#
                          -> GHC.Types.:
                               @ StreetRun.Snag.RockKey
                               (GHC.Prim.tagToEnum# @ StreetRun.Snag.RockKey x)
                               (GHC.Types.[] @ StreetRun.Snag.RockKey) }
                    } in
                    go_up3 0#) } }) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_$cenumFromThenTo ::
    StreetRun.Snag.RockKey
    -> StreetRun.Snag.RockKey
    -> StreetRun.Snag.RockKey
    -> [StreetRun.Snag.RockKey]
  {- Arity: 3, Strictness: <S,1*H><S,1*H><S,1*H>m2, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: StreetRun.Snag.RockKey)
                   (w1 :: StreetRun.Snag.RockKey)
                   (w2 :: StreetRun.Snag.RockKey) ->
                 case w of w3 { StreetRun.Snag.RockKey'Idle ->
                 case w1 of w4 { StreetRun.Snag.RockKey'Idle ->
                 case w2 of w5 { StreetRun.Snag.RockKey'Idle ->
                 GHC.Types.:
                   @ StreetRun.Snag.RockKey
                   StreetRun.Snag.RockKey'Idle
                   StreetRun.Snag.$fEnumRockKey1 } } }) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_$cenumFromTo ::
    StreetRun.Snag.RockKey
    -> StreetRun.Snag.RockKey -> [StreetRun.Snag.RockKey]
  {- Arity: 2, Strictness: <S,1*H><S,1*H>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Snag.RockKey) (w1 :: StreetRun.Snag.RockKey) ->
                 case w of w2 { StreetRun.Snag.RockKey'Idle ->
                 case w1 of w3 { StreetRun.Snag.RockKey'Idle ->
                 StreetRun.Snag.$fEnumRockKey2 } }) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_$cfromEnum :: StreetRun.Snag.RockKey -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Snag.RockKey) ->
                 case a of wild { StreetRun.Snag.RockKey'Idle ->
                 GHC.Types.I# 0# }) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_$cpred ::
    StreetRun.Snag.RockKey -> StreetRun.Snag.RockKey
  {- Arity: 1, Strictness: <B,1*H>x,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Snag.RockKey) ->
                 case a of wild { StreetRun.Snag.RockKey'Idle ->
                 StreetRun.Snag.$fEnumRockKey4 }) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_$csucc ::
    StreetRun.Snag.RockKey -> StreetRun.Snag.RockKey
  {- Arity: 1, Strictness: <B,1*H>x,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Snag.RockKey) ->
                 case a of wild { StreetRun.Snag.RockKey'Idle ->
                 StreetRun.Snag.$fEnumRockKey5 }) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_$ctoEnum :: GHC.Types.Int -> StreetRun.Snag.RockKey
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 StreetRun.Snag.$w$ctoEnum2 ww1 }) -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_go :: GHC.Prim.Int# -> [StreetRun.Snag.RockKey]
  {- Arity: 1, Strictness: <L,U>m2 -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_go1 :: GHC.Prim.Int# -> [StreetRun.Snag.RockKey]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
5221b707992783923c608096f51488e5
  $fEnumRockKey_go_up :: GHC.Prim.Int# -> [StreetRun.Snag.RockKey]
  {- Arity: 1, Strictness: <S,U>m2 -}
f88ace211280dc1d7921a1773951ed44
  $fEqBirdKey :: GHC.Classes.Eq StreetRun.Snag.BirdKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.BirdKey
                  StreetRun.Snag.$fEqBirdKey_$c==
                  StreetRun.Snag.$fEqBirdKey_$c/= -}
f88ace211280dc1d7921a1773951ed44
  $fEqBirdKey_$c/= ::
    StreetRun.Snag.BirdKey -> StreetRun.Snag.BirdKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Snag.BirdKey) (y :: StreetRun.Snag.BirdKey) ->
                 case x of wild { StreetRun.Snag.BirdKey'Idle ->
                 case y of wild1 { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Types.False } }) -}
f88ace211280dc1d7921a1773951ed44
  $fEqBirdKey_$c== ::
    StreetRun.Snag.BirdKey -> StreetRun.Snag.BirdKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: StreetRun.Snag.BirdKey)
                   (ds1 :: StreetRun.Snag.BirdKey) ->
                 case ds of wild { StreetRun.Snag.BirdKey'Idle ->
                 case ds1 of wild1 { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Types.True } }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEqLavaKey :: GHC.Classes.Eq StreetRun.Snag.LavaKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.LavaKey
                  StreetRun.Snag.$fEqLavaKey_$c==
                  StreetRun.Snag.$fEqLavaKey_$c/= -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEqLavaKey_$c/= ::
    StreetRun.Snag.LavaKey -> StreetRun.Snag.LavaKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Snag.LavaKey) (y :: StreetRun.Snag.LavaKey) ->
                 case x of wild { StreetRun.Snag.LavaKey'Idle ->
                 case y of wild1 { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Types.False } }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fEqLavaKey_$c== ::
    StreetRun.Snag.LavaKey -> StreetRun.Snag.LavaKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: StreetRun.Snag.LavaKey)
                   (ds1 :: StreetRun.Snag.LavaKey) ->
                 case ds of wild { StreetRun.Snag.LavaKey'Idle ->
                 case ds1 of wild1 { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Types.True } }) -}
5221b707992783923c608096f51488e5
  $fEqRockKey :: GHC.Classes.Eq StreetRun.Snag.RockKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.RockKey
                  StreetRun.Snag.$fEqRockKey_$c==
                  StreetRun.Snag.$fEqRockKey_$c/= -}
5221b707992783923c608096f51488e5
  $fEqRockKey_$c/= ::
    StreetRun.Snag.RockKey -> StreetRun.Snag.RockKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Snag.RockKey) (y :: StreetRun.Snag.RockKey) ->
                 case x of wild { StreetRun.Snag.RockKey'Idle ->
                 case y of wild1 { StreetRun.Snag.RockKey'Idle ->
                 GHC.Types.False } }) -}
5221b707992783923c608096f51488e5
  $fEqRockKey_$c== ::
    StreetRun.Snag.RockKey -> StreetRun.Snag.RockKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: StreetRun.Snag.RockKey)
                   (ds1 :: StreetRun.Snag.RockKey) ->
                 case ds of wild { StreetRun.Snag.RockKey'Idle ->
                 case ds1 of wild1 { StreetRun.Snag.RockKey'Idle ->
                 GHC.Types.True } }) -}
f88ace211280dc1d7921a1773951ed44
  $fKeyNameBirdKey :: Animate.KeyName StreetRun.Snag.BirdKey
  DFunId
  {- Arity: 1, Strictness: <S,1*H>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                StreetRun.Snag.birdKey'keyName
                  `cast`
                (Sym (Animate.N:KeyName[0] <StreetRun.Snag.BirdKey>_N)) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fKeyNameLavaKey :: Animate.KeyName StreetRun.Snag.LavaKey
  DFunId
  {- Arity: 1, Strictness: <S,1*H>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                StreetRun.Snag.lavaKey'keyName
                  `cast`
                (Sym (Animate.N:KeyName[0] <StreetRun.Snag.LavaKey>_N)) -}
5221b707992783923c608096f51488e5
  $fKeyNameRockKey :: Animate.KeyName StreetRun.Snag.RockKey
  DFunId
  {- Arity: 1, Strictness: <S,1*H>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                StreetRun.Snag.rockKey'keyName
                  `cast`
                (Sym (Animate.N:KeyName[0] <StreetRun.Snag.RockKey>_N)) -}
f88ace211280dc1d7921a1773951ed44
  $fOrdBirdKey :: GHC.Classes.Ord StreetRun.Snag.BirdKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.BirdKey
                  StreetRun.Snag.$fEqBirdKey
                  StreetRun.Snag.$fOrdBirdKey_$ccompare
                  StreetRun.Snag.$fOrdBirdKey_$c<
                  StreetRun.Snag.$fOrdBirdKey_$c<=
                  StreetRun.Snag.$fOrdBirdKey_$c>
                  StreetRun.Snag.$fEqBirdKey_$c==
                  StreetRun.Snag.$fOrdBirdKey_$cmax
                  StreetRun.Snag.$fOrdBirdKey_$cmax -}
f88ace211280dc1d7921a1773951ed44
  $fOrdBirdKey_$c< ::
    StreetRun.Snag.BirdKey -> StreetRun.Snag.BirdKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.BirdKey) (b :: StreetRun.Snag.BirdKey) ->
                 case a of wild { StreetRun.Snag.BirdKey'Idle ->
                 case b of wild1 { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Types.False } }) -}
f88ace211280dc1d7921a1773951ed44
  $fOrdBirdKey_$c<= ::
    StreetRun.Snag.BirdKey -> StreetRun.Snag.BirdKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.BirdKey) (b :: StreetRun.Snag.BirdKey) ->
                 case b of wild { StreetRun.Snag.BirdKey'Idle ->
                 case a of wild1 { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Types.True } }) -}
f88ace211280dc1d7921a1773951ed44
  $fOrdBirdKey_$c> ::
    StreetRun.Snag.BirdKey -> StreetRun.Snag.BirdKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.BirdKey) (b :: StreetRun.Snag.BirdKey) ->
                 case b of wild { StreetRun.Snag.BirdKey'Idle ->
                 case a of wild1 { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Types.False } }) -}
f88ace211280dc1d7921a1773951ed44
  $fOrdBirdKey_$ccompare ::
    StreetRun.Snag.BirdKey
    -> StreetRun.Snag.BirdKey -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.BirdKey) (b :: StreetRun.Snag.BirdKey) ->
                 case a of wild { StreetRun.Snag.BirdKey'Idle ->
                 case b of wild1 { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Types.EQ } }) -}
f88ace211280dc1d7921a1773951ed44
  $fOrdBirdKey_$cmax ::
    StreetRun.Snag.BirdKey
    -> StreetRun.Snag.BirdKey -> StreetRun.Snag.BirdKey
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U()><S,1*H>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: StreetRun.Snag.BirdKey) (y :: StreetRun.Snag.BirdKey) ->
                 case y of wild { StreetRun.Snag.BirdKey'Idle -> x }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fOrdLavaKey :: GHC.Classes.Ord StreetRun.Snag.LavaKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.LavaKey
                  StreetRun.Snag.$fEqLavaKey
                  StreetRun.Snag.$fOrdLavaKey_$ccompare
                  StreetRun.Snag.$fOrdLavaKey_$c<
                  StreetRun.Snag.$fOrdLavaKey_$c<=
                  StreetRun.Snag.$fOrdLavaKey_$c>
                  StreetRun.Snag.$fEqLavaKey_$c==
                  StreetRun.Snag.$fOrdLavaKey_$cmax
                  StreetRun.Snag.$fOrdLavaKey_$cmax -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fOrdLavaKey_$c< ::
    StreetRun.Snag.LavaKey -> StreetRun.Snag.LavaKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.LavaKey) (b :: StreetRun.Snag.LavaKey) ->
                 case a of wild { StreetRun.Snag.LavaKey'Idle ->
                 case b of wild1 { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Types.False } }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fOrdLavaKey_$c<= ::
    StreetRun.Snag.LavaKey -> StreetRun.Snag.LavaKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.LavaKey) (b :: StreetRun.Snag.LavaKey) ->
                 case b of wild { StreetRun.Snag.LavaKey'Idle ->
                 case a of wild1 { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Types.True } }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fOrdLavaKey_$c> ::
    StreetRun.Snag.LavaKey -> StreetRun.Snag.LavaKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.LavaKey) (b :: StreetRun.Snag.LavaKey) ->
                 case b of wild { StreetRun.Snag.LavaKey'Idle ->
                 case a of wild1 { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Types.False } }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fOrdLavaKey_$ccompare ::
    StreetRun.Snag.LavaKey
    -> StreetRun.Snag.LavaKey -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.LavaKey) (b :: StreetRun.Snag.LavaKey) ->
                 case a of wild { StreetRun.Snag.LavaKey'Idle ->
                 case b of wild1 { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Types.EQ } }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fOrdLavaKey_$cmax ::
    StreetRun.Snag.LavaKey
    -> StreetRun.Snag.LavaKey -> StreetRun.Snag.LavaKey
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U()><S,1*H>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: StreetRun.Snag.LavaKey) (y :: StreetRun.Snag.LavaKey) ->
                 case y of wild { StreetRun.Snag.LavaKey'Idle -> x }) -}
5221b707992783923c608096f51488e5
  $fOrdRockKey :: GHC.Classes.Ord StreetRun.Snag.RockKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.RockKey
                  StreetRun.Snag.$fEqRockKey
                  StreetRun.Snag.$fOrdRockKey_$ccompare
                  StreetRun.Snag.$fOrdRockKey_$c<
                  StreetRun.Snag.$fOrdRockKey_$c<=
                  StreetRun.Snag.$fOrdRockKey_$c>
                  StreetRun.Snag.$fEqRockKey_$c==
                  StreetRun.Snag.$fOrdRockKey_$cmax
                  StreetRun.Snag.$fOrdRockKey_$cmax -}
5221b707992783923c608096f51488e5
  $fOrdRockKey_$c< ::
    StreetRun.Snag.RockKey -> StreetRun.Snag.RockKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.RockKey) (b :: StreetRun.Snag.RockKey) ->
                 case a of wild { StreetRun.Snag.RockKey'Idle ->
                 case b of wild1 { StreetRun.Snag.RockKey'Idle ->
                 GHC.Types.False } }) -}
5221b707992783923c608096f51488e5
  $fOrdRockKey_$c<= ::
    StreetRun.Snag.RockKey -> StreetRun.Snag.RockKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.RockKey) (b :: StreetRun.Snag.RockKey) ->
                 case b of wild { StreetRun.Snag.RockKey'Idle ->
                 case a of wild1 { StreetRun.Snag.RockKey'Idle ->
                 GHC.Types.True } }) -}
5221b707992783923c608096f51488e5
  $fOrdRockKey_$c> ::
    StreetRun.Snag.RockKey -> StreetRun.Snag.RockKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.RockKey) (b :: StreetRun.Snag.RockKey) ->
                 case b of wild { StreetRun.Snag.RockKey'Idle ->
                 case a of wild1 { StreetRun.Snag.RockKey'Idle ->
                 GHC.Types.False } }) -}
5221b707992783923c608096f51488e5
  $fOrdRockKey_$ccompare ::
    StreetRun.Snag.RockKey
    -> StreetRun.Snag.RockKey -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Snag.RockKey) (b :: StreetRun.Snag.RockKey) ->
                 case a of wild { StreetRun.Snag.RockKey'Idle ->
                 case b of wild1 { StreetRun.Snag.RockKey'Idle ->
                 GHC.Types.EQ } }) -}
5221b707992783923c608096f51488e5
  $fOrdRockKey_$cmax ::
    StreetRun.Snag.RockKey
    -> StreetRun.Snag.RockKey -> StreetRun.Snag.RockKey
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U()><S,1*H>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: StreetRun.Snag.RockKey) (y :: StreetRun.Snag.RockKey) ->
                 case y of wild { StreetRun.Snag.RockKey'Idle -> x }) -}
f88ace211280dc1d7921a1773951ed44
  $fShowBirdKey :: GHC.Show.Show StreetRun.Snag.BirdKey
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.BirdKey
                  StreetRun.Snag.$fShowBirdKey_$cshowsPrec
                  StreetRun.Snag.$fShowBirdKey_$cshow
                  StreetRun.Snag.$fShowBirdKey_$cshowList -}
f88ace211280dc1d7921a1773951ed44
  $fShowBirdKey1 :: StreetRun.Snag.BirdKey -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*H><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: StreetRun.Snag.BirdKey) (eta :: GHC.Base.String) ->
                 case ds of wild { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      StreetRun.Snag.$fShowBirdKey2)
                   eta }) -}
89cf6ab92b06145c7a46d0ce847116fb
  $fShowBirdKey2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Snag.$fShowBirdKey3) -}
0aacc15760ca6ac5048f2f556f6c1e08
  $fShowBirdKey3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BirdKey'Idle"#) -}
f88ace211280dc1d7921a1773951ed44
  $fShowBirdKey_$cshow :: StreetRun.Snag.BirdKey -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Snag.BirdKey) ->
                 case x of wild { StreetRun.Snag.BirdKey'Idle ->
                 StreetRun.Snag.$fShowBirdKey2 }) -}
f88ace211280dc1d7921a1773951ed44
  $fShowBirdKey_$cshowList ::
    [StreetRun.Snag.BirdKey] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Snag.BirdKey]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Snag.BirdKey
                   StreetRun.Snag.$fShowBirdKey1
                   ls
                   s) -}
f88ace211280dc1d7921a1773951ed44
  $fShowBirdKey_$cshowsPrec ::
    GHC.Types.Int -> StreetRun.Snag.BirdKey -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*H><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: StreetRun.Snag.BirdKey)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild { StreetRun.Snag.BirdKey'Idle ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      StreetRun.Snag.$fShowBirdKey2)
                   eta }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fShowLavaKey :: GHC.Show.Show StreetRun.Snag.LavaKey
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.LavaKey
                  StreetRun.Snag.$fShowLavaKey_$cshowsPrec
                  StreetRun.Snag.$fShowLavaKey_$cshow
                  StreetRun.Snag.$fShowLavaKey_$cshowList -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fShowLavaKey1 :: StreetRun.Snag.LavaKey -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*H><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: StreetRun.Snag.LavaKey) (eta :: GHC.Base.String) ->
                 case ds of wild { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      StreetRun.Snag.$fShowLavaKey2)
                   eta }) -}
ad9af50f934647878afe27023959cf3a
  $fShowLavaKey2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Snag.$fShowLavaKey3) -}
25c16bc8070875b2cf1dbd4fedd2c16f
  $fShowLavaKey3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LavaKey'Idle"#) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fShowLavaKey_$cshow :: StreetRun.Snag.LavaKey -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Snag.LavaKey) ->
                 case x of wild { StreetRun.Snag.LavaKey'Idle ->
                 StreetRun.Snag.$fShowLavaKey2 }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fShowLavaKey_$cshowList ::
    [StreetRun.Snag.LavaKey] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Snag.LavaKey]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Snag.LavaKey
                   StreetRun.Snag.$fShowLavaKey1
                   ls
                   s) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $fShowLavaKey_$cshowsPrec ::
    GHC.Types.Int -> StreetRun.Snag.LavaKey -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*H><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: StreetRun.Snag.LavaKey)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild { StreetRun.Snag.LavaKey'Idle ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      StreetRun.Snag.$fShowLavaKey2)
                   eta }) -}
5221b707992783923c608096f51488e5
  $fShowRockKey :: GHC.Show.Show StreetRun.Snag.RockKey
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Snag.RockKey
                  StreetRun.Snag.$fShowRockKey_$cshowsPrec
                  StreetRun.Snag.$fShowRockKey_$cshow
                  StreetRun.Snag.$fShowRockKey_$cshowList -}
5221b707992783923c608096f51488e5
  $fShowRockKey1 :: StreetRun.Snag.RockKey -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*H><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: StreetRun.Snag.RockKey) (eta :: GHC.Base.String) ->
                 case ds of wild { StreetRun.Snag.RockKey'Idle ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      StreetRun.Snag.$fShowRockKey2)
                   eta }) -}
c4f35b296a8d88a19247c2a0c484d14e
  $fShowRockKey2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Snag.$fShowRockKey3) -}
a268c5f152efb3f33119bb0b9647d4c9
  $fShowRockKey3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RockKey'Idle"#) -}
5221b707992783923c608096f51488e5
  $fShowRockKey_$cshow :: StreetRun.Snag.RockKey -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Snag.RockKey) ->
                 case x of wild { StreetRun.Snag.RockKey'Idle ->
                 StreetRun.Snag.$fShowRockKey2 }) -}
5221b707992783923c608096f51488e5
  $fShowRockKey_$cshowList ::
    [StreetRun.Snag.RockKey] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Snag.RockKey]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Snag.RockKey
                   StreetRun.Snag.$fShowRockKey1
                   ls
                   s) -}
5221b707992783923c608096f51488e5
  $fShowRockKey_$cshowsPrec ::
    GHC.Types.Int -> StreetRun.Snag.RockKey -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*H><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: StreetRun.Snag.RockKey)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild { StreetRun.Snag.RockKey'Idle ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      StreetRun.Snag.$fShowRockKey2)
                   eta }) -}
de1ceac07ab1bba7d54655069b8caca9
  $tc'BirdKey'Idle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7160367338953659799##
                   14694622526756542423##
                   StreetRun.Snag.$trModule
                   StreetRun.Snag.$tc'BirdKey'Idle2
                   0#
                   StreetRun.Snag.$tc'BirdKey'Idle1) -}
e0aba7026faebc977e04299b786ea594
  $tc'BirdKey'Idle1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
cee44d52357de7d4ddcacf8702f23544
  $tc'BirdKey'Idle2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Snag.$tc'BirdKey'Idle3) -}
4ff36f005ba1a9b85ccdc7efe93985da
  $tc'BirdKey'Idle3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BirdKey'Idle"#) -}
96d93f11e0c03f85bffd0d7497fb1a33
  $tc'LavaKey'Idle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5352553605582962941##
                   10739719298869460437##
                   StreetRun.Snag.$trModule
                   StreetRun.Snag.$tc'LavaKey'Idle2
                   0#
                   StreetRun.Snag.$tc'LavaKey'Idle1) -}
91f892301864ee8a8f2f17bf856d12db
  $tc'LavaKey'Idle1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
4bae07c35c96465269aae40466c33d4d
  $tc'LavaKey'Idle2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Snag.$tc'LavaKey'Idle3) -}
4481a655c4b4b053344ee9fd6b87f885
  $tc'LavaKey'Idle3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LavaKey'Idle"#) -}
25645ecc200f866bc8936ef2f0fe67e1
  $tc'RockKey'Idle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5972952041502157245##
                   6535330694794759161##
                   StreetRun.Snag.$trModule
                   StreetRun.Snag.$tc'RockKey'Idle2
                   0#
                   StreetRun.Snag.$tc'RockKey'Idle1) -}
a1801d34c5b73f2fcd5d9ea5a5f41424
  $tc'RockKey'Idle1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
6a81487a34c9139e192e1f4395a94682
  $tc'RockKey'Idle2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Snag.$tc'RockKey'Idle3) -}
04326f775cf99df1f9c8889a0638d29b
  $tc'RockKey'Idle3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RockKey'Idle"#) -}
392c09f5aa1f535c51c668d46d99e5ca
  $tcBirdKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7908436661223962947##
                   7024313508035910006##
                   StreetRun.Snag.$trModule
                   StreetRun.Snag.$tcBirdKey1
                   0#
                   GHC.Types.krep$*) -}
f6d95dc0dba6ac1b31bb01046b40e5d9
  $tcBirdKey1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Snag.$tcBirdKey2) -}
48102a44d2476e7ff2e30c2f7bf0652f
  $tcBirdKey2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BirdKey"#) -}
b873646f8c31b142c7e0a19a5434b7eb
  $tcLavaKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14849685015050696435##
                   5334886403932756491##
                   StreetRun.Snag.$trModule
                   StreetRun.Snag.$tcLavaKey1
                   0#
                   GHC.Types.krep$*) -}
8708d5462cde0259e6385aa40f518d03
  $tcLavaKey1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Snag.$tcLavaKey2) -}
8a81cdd6ec9f1ea03a0d6ba37fbd0df8
  $tcLavaKey2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LavaKey"#) -}
01863803175f17b2f7ff138f6f05a13c
  $tcRockKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11497250073137843304##
                   25030508843154692##
                   StreetRun.Snag.$trModule
                   StreetRun.Snag.$tcRockKey1
                   0#
                   GHC.Types.krep$*) -}
ec047931d4782cd5f33911ae7cd64a3c
  $tcRockKey1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Snag.$tcRockKey2) -}
1e05851d789e8e12e13d4bdfd3de5c12
  $tcRockKey2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RockKey"#) -}
986c9e310b823d98515a730d9ff088fa
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Snag.$trModule3
                   StreetRun.Snag.$trModule1) -}
2e8e5099f5e8f2998921daf42af447db
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Snag.$trModule2) -}
b7916706c6aee137af4dde69cf519ed7
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Snag"#) -}
00e5b9d1110a331efff257bf5db873d7
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Snag.$trModule4) -}
c2eca8eccb51b963b14607371a26a182
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-8ZEy2IVHyWYJYWzE7qtJkg"#) -}
f88ace211280dc1d7921a1773951ed44
  $w$ctoEnum :: GHC.Prim.Int# -> StreetRun.Snag.BirdKey
  {- Arity: 1, Strictness: <S,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.>=# ww 0# of lwild {
                   DEFAULT -> StreetRun.Snag.$wlvl ww
                   1#
                   -> case GHC.Prim.<=# ww 0# of lwild1 {
                        DEFAULT -> StreetRun.Snag.$wlvl ww
                        1# -> GHC.Prim.tagToEnum# @ StreetRun.Snag.BirdKey ww } }) -}
3fc67e1f876892a8dbc5f4b90be00bda
  $w$ctoEnum1 :: GHC.Prim.Int# -> StreetRun.Snag.LavaKey
  {- Arity: 1, Strictness: <S,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.>=# ww 0# of lwild {
                   DEFAULT -> StreetRun.Snag.$wlvl1 ww
                   1#
                   -> case GHC.Prim.<=# ww 0# of lwild1 {
                        DEFAULT -> StreetRun.Snag.$wlvl1 ww
                        1# -> GHC.Prim.tagToEnum# @ StreetRun.Snag.LavaKey ww } }) -}
5221b707992783923c608096f51488e5
  $w$ctoEnum2 :: GHC.Prim.Int# -> StreetRun.Snag.RockKey
  {- Arity: 1, Strictness: <S,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.>=# ww 0# of lwild {
                   DEFAULT -> StreetRun.Snag.$wlvl2 ww
                   1#
                   -> case GHC.Prim.<=# ww 0# of lwild1 {
                        DEFAULT -> StreetRun.Snag.$wlvl2 ww
                        1# -> GHC.Prim.tagToEnum# @ StreetRun.Snag.RockKey ww } }) -}
f88ace211280dc1d7921a1773951ed44
  $wlvl :: GHC.Prim.Int# -> StreetRun.Snag.BirdKey
  {- Arity: 1, Strictness: <B,U>x, Inline: [2] -}
3fc67e1f876892a8dbc5f4b90be00bda
  $wlvl1 :: GHC.Prim.Int# -> StreetRun.Snag.LavaKey
  {- Arity: 1, Strictness: <B,U>x, Inline: [2] -}
5221b707992783923c608096f51488e5
  $wlvl2 :: GHC.Prim.Int# -> StreetRun.Snag.RockKey
  {- Arity: 1, Strictness: <B,U>x, Inline: [2] -}
f88ace211280dc1d7921a1773951ed44
  data BirdKey = BirdKey'Idle
3fc67e1f876892a8dbc5f4b90be00bda
  data LavaKey = LavaKey'Idle
5221b707992783923c608096f51488e5
  data RockKey = RockKey'Idle
f88ace211280dc1d7921a1773951ed44
  birdKey'keyName ::
    StreetRun.Snag.BirdKey -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Snag.BirdKey) ->
                 case ds of wild { StreetRun.Snag.BirdKey'Idle ->
                 StreetRun.Snag.birdKey'keyName1 }) -}
a63c01c2cf12485dcb933512a0b72424
  birdKey'keyName1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   StreetRun.Snag.birdKey'keyName2) -}
9bcc483ad7072e7d6c6609bf9eea4174
  birdKey'keyName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Idle"#) -}
3fc67e1f876892a8dbc5f4b90be00bda
  lavaKey'keyName ::
    StreetRun.Snag.LavaKey -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Snag.LavaKey) ->
                 case ds of wild { StreetRun.Snag.LavaKey'Idle ->
                 StreetRun.Snag.birdKey'keyName1 }) -}
5221b707992783923c608096f51488e5
  rockKey'keyName ::
    StreetRun.Snag.RockKey -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Snag.RockKey) ->
                 case ds of wild { StreetRun.Snag.RockKey'Idle ->
                 StreetRun.Snag.birdKey'keyName1 }) -}
instance GHC.Enum.Bounded [StreetRun.Snag.BirdKey]
  = StreetRun.Snag.$fBoundedBirdKey
instance GHC.Enum.Bounded [StreetRun.Snag.LavaKey]
  = StreetRun.Snag.$fBoundedLavaKey
instance GHC.Enum.Bounded [StreetRun.Snag.RockKey]
  = StreetRun.Snag.$fBoundedRockKey
instance GHC.Enum.Enum [StreetRun.Snag.BirdKey]
  = StreetRun.Snag.$fEnumBirdKey
instance GHC.Enum.Enum [StreetRun.Snag.LavaKey]
  = StreetRun.Snag.$fEnumLavaKey
instance GHC.Enum.Enum [StreetRun.Snag.RockKey]
  = StreetRun.Snag.$fEnumRockKey
instance GHC.Classes.Eq [StreetRun.Snag.BirdKey]
  = StreetRun.Snag.$fEqBirdKey
instance GHC.Classes.Eq [StreetRun.Snag.LavaKey]
  = StreetRun.Snag.$fEqLavaKey
instance GHC.Classes.Eq [StreetRun.Snag.RockKey]
  = StreetRun.Snag.$fEqRockKey
instance Animate.KeyName [StreetRun.Snag.BirdKey]
  = StreetRun.Snag.$fKeyNameBirdKey
instance Animate.KeyName [StreetRun.Snag.LavaKey]
  = StreetRun.Snag.$fKeyNameLavaKey
instance Animate.KeyName [StreetRun.Snag.RockKey]
  = StreetRun.Snag.$fKeyNameRockKey
instance GHC.Classes.Ord [StreetRun.Snag.BirdKey]
  = StreetRun.Snag.$fOrdBirdKey
instance GHC.Classes.Ord [StreetRun.Snag.LavaKey]
  = StreetRun.Snag.$fOrdLavaKey
instance GHC.Classes.Ord [StreetRun.Snag.RockKey]
  = StreetRun.Snag.$fOrdRockKey
instance GHC.Show.Show [StreetRun.Snag.BirdKey]
  = StreetRun.Snag.$fShowBirdKey
instance GHC.Show.Show [StreetRun.Snag.LavaKey]
  = StreetRun.Snag.$fShowLavaKey
instance GHC.Show.Show [StreetRun.Snag.RockKey]
  = StreetRun.Snag.$fShowRockKey
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

