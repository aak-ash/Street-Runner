
==================== FINAL INTERFACE ====================
2019-04-26 16:49:05.576502571 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Input 8064
  interface hash: 371325e4be8147e052dfa83223438b78
  ABI hash: dc1e62404449c4ef4f763046555938b3
  export-list hash: d5c6fc579c43e57e8ccb72f493e3d8f8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd6997935d09daa6a687cb8eb0447281
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Input.initInput
  StreetRun.Input.Input{StreetRun.Input.Input iDown iEscape iQuit iSpace iUp}
module dependencies:
package dependencies: base-4.12.0.0 ghc-prim-0.5.3
                      integer-gmp-1.0.2.0 key-state-0.2.0
orphans: base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity base-4.12.0.0:Data.Monoid
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:GHC.Generics
                         base-4.12.0.0:GHC.IO.Exception
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  key-state-0.2.0:KeyState f505d200ccd373546afa68666240df7e
debdce52acaa37df87e66131243c6c87
  $fEqInput :: GHC.Classes.Eq StreetRun.Input.Input
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Input.Input
                  StreetRun.Input.$fEqInput_$c==
                  StreetRun.Input.$fEqInput_$c/= -}
debdce52acaa37df87e66131243c6c87
  $fEqInput_$c/= ::
    StreetRun.Input.Input -> StreetRun.Input.Input -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SL)LLLL),1*U(1*U(1*U,1*U),1*U(1*U,1*U),1*U(1*U,1*U),1*U(1*U,1*U),1*U)><S(S(SL)LLLL),1*U(1*U(1*U,1*U),1*U(1*U,1*U),1*U(1*U,1*U),1*U(1*U,1*U),1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Input.Input) (y :: StreetRun.Input.Input) ->
                 case StreetRun.Input.$fEqInput_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
debdce52acaa37df87e66131243c6c87
  $fEqInput_$c== ::
    StreetRun.Input.Input -> StreetRun.Input.Input -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(SL)LLLL),1*U(1*U(1*U,1*U),1*U(1*U,1*U),1*U(1*U,1*U),1*U(1*U,1*U),1*U)><S(S(SL)LLLL),1*U(1*U(1*U,1*U),1*U(1*U,1*U),1*U(1*U,1*U),1*U(1*U,1*U),1*U)>,
     Unfolding: (\ (ds :: StreetRun.Input.Input)
                   (ds1 :: StreetRun.Input.Input) ->
                 case ds of wild { StreetRun.Input.Input a1 a2 a3 a4 a5 ->
                 case ds1 of wild1 { StreetRun.Input.Input b1 b2 b3 b4 b5 ->
                 case a1 of ww { KeyState.KeyState ww1 ww2 ->
                 case b1 of ww3 { KeyState.KeyState ww4 ww5 ->
                 case KeyState.$w$c==
                        @ GHC.Types.Int
                        GHC.Classes.$fEqInt
                        ww1
                        ww2
                        ww4
                        ww5 of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case a2 of ww7 { KeyState.KeyState ww8 ww9 ->
                      case b2 of ww10 { KeyState.KeyState ww11 ww12 ->
                      case KeyState.$w$c==
                             @ GHC.Types.Int
                             GHC.Classes.$fEqInt
                             ww8
                             ww9
                             ww11
                             ww12 of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case a3 of ww13 { KeyState.KeyState ww14 ww15 ->
                           case b3 of ww16 { KeyState.KeyState ww17 ww18 ->
                           case KeyState.$w$c==
                                  @ GHC.Types.Int
                                  GHC.Classes.$fEqInt
                                  ww14
                                  ww15
                                  ww17
                                  ww18 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case a4 of ww19 { KeyState.KeyState ww20 ww21 ->
                                case b4 of ww22 { KeyState.KeyState ww23 ww24 ->
                                case KeyState.$w$c==
                                       @ GHC.Types.Int
                                       GHC.Classes.$fEqInt
                                       ww20
                                       ww21
                                       ww23
                                       ww24 of wild5 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> GHC.Classes.$fEqBool_$c== a5 b5 } } } } } } } } } } } } } }) -}
debdce52acaa37df87e66131243c6c87
  $fShowInput :: GHC.Show.Show StreetRun.Input.Input
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Input.Input
                  StreetRun.Input.$fShowInput_$cshowsPrec
                  StreetRun.Input.$fShowInput_$cshow
                  StreetRun.Input.$fShowInput_$cshowList -}
debdce52acaa37df87e66131243c6c87
  $fShowInput1 :: StreetRun.Input.Input -> GHC.Show.ShowS
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,1*U),1*U(U,1*U),1*U(U,1*U),1*U(U,1*U),U)>,
     Unfolding: (\ (w :: StreetRun.Input.Input) ->
                 case w of ww { StreetRun.Input.Input ww1 ww2 ww3 ww4 ww5 ->
                 StreetRun.Input.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 ww5 }) -}
69edd4073ff8c85a3469a23ec5c3f4b5
  $fShowInput2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
debdce52acaa37df87e66131243c6c87
  $fShowInput_$cshow :: StreetRun.Input.Input -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,1*U),1*U(U,1*U),1*U(U,1*U),1*U(U,1*U),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Input.Input) ->
                 StreetRun.Input.$fShowInput_$cshowsPrec
                   StreetRun.Input.$fShowInput2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
debdce52acaa37df87e66131243c6c87
  $fShowInput_$cshowList :: [StreetRun.Input.Input] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Input.Input]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Input.Input
                   StreetRun.Input.$fShowInput1
                   ls
                   s) -}
debdce52acaa37df87e66131243c6c87
  $fShowInput_$cshowsPrec ::
    GHC.Types.Int -> StreetRun.Input.Input -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,1*U),1*U(U,1*U),1*U(U,1*U),1*U(U,1*U),U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: StreetRun.Input.Input) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { StreetRun.Input.Input ww3 ww4 ww5 ww6 ww7 ->
                 StreetRun.Input.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 ww7 } }) -}
debdce52acaa37df87e66131243c6c87
  $sel:iDown:Input ::
    StreetRun.Input.Input -> KeyState.KeyState GHC.Types.Int
  RecSel Left StreetRun.Input.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Input.Input) ->
                 case ds of wild { StreetRun.Input.Input ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
debdce52acaa37df87e66131243c6c87
  $sel:iEscape:Input ::
    StreetRun.Input.Input -> KeyState.KeyState GHC.Types.Int
  RecSel Left StreetRun.Input.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Input.Input) ->
                 case ds of wild { StreetRun.Input.Input ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
debdce52acaa37df87e66131243c6c87
  $sel:iQuit:Input :: StreetRun.Input.Input -> GHC.Types.Bool
  RecSel Left StreetRun.Input.Input
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Input.Input) ->
                 case ds of wild { StreetRun.Input.Input ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
debdce52acaa37df87e66131243c6c87
  $sel:iSpace:Input ::
    StreetRun.Input.Input -> KeyState.KeyState GHC.Types.Int
  RecSel Left StreetRun.Input.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U(U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Input.Input) ->
                 case ds of wild { StreetRun.Input.Input ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
debdce52acaa37df87e66131243c6c87
  $sel:iUp:Input ::
    StreetRun.Input.Input -> KeyState.KeyState GHC.Types.Int
  RecSel Left StreetRun.Input.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Input.Input) ->
                 case ds of wild { StreetRun.Input.Input ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
fbfffb9c4f51ce16032a62d01bd2ed15
  $tc'Input :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11426628790945701948##
                   10064924767582747064##
                   StreetRun.Input.$trModule
                   StreetRun.Input.$tc'Input2
                   0#
                   StreetRun.Input.$tc'Input1) -}
3f504770066eb85033888d641e38cb33
  $tc'Input1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ae39d67f8d5ffb66f09bf9aab11ae9ae
  $tc'Input2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Input.$tc'Input3) -}
1843ad0f50321795eaf4724e0b68a360
  $tc'Input3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Input"#) -}
cf8fe52426fe241f9a434b242534fa49
  $tcInput :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13588256717102628273##
                   14127208873213915606##
                   StreetRun.Input.$trModule
                   StreetRun.Input.$tcInput1
                   0#
                   GHC.Types.krep$*) -}
743c84708aeff827c3842c98117be788
  $tcInput1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Input.$tcInput2) -}
26fa5ed5183f9a34341382e83278388c
  $tcInput2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Input"#) -}
019fe4f33077f63dffd5ae6e2b869853
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Input.$trModule3
                   StreetRun.Input.$trModule1) -}
bffb63595d4b089f54ddb3323a0c6c89
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Input.$trModule2) -}
cac7e8aca29a0abe89ff107928b81a0d
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Input"#) -}
62a0ed06a1f91cf08b26ee3378acc755
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Input.$trModule4) -}
a9b5b13b55f6ba9697f8c3b10a706565
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
db8770c70e212255784d57048dfb391b
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> KeyState.KeyState GHC.Types.Int
    -> KeyState.KeyState GHC.Types.Int
    -> KeyState.KeyState GHC.Types.Int
    -> KeyState.KeyState GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Show.ShowS
  {- Arity: 6,
     Strictness: <S,U><L,1*U(U,1*U)><L,1*U(U,1*U)><L,1*U(U,1*U)><L,1*U(U,1*U)><L,U>,
     Inline: [2] -}
debdce52acaa37df87e66131243c6c87
  data Input
    = Input {iSpace :: KeyState.KeyState GHC.Types.Int,
             iUp :: KeyState.KeyState GHC.Types.Int,
             iDown :: KeyState.KeyState GHC.Types.Int,
             iEscape :: KeyState.KeyState GHC.Types.Int,
             iQuit :: GHC.Types.Bool}
8de476ac606cbac3be07d10e3769ebef
  initInput :: StreetRun.Input.Input
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (StreetRun.Input.Input
                   (KeyState.initKeyState @ GHC.Types.Int)
                   (KeyState.initKeyState @ GHC.Types.Int)
                   (KeyState.initKeyState @ GHC.Types.Int)
                   (KeyState.initKeyState @ GHC.Types.Int)
                   GHC.Types.False) -}
instance GHC.Classes.Eq [StreetRun.Input.Input]
  = StreetRun.Input.$fEqInput
instance GHC.Show.Show [StreetRun.Input.Input]
  = StreetRun.Input.$fShowInput
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

