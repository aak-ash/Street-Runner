
==================== FINAL INTERFACE ====================
2019-04-25 22:11:49.423637181 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Shaky 8064
  interface hash: 39a071e86e94afdd01df6ec5eb010cd6
  ABI hash: 73c7299a5a081d70c95cc242cc2167f1
  export-list hash: ea6c0f37b81e16877b60fc8f184d2566
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd6997935d09daa6a687cb8eb0447281
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Shaky.updateQuake
module dependencies: StreetRun.Audio StreetRun.Building
                     StreetRun.Camera StreetRun.Common StreetRun.Config StreetRun.Font
                     StreetRun.Font_functions StreetRun.Frame StreetRun.Grass
                     StreetRun.Hurdle StreetRun.Hurdle_1 StreetRun.Input
                     StreetRun.Physics StreetRun.Quake StreetRun.Quake_BackStreet
                     StreetRun.Quake_Building StreetRun.Quake_Grass
                     StreetRun.Quake_Street StreetRun.Resource StreetRun.Runner
                     StreetRun.Runner_func_1 StreetRun.Runner_func_2 StreetRun.Sfx
                     StreetRun.Snag StreetRun.Sound_effects StreetRun.Step
                     StreetRun.Types
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      base16-bytestring-0.1.1.6 base64-bytestring-1.0.0.2
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 data-default-class-0.1.2.0
                      deepseq-1.4.4.0 distributive-0.6 dlist-0.8.0.6 errors-2.3.0
                      exceptions-0.10.1 free-5.1 ghc-boot-th-8.6.4 ghc-prim-0.5.3
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      kan-extensions-5.2 key-state-0.2.0 lens-4.17 libyaml-0.1.1.0
                      lifted-base-0.2.3.12 linear-1.20.8 monad-control-1.0.2.3 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17
                      safe-exceptions-0.1.7.0 scientific-0.3.6.2 sdl2-2.4.1.0
                      sdl2-image-2.0.0 sdl2-mixer-1.1.0 sdl2-ttf-2.0.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 text-conversions-0.3.0
                      th-abstraction-0.2.11.0 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.6.2 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.2
                      yaml-0.11.0.0
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         linear-1.20.8:Linear.Instances reflection-2.1.4:Data.Reflection
         stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Affine linear-1.20.8:Linear.Plucker
                         linear-1.20.8:Linear.Quaternion linear-1.20.8:Linear.V
                         linear-1.20.8:Linear.V0 linear-1.20.8:Linear.V1
                         linear-1.20.8:Linear.V2 linear-1.20.8:Linear.V3
                         linear-1.20.8:Linear.V4
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         sdl2-2.4.1.0:SDL.Audio sdl2-2.4.1.0:SDL.Event
                         sdl2-2.4.1.0:SDL.Exception sdl2-2.4.1.0:SDL.Hint
                         sdl2-2.4.1.0:SDL.Init sdl2-2.4.1.0:SDL.Input.GameController
                         sdl2-2.4.1.0:SDL.Input.Joystick sdl2-2.4.1.0:SDL.Input.Keyboard
                         sdl2-2.4.1.0:SDL.Input.Keyboard.Codes sdl2-2.4.1.0:SDL.Input.Mouse
                         sdl2-2.4.1.0:SDL.Internal.Types sdl2-2.4.1.0:SDL.Power
                         sdl2-2.4.1.0:SDL.Time sdl2-2.4.1.0:SDL.Video
                         sdl2-2.4.1.0:SDL.Video.OpenGL sdl2-2.4.1.0:SDL.Video.Renderer
                         sdl2-image-2.0.0:SDL.Image sdl2-ttf-2.0.2:SDL.Font
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Data.Functor 069b2025a03e32fd228e74a86a58a075
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  lens-4.17:Control.Lens 531af2b540e6d8d8ce856b6f46207d94
import  -/  lens-4.17:Control.Lens.Getter 79a8b254c85ab59ff7c11b644140539d
import  -/  lens-4.17:Control.Lens.Setter 54f8dcf2fae78610733fc46eb59386aa
import  -/  mtl-2.2.2:Control.Monad.State 753def63fe8e937dc636f11e5230745a
import  -/  mtl-2.2.2:Control.Monad.State.Class 94cc1438f3f9a3259fb0a2c56d3d0303
import  -/  StreetRun.Common ae88f6983cc973a550c263b8148feda8
  exports: 61e4030ffa8e91db9a54c7154cc3d232
  $sel:cvQuake:CommonVars 0f93d8dfb992b8c8431fd0dc1f0c54d0
  HasCommonVars 919b4731c41ba51a047a083b8a4cc9c7
  commonVars 0c52cc297fe39f10299147a803dcafdf
import  -/  StreetRun.Quake 534ecc20f0d0082a1dfa1bcf26bf997d
  exports: ad876ccc0312a03ee7f2e4b3c80c4160
  startQuake 1fefde292dc4702789b0b1ea301990b3
  stepQuake bba9b631bfbac6c17b33e69edb0e8c76
import  -/  StreetRun.Quake_BackStreet b655aa3f0985b36698a52eb293422bae
  exports: 74d66d7bc295214aa67aef6b0028b730
import  -/  StreetRun.Quake_Building 62453cda89c32691aab5de3709136976
  exports: f6a986805fd741a89c48d6a16b4d0f3b
import  -/  StreetRun.Quake_Grass 8acdd0976725ecdc0aae8148de0e5478
  exports: 5d42752bf51786e0aa2b859a9d6873ad
import  -/  StreetRun.Quake_Street bab4016d1b3ebad7a2b7c1ed285f4529
  exports: 18446ae1546a0ea859bc4b20f064313b
import  -/  StreetRun.Sfx 84ca787432fe5aa9b2474b5f085cc5ee
  exports: 40f6907587702e890ebc457991a6c86d
  Sfx'Quake 7772cfe5f552ab11dedfd737f5b63915
import  -/  StreetRun.Sound_effects a85edcbc0529355d0d823628a5187457
  exports: 4f505e3c45a92fc5611bc81b03b0dc47
  AudioSfx 59c875a47b0b4851b33ea127ea6242ec
  addSfxs ee402906cebf9450d6b91af8555bb717
import  -/  StreetRun.Step da8e238f737bd9817c61db5c1982dc0f
  exports: 4def855fa00facc907450d29f9f75fae
  smash 9b143f8d06c805775836741a712abedc
7a6ad2de2af58f3a4777b7555e7d7ebd
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Shaky.$trModule3
                   StreetRun.Shaky.$trModule1) -}
4e6aeae4d6ca570b91435de21a78e804
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Shaky.$trModule2) -}
77b6e8101bdb3face21b6b860add058c
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Shaky"#) -}
345fd58025d23d8b6136a2881a8699e8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Shaky.$trModule4) -}
1e22ca247228622759cad07a78ba962c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
edda01169c741ae2aabf5a81a1a76c35
  $wupdateQuake ::
    GHC.Base.Applicative m =>
    (forall a b. m a -> (a -> m b) -> m b)
    -> (forall a b. m a -> m b -> m b)
    -> ([StreetRun.Sfx.Sfx] -> m ())
    -> (Control.Monad.State.Class.MonadState s m,
        StreetRun.Common.HasCommonVars s) =>
       m ()
  {- Arity: 6,
     Strictness: <L,1*U(1*U(1*C1(C1(U)),A),A,A,A,A,A)><C(C(S)),1*C1(C1(U))><L,C(C1(U))><L,C(U)><L,U(1*U(A,1*C1(C1(U)),A,C(U),A),U,A,C(U))><L,C(C1(C(U)))>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   @ s
                   (ww :: GHC.Base.Applicative m)
                   (ww1 :: forall a b. m a -> (a -> m b) -> m b)
                   (ww2 :: forall a b. m a -> m b -> m b)
                   (ww3 :: [StreetRun.Sfx.Sfx] -> m ())
                   (w :: Control.Monad.State.Class.MonadState s m)
                   (w1 :: StreetRun.Common.HasCommonVars s) ->
                 ww1
                   @ (StreetRun.Step.Step StreetRun.Quake.Quake)
                   @ ()
                   (GHC.Base.fmap
                      @ m
                      (GHC.Base.$p1Applicative @ m ww)
                      @ StreetRun.Quake.Quake
                      @ (StreetRun.Step.Step StreetRun.Quake.Quake)
                      StreetRun.Quake.stepQuake
                      (case w of ww4 { Control.Monad.State.Class.C:MonadState ww5 ww6 ww7 ww8 ->
                       case ww5 of ww9 { GHC.Base.C:Monad ww10 ww11 ww12 ww13 ww14 ->
                       let {
                         g :: s -> Data.Functor.Const.Const StreetRun.Common.CommonVars s
                         = w1 `cast` (StreetRun.Common.N:HasCommonVars[0] <s>_N)
                             @ (Data.Functor.Const.Const StreetRun.Common.CommonVars)
                             (Data.Functor.Const.$fFunctorConst @ StreetRun.Common.CommonVars)
                             StreetRun.Shaky.updateQuake2
                               `cast`
                             (<StreetRun.Common.CommonVars>_R
                              ->_R Sym (Data.Functor.Const.N:Const[0]
                                            <*>_N
                                            <StreetRun.Common.CommonVars>_R
                                            <StreetRun.Common.CommonVars>_P))
                       } in
                       ww11
                         @ s
                         @ StreetRun.Quake.Quake
                         ww6
                         (\ (s1 :: s) ->
                          ww13
                            @ StreetRun.Quake.Quake
                            (case (g s1)
                                    `cast`
                                  (Data.Functor.Const.N:Const[0]
                                       <*>_N
                                       <StreetRun.Common.CommonVars>_R
                                       <s>_P) of wild { StreetRun.Common.CommonVars ds1 ds2 ds3 ->
                             ds2 })) } }))
                   (\ (sq :: StreetRun.Step.Step StreetRun.Quake.Quake) ->
                    ww2
                      @ ()
                      @ ()
                      (ww3
                         (case sq of wild {
                            StreetRun.Step.Step'Change ds1 ds2
                            -> case ds2 of wild1 {
                                 StreetRun.Quake.Quake'Progress ds3 -> StreetRun.Shaky.updateQuake1
                                 StreetRun.Quake.Quake'Dormant ipv
                                 -> GHC.Types.[] @ StreetRun.Sfx.Sfx }
                            StreetRun.Step.Step'Sustain ipv
                            -> GHC.Types.[] @ StreetRun.Sfx.Sfx }))
                      (let {
                         f :: s -> Data.Functor.Identity.Identity s
                         = let {
                             lvl :: StreetRun.Quake.Quake
                             = case sq of wild {
                                 StreetRun.Step.Step'Change ds1 a1 -> a1
                                 StreetRun.Step.Step'Sustain a1 -> a1 }
                           } in
                           w1 `cast` (StreetRun.Common.N:HasCommonVars[0] <s>_N)
                             @ Data.Functor.Identity.Identity
                             Data.Functor.Identity.$fFunctorIdentity
                             (\ (cv :: StreetRun.Common.CommonVars) ->
                              case cv of wild { StreetRun.Common.CommonVars ds ds1 ds2 ->
                              StreetRun.Common.CommonVars ds lvl ds2 })
                               `cast`
                             (<StreetRun.Common.CommonVars>_R
                              ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                            <StreetRun.Common.CommonVars>_R))
                       } in
                       Control.Monad.State.Class.state
                         @ s
                         @ m
                         w
                         @ ()
                         (\ (s1 :: s) ->
                          (GHC.Tuple.(),
                           (f s1) `cast` (Data.Functor.Identity.N:Identity[0] <s>_R)))))) -}
25a9813cc662819eb84c786b010f123f
  updateQuake ::
    (StreetRun.Sound_effects.AudioSfx m,
     Control.Monad.State.Class.MonadState s m,
     StreetRun.Common.HasCommonVars s) =>
    m ()
  {- Arity: 3,
     Strictness: <S(S(LC(C(S))LLL)LLL),1*U(1*U(1*U(1*U(1*C1(C1(U)),A),A,A,A,A,A),1*C1(C1(U)),C(C1(U)),A,A),A,C(U),A)><L,U(U(A,C(C1(U)),A,C(U),A),U,A,C(U))><L,C(C1(C(U)))>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   @ s
                   (w :: StreetRun.Sound_effects.AudioSfx m)
                   (w1 :: Control.Monad.State.Class.MonadState s m)
                   (w2 :: StreetRun.Common.HasCommonVars s) ->
                 case w of ww { StreetRun.Sound_effects.C:AudioSfx ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Base.C:Monad ww6 ww7 ww8 ww9 ww10 ->
                 StreetRun.Shaky.$wupdateQuake @ m @ s ww6 ww7 ww8 ww3 w1 w2 } }) -}
bbd517dad86de1ee788b9bd002fc14f0
  updateQuake1 :: [StreetRun.Sfx.Sfx]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ StreetRun.Sfx.Sfx
                   StreetRun.Sfx.Sfx'Quake
                   (GHC.Types.[] @ StreetRun.Sfx.Sfx)) -}
da839791ef3d5ddbbbbb3183bbaa8875
  updateQuake2 ::
    StreetRun.Common.CommonVars -> StreetRun.Common.CommonVars
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (v :: StreetRun.Common.CommonVars) -> v) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

