
==================== FINAL INTERFACE ====================
2019-04-25 19:02:30.160507792 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Engine.Runner 8064
  interface hash: 1c4cb096e1c0596161961a9d38768bd6
  ABI hash: 92f0fc10c09bba0933086b352f065d17
  export-list hash: c5bcac04dca39a47a3b45c58ae03f34c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 23bfc2de71c0e795adcc3e64d97ecb08
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Engine.Runner.runnerKey'keyName
  StreetRun.Engine.Runner.RunnerAction{StreetRun.Engine.Runner.RunnerAction'Duck StreetRun.Engine.Runner.RunnerAction'Hurt StreetRun.Engine.Runner.RunnerAction'Jump StreetRun.Engine.Runner.RunnerAction'Move}
  StreetRun.Engine.Runner.RunnerKey{StreetRun.Engine.Runner.RunnerKey'Hurt StreetRun.Engine.Runner.RunnerKey'Idle StreetRun.Engine.Runner.RunnerKey'Kick StreetRun.Engine.Runner.RunnerKey'Move StreetRun.Engine.Runner.RunnerKey'Sneak}
  StreetRun.Engine.Runner.RunnerState{StreetRun.Engine.Runner.RunnerState dsAction dsHeight dsHurt dsRecover}
module dependencies: StreetRun.Engine.Bird StreetRun.Engine.Camera
                     StreetRun.Engine.Frame StreetRun.Engine.Hurdle
                     StreetRun.Engine.Hurdle_1 StreetRun.Engine.Input
                     StreetRun.Engine.Lava StreetRun.Engine.Physics
                     StreetRun.Engine.Rock StreetRun.Engine.Step StreetRun.Engine.Types
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 deepseq-1.4.4.0
                      distributive-0.6 dlist-0.8.0.6 exceptions-0.10.1 free-5.1
                      ghc-boot-th-8.6.4 ghc-prim-0.5.3 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2 kan-extensions-5.2
                      key-state-0.2.0 lens-4.17 libyaml-0.1.1.0 linear-1.20.8 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17 scientific-0.3.6.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 th-abstraction-0.2.11.0
                      time-1.8.0.2 time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 transformers-compat-0.6.2
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.2 yaml-0.11.0.0
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Clock.TAI
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         reflection-2.1.4:Data.Reflection
         vector-0.12.0.2:Data.Vector.Unboxed stm-2.5.0.0:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show linear-1.20.8:Linear.Instances
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Plucker linear-1.20.8:Linear.Quaternion
                         linear-1.20.8:Linear.V linear-1.20.8:Linear.V0
                         linear-1.20.8:Linear.V1 linear-1.20.8:Linear.V2
                         linear-1.20.8:Linear.V3 linear-1.20.8:Linear.V4
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  animate-0.7.0:Animate 7c6496232245300f888f7e0dafeb231c
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Enum 87204abed08db8735fc0be5ab48689aa
import  -/  base-4.12.0.0:GHC.Err ea5e313ef4146b40b5d8b27aa168e736
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  key-state-0.2.0:KeyState f505d200ccd373546afa68666240df7e
import  -/  linear-1.20.8:Linear c66c613217f57f0236b62caf498b629a
import  -/  safe-0.3.17:Safe 436789855584374f8b9a2b8b149b8684
import  -/  StreetRun.Engine.Camera 0d08afdec3750fbbdc0418b2617fd227
  exports: 28c5883198ebf4b0d178869e108162bb
import  -/  StreetRun.Engine.Frame 973c95b7bcec2fc48e1076e11ca1bf2d
  exports: 2dfbfe0610e766c48ad204766a6f2079
import  -/  StreetRun.Engine.Hurdle 689b972d4e85183a54d17152c35d6caa
  exports: 6f36a0da9da2341b94122a10d2fdf78c
import  -/  StreetRun.Engine.Hurdle_1 5ea3a1a4734e7121c42d6618c17322cc
  exports: acd92b1d86ee6cc7a8f78e2746322600
import  -/  StreetRun.Engine.Input 8ed5dea8c2ff50fb4182cc619bb708e5
  exports: d2ebfd8f5e1fddf8ebe01df47fac8df1
import  -/  StreetRun.Engine.Physics 52ab0c4d5302ce013ba13455ebad6494
  exports: 354224f4972beeb3405c52a8946cdd1d
import  -/  StreetRun.Engine.Step f0a76cdedf79aa392987b0eab7ac5a30
  exports: 906f32750bdb93a941a3267931b38cf3
import  -/  StreetRun.Engine.Types 6986db6c9f4d1e9fc0edc9e119b1c392
  exports: c934b5ae3d6a2dfd0319fd3b47efce61
  Percent 34f2154fa29bed1ea1f6b21bbba55be5
import  -/  text-1.2.3.1:Data.Text 1e51a010d8f8a6fa41d8ea82d69faf13
import  -/  text-1.2.3.1:Data.Text.Internal 537e168590e8068f673f691833f78483
f5b919cb557b82fc77185acb78bdb7da
  $fBoundedRunnerKey ::
    GHC.Enum.Bounded StreetRun.Engine.Runner.RunnerKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Runner.RunnerKey
                  StreetRun.Engine.Runner.RunnerKey'Idle
                  StreetRun.Engine.Runner.RunnerKey'Sneak -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey :: GHC.Enum.Enum StreetRun.Engine.Runner.RunnerKey
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Runner.RunnerKey
                  StreetRun.Engine.Runner.$fEnumRunnerKey_$csucc
                  StreetRun.Engine.Runner.$fEnumRunnerKey_$cpred
                  StreetRun.Engine.Runner.$fEnumRunnerKey_$ctoEnum
                  StreetRun.Engine.Runner.$fEnumRunnerKey_$cfromEnum
                  StreetRun.Engine.Runner.$fEnumRunnerKey_$cenumFrom
                  StreetRun.Engine.Runner.$fEnumRunnerKey_$cenumFromThen
                  StreetRun.Engine.Runner.$fEnumRunnerKey_$cenumFromTo
                  StreetRun.Engine.Runner.$fEnumRunnerKey_$cenumFromThenTo -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey1 :: [StreetRun.Engine.Runner.RunnerKey]
  {- Unfolding: (StreetRun.Engine.Runner.$fEnumRunnerKey_go5 4#) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey2 :: [StreetRun.Engine.Runner.RunnerKey]
  {- Unfolding: (StreetRun.Engine.Runner.$fEnumRunnerKey_go5 3#) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey3 :: [StreetRun.Engine.Runner.RunnerKey]
  {- Unfolding: (StreetRun.Engine.Runner.$fEnumRunnerKey_go5 2#) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey4 :: [StreetRun.Engine.Runner.RunnerKey]
  {- Unfolding: (StreetRun.Engine.Runner.$fEnumRunnerKey_go5 1#) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey5 :: [StreetRun.Engine.Runner.RunnerKey]
  {- Unfolding: (StreetRun.Engine.Runner.$fEnumRunnerKey_go5 0#) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey6 :: StreetRun.Engine.Runner.RunnerKey
  {- Strictness: x -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey7 :: StreetRun.Engine.Runner.RunnerKey
  {- Strictness: x -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_$cenumFrom ::
    StreetRun.Engine.Runner.RunnerKey
    -> [StreetRun.Engine.Runner.RunnerKey]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: StreetRun.Engine.Runner.RunnerKey) ->
                 case a of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> StreetRun.Engine.Runner.$fEnumRunnerKey5
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> StreetRun.Engine.Runner.$fEnumRunnerKey4
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> StreetRun.Engine.Runner.$fEnumRunnerKey3
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> StreetRun.Engine.Runner.$fEnumRunnerKey2
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> StreetRun.Engine.Runner.$fEnumRunnerKey1 }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_$cenumFromThen ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey
    -> [StreetRun.Engine.Runner.RunnerKey]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_$cenumFromThenTo ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey
    -> [StreetRun.Engine.Runner.RunnerKey]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_$cenumFromTo ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey
    -> [StreetRun.Engine.Runner.RunnerKey]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: StreetRun.Engine.Runner.RunnerKey)
                   (y :: StreetRun.Engine.Runner.RunnerKey) ->
                 let {
                   $j :: GHC.Prim.Int# -> [StreetRun.Engine.Runner.RunnerKey]
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       StreetRun.Engine.Runner.RunnerKey'Idle
                       -> case GHC.Prim.># x1 0# of lwild {
                            DEFAULT -> StreetRun.Engine.Runner.$fEnumRunnerKey_go4 x1
                            1# -> GHC.Types.[] @ StreetRun.Engine.Runner.RunnerKey }
                       StreetRun.Engine.Runner.RunnerKey'Move
                       -> case GHC.Prim.># x1 1# of lwild {
                            DEFAULT -> StreetRun.Engine.Runner.$fEnumRunnerKey_go3 x1
                            1# -> GHC.Types.[] @ StreetRun.Engine.Runner.RunnerKey }
                       StreetRun.Engine.Runner.RunnerKey'Kick
                       -> case GHC.Prim.># x1 2# of lwild {
                            DEFAULT -> StreetRun.Engine.Runner.$fEnumRunnerKey_go2 x1
                            1# -> GHC.Types.[] @ StreetRun.Engine.Runner.RunnerKey }
                       StreetRun.Engine.Runner.RunnerKey'Hurt
                       -> case GHC.Prim.># x1 3# of lwild {
                            DEFAULT -> StreetRun.Engine.Runner.$fEnumRunnerKey_go1 x1
                            1# -> GHC.Types.[] @ StreetRun.Engine.Runner.RunnerKey }
                       StreetRun.Engine.Runner.RunnerKey'Sneak
                       -> case GHC.Prim.># x1 4# of lwild {
                            DEFAULT -> StreetRun.Engine.Runner.$fEnumRunnerKey_go x1
                            1# -> GHC.Types.[] @ StreetRun.Engine.Runner.RunnerKey } }
                 } in
                 case x of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle -> $j 0#
                   StreetRun.Engine.Runner.RunnerKey'Move -> $j 1#
                   StreetRun.Engine.Runner.RunnerKey'Kick -> $j 2#
                   StreetRun.Engine.Runner.RunnerKey'Hurt -> $j 3#
                   StreetRun.Engine.Runner.RunnerKey'Sneak -> $j 4# }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_$cfromEnum ::
    StreetRun.Engine.Runner.RunnerKey -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: StreetRun.Engine.Runner.RunnerKey) ->
                 case w of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle -> GHC.Types.I# 0#
                   StreetRun.Engine.Runner.RunnerKey'Move -> GHC.Types.I# 1#
                   StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.I# 2#
                   StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.I# 3#
                   StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.I# 4# }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_$cpred ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Engine.Runner.RunnerKey) ->
                 case a of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> StreetRun.Engine.Runner.$fEnumRunnerKey6
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> StreetRun.Engine.Runner.RunnerKey'Idle
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> StreetRun.Engine.Runner.RunnerKey'Move
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> StreetRun.Engine.Runner.RunnerKey'Kick
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> StreetRun.Engine.Runner.RunnerKey'Hurt }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_$csucc ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Engine.Runner.RunnerKey) ->
                 case a of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> StreetRun.Engine.Runner.RunnerKey'Move
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> StreetRun.Engine.Runner.RunnerKey'Kick
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> StreetRun.Engine.Runner.RunnerKey'Hurt
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> StreetRun.Engine.Runner.RunnerKey'Sneak
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> StreetRun.Engine.Runner.$fEnumRunnerKey7 }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_$ctoEnum ::
    GHC.Types.Int -> StreetRun.Engine.Runner.RunnerKey
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 StreetRun.Engine.Runner.$w$ctoEnum ww1 }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_go ::
    GHC.Prim.Int# -> [StreetRun.Engine.Runner.RunnerKey]
  {- Arity: 1, Strictness: <L,U>m2 -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_go1 ::
    GHC.Prim.Int# -> [StreetRun.Engine.Runner.RunnerKey]
  {- Arity: 1, Strictness: <L,U>m2 -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_go2 ::
    GHC.Prim.Int# -> [StreetRun.Engine.Runner.RunnerKey]
  {- Arity: 1, Strictness: <L,U>m2 -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_go3 ::
    GHC.Prim.Int# -> [StreetRun.Engine.Runner.RunnerKey]
  {- Arity: 1, Strictness: <L,U>m2 -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_go4 ::
    GHC.Prim.Int# -> [StreetRun.Engine.Runner.RunnerKey]
  {- Arity: 1, Strictness: <L,U>m2 -}
f5b919cb557b82fc77185acb78bdb7da
  $fEnumRunnerKey_go5 ::
    GHC.Prim.Int# -> [StreetRun.Engine.Runner.RunnerKey]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
9c14ca64586513d13cab5286052b5631
  $fEqRunnerAction ::
    GHC.Classes.Eq StreetRun.Engine.Runner.RunnerAction
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Runner.RunnerAction
                  StreetRun.Engine.Runner.$fEqRunnerAction_$c==
                  StreetRun.Engine.Runner.$fEqRunnerAction_$c/= -}
9c14ca64586513d13cab5286052b5631
  $fEqRunnerAction_$c/= ::
    StreetRun.Engine.Runner.RunnerAction
    -> StreetRun.Engine.Runner.RunnerAction -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Engine.Runner.RunnerAction)
                   (y :: StreetRun.Engine.Runner.RunnerAction) ->
                 case x of wild {
                   StreetRun.Engine.Runner.RunnerAction'Move
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerAction'Move -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerAction'Duck
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerAction'Duck -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerAction'Jump
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerAction'Jump -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerAction'Hurt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerAction'Hurt
                        -> GHC.Types.False } }) -}
9c14ca64586513d13cab5286052b5631
  $fEqRunnerAction_$c== ::
    StreetRun.Engine.Runner.RunnerAction
    -> StreetRun.Engine.Runner.RunnerAction -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: StreetRun.Engine.Runner.RunnerAction)
                   (ds1 :: StreetRun.Engine.Runner.RunnerAction) ->
                 case ds of wild {
                   StreetRun.Engine.Runner.RunnerAction'Move
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerAction'Move -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerAction'Duck
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerAction'Duck -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerAction'Jump
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerAction'Jump -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerAction'Hurt
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerAction'Hurt -> GHC.Types.True } }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEqRunnerKey :: GHC.Classes.Eq StreetRun.Engine.Runner.RunnerKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Runner.RunnerKey
                  StreetRun.Engine.Runner.$fEqRunnerKey_$c==
                  StreetRun.Engine.Runner.$fEqRunnerKey_$c/= -}
f5b919cb557b82fc77185acb78bdb7da
  $fEqRunnerKey_$c/= ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Engine.Runner.RunnerKey)
                   (y :: StreetRun.Engine.Runner.RunnerKey) ->
                 case x of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Idle -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Move -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.False } }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fEqRunnerKey_$c== ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: StreetRun.Engine.Runner.RunnerKey)
                   (ds1 :: StreetRun.Engine.Runner.RunnerKey) ->
                 case ds of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Idle -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Move -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.True } }) -}
8a2df4904a878996e6c672adcdcc81e9
  $fEqRunnerState ::
    GHC.Classes.Eq StreetRun.Engine.Runner.RunnerState
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Runner.RunnerState
                  StreetRun.Engine.Runner.$fEqRunnerState_$c==
                  StreetRun.Engine.Runner.$fEqRunnerState_$c/= -}
8a2df4904a878996e6c672adcdcc81e9
  $fEqRunnerState_$c/= ::
    StreetRun.Engine.Runner.RunnerState
    -> StreetRun.Engine.Runner.RunnerState -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Engine.Runner.RunnerState)
                   (y :: StreetRun.Engine.Runner.RunnerState) ->
                 case StreetRun.Engine.Runner.$fEqRunnerState_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8a2df4904a878996e6c672adcdcc81e9
  $fEqRunnerState_$c== ::
    StreetRun.Engine.Runner.RunnerState
    -> StreetRun.Engine.Runner.RunnerState -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U,1*U,1*U,1*U)><S(SLLL),1*U(1*U,1*U,1*U,1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Engine.Runner.RunnerState)
                   (w1 :: StreetRun.Engine.Runner.RunnerState) ->
                 case w of ww { StreetRun.Engine.Runner.RunnerState ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { StreetRun.Engine.Runner.RunnerState ww6 ww7 ww8 ww9 ->
                 StreetRun.Engine.Runner.$w$c==
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fKeyNameRunnerKey ::
    Animate.KeyName StreetRun.Engine.Runner.RunnerKey
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                StreetRun.Engine.Runner.runnerKey'keyName
                  `cast`
                (Sym (Animate.N:KeyName[0]
                          <StreetRun.Engine.Runner.RunnerKey>_N)) -}
f5b919cb557b82fc77185acb78bdb7da
  $fOrdRunnerKey :: GHC.Classes.Ord StreetRun.Engine.Runner.RunnerKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Runner.RunnerKey
                  StreetRun.Engine.Runner.$fEqRunnerKey
                  StreetRun.Engine.Runner.$fOrdRunnerKey_$ccompare
                  StreetRun.Engine.Runner.$fOrdRunnerKey_$c<
                  StreetRun.Engine.Runner.$fOrdRunnerKey_$c<=
                  StreetRun.Engine.Runner.$fOrdRunnerKey_$c>
                  StreetRun.Engine.Runner.$fOrdRunnerKey_$c>=
                  StreetRun.Engine.Runner.$fOrdRunnerKey_$cmax
                  StreetRun.Engine.Runner.$fOrdRunnerKey_$cmin -}
f5b919cb557b82fc77185acb78bdb7da
  $fOrdRunnerKey_$c< ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: StreetRun.Engine.Runner.RunnerKey)
                   (b :: StreetRun.Engine.Runner.RunnerKey) ->
                 case a of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> case b of wild1 {
                        StreetRun.Engine.Runner.RunnerKey'Idle -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Move -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.True }
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fOrdRunnerKey_$c<= ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: StreetRun.Engine.Runner.RunnerKey)
                   (b :: StreetRun.Engine.Runner.RunnerKey) ->
                 case b of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> case a of wild1 {
                        StreetRun.Engine.Runner.RunnerKey'Idle -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Move -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> case a of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> case a of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> case a of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> case a of wild1 { DEFAULT -> GHC.Types.True } }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fOrdRunnerKey_$c> ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: StreetRun.Engine.Runner.RunnerKey)
                   (b :: StreetRun.Engine.Runner.RunnerKey) ->
                 StreetRun.Engine.Runner.$fOrdRunnerKey_$c< b a) -}
f5b919cb557b82fc77185acb78bdb7da
  $fOrdRunnerKey_$c>= ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: StreetRun.Engine.Runner.RunnerKey)
                   (b :: StreetRun.Engine.Runner.RunnerKey) ->
                 case a of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> case b of wild1 {
                        StreetRun.Engine.Runner.RunnerKey'Idle -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Move -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.False }
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fOrdRunnerKey_$ccompare ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: StreetRun.Engine.Runner.RunnerKey)
                   (b :: StreetRun.Engine.Runner.RunnerKey) ->
                 case a of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> case b of wild1 {
                        StreetRun.Engine.Runner.RunnerKey'Idle -> GHC.Types.EQ
                        StreetRun.Engine.Runner.RunnerKey'Move -> GHC.Types.LT
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.LT
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.LT
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.LT }
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> case b of wild1 {
                        StreetRun.Engine.Runner.RunnerKey'Idle -> GHC.Types.GT
                        StreetRun.Engine.Runner.RunnerKey'Move -> GHC.Types.EQ
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.LT
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.LT
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.LT }
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        StreetRun.Engine.Runner.RunnerKey'Kick -> GHC.Types.EQ
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.LT
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.LT }
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        StreetRun.Engine.Runner.RunnerKey'Hurt -> GHC.Types.EQ
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.LT }
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        StreetRun.Engine.Runner.RunnerKey'Sneak -> GHC.Types.EQ } }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fOrdRunnerKey_$cmax ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: StreetRun.Engine.Runner.RunnerKey)
                   (y :: StreetRun.Engine.Runner.RunnerKey) ->
                 case y of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle -> x
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> case x of wild1 {
                        DEFAULT -> StreetRun.Engine.Runner.RunnerKey'Move
                        StreetRun.Engine.Runner.RunnerKey'Kick
                        -> StreetRun.Engine.Runner.RunnerKey'Kick
                        StreetRun.Engine.Runner.RunnerKey'Hurt
                        -> StreetRun.Engine.Runner.RunnerKey'Hurt
                        StreetRun.Engine.Runner.RunnerKey'Sneak
                        -> StreetRun.Engine.Runner.RunnerKey'Sneak }
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> case x of wild1 {
                        DEFAULT -> StreetRun.Engine.Runner.RunnerKey'Kick
                        StreetRun.Engine.Runner.RunnerKey'Hurt
                        -> StreetRun.Engine.Runner.RunnerKey'Hurt
                        StreetRun.Engine.Runner.RunnerKey'Sneak
                        -> StreetRun.Engine.Runner.RunnerKey'Sneak }
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> case x of wild1 {
                        DEFAULT -> StreetRun.Engine.Runner.RunnerKey'Hurt
                        StreetRun.Engine.Runner.RunnerKey'Sneak
                        -> StreetRun.Engine.Runner.RunnerKey'Sneak }
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> case x of wild1 { DEFAULT ->
                      StreetRun.Engine.Runner.RunnerKey'Sneak } }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fOrdRunnerKey_$cmin ::
    StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey
    -> StreetRun.Engine.Runner.RunnerKey
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: StreetRun.Engine.Runner.RunnerKey)
                   (y :: StreetRun.Engine.Runner.RunnerKey) ->
                 case y of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> case x of wild1 { DEFAULT ->
                      StreetRun.Engine.Runner.RunnerKey'Idle }
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> case x of wild1 {
                        DEFAULT -> wild1
                        StreetRun.Engine.Runner.RunnerKey'Kick
                        -> StreetRun.Engine.Runner.RunnerKey'Move
                        StreetRun.Engine.Runner.RunnerKey'Hurt
                        -> StreetRun.Engine.Runner.RunnerKey'Move
                        StreetRun.Engine.Runner.RunnerKey'Sneak
                        -> StreetRun.Engine.Runner.RunnerKey'Move }
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> case x of wild1 {
                        DEFAULT -> wild1
                        StreetRun.Engine.Runner.RunnerKey'Hurt
                        -> StreetRun.Engine.Runner.RunnerKey'Kick
                        StreetRun.Engine.Runner.RunnerKey'Sneak
                        -> StreetRun.Engine.Runner.RunnerKey'Kick }
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> case x of wild1 {
                        DEFAULT -> wild1
                        StreetRun.Engine.Runner.RunnerKey'Sneak
                        -> StreetRun.Engine.Runner.RunnerKey'Hurt }
                   StreetRun.Engine.Runner.RunnerKey'Sneak -> x }) -}
9c14ca64586513d13cab5286052b5631
  $fShowRunnerAction ::
    GHC.Show.Show StreetRun.Engine.Runner.RunnerAction
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Runner.RunnerAction
                  StreetRun.Engine.Runner.$fShowRunnerAction_$cshowsPrec
                  StreetRun.Engine.Runner.$fShowRunnerAction_$cshow
                  StreetRun.Engine.Runner.$fShowRunnerAction_$cshowList -}
2f57c06b453815bffb211552c368e453
  $fShowRunnerAction1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Engine.Runner.$fShowRunnerAction2) -}
b4e1ebae9d8b2b9c510aff872ce036ac
  $fShowRunnerAction2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerAction'Hurt"#) -}
fa45fee449b40c5c797f7f528436f09f
  $fShowRunnerAction3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Engine.Runner.$fShowRunnerAction4) -}
3baee75d8973b4bdaab03d1f658a9cbf
  $fShowRunnerAction4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerAction'Jump"#) -}
e663dbec3c62e4d0c09cbe71984633b2
  $fShowRunnerAction5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Engine.Runner.$fShowRunnerAction6) -}
cdba5b263e58d966bd544d5db99249d3
  $fShowRunnerAction6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerAction'Duck"#) -}
b77c86eb998d0cc75fd760cbb1c1a0b3
  $fShowRunnerAction7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Engine.Runner.$fShowRunnerAction8) -}
4b039a4fa13f56be91fc155611b43c59
  $fShowRunnerAction8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerAction'Move"#) -}
9c14ca64586513d13cab5286052b5631
  $fShowRunnerAction_$cshow ::
    StreetRun.Engine.Runner.RunnerAction -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Engine.Runner.RunnerAction) ->
                 case x of wild {
                   StreetRun.Engine.Runner.RunnerAction'Move
                   -> StreetRun.Engine.Runner.$fShowRunnerAction7
                   StreetRun.Engine.Runner.RunnerAction'Duck
                   -> StreetRun.Engine.Runner.$fShowRunnerAction5
                   StreetRun.Engine.Runner.RunnerAction'Jump
                   -> StreetRun.Engine.Runner.$fShowRunnerAction3
                   StreetRun.Engine.Runner.RunnerAction'Hurt
                   -> StreetRun.Engine.Runner.$fShowRunnerAction1 }) -}
9c14ca64586513d13cab5286052b5631
  $fShowRunnerAction_$cshowList ::
    [StreetRun.Engine.Runner.RunnerAction] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Engine.Runner.RunnerAction])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Engine.Runner.RunnerAction
                   StreetRun.Engine.Runner.$w$cshowsPrec
                   ls
                   s) -}
9c14ca64586513d13cab5286052b5631
  $fShowRunnerAction_$cshowsPrec ::
    GHC.Types.Int
    -> StreetRun.Engine.Runner.RunnerAction -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: StreetRun.Engine.Runner.RunnerAction)
                   (w2 :: GHC.Base.String) ->
                 StreetRun.Engine.Runner.$w$cshowsPrec w1 w2) -}
f5b919cb557b82fc77185acb78bdb7da
  $fShowRunnerKey :: GHC.Show.Show StreetRun.Engine.Runner.RunnerKey
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Runner.RunnerKey
                  StreetRun.Engine.Runner.$fShowRunnerKey_$cshowsPrec
                  StreetRun.Engine.Runner.$fShowRunnerKey_$cshow
                  StreetRun.Engine.Runner.$fShowRunnerKey_$cshowList -}
570b125c6ffed4f1bb480717ce6a55c5
  $fShowRunnerKey1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Engine.Runner.$fShowRunnerKey2) -}
b14d1eb45375a85ea7c55593b7d474f6
  $fShowRunnerKey10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerKey'Idle"#) -}
5817b1c41983d8fdc03d84e449e1b563
  $fShowRunnerKey2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerKey'Sneak"#) -}
7bd8a60bb396ab7a9015e2c03b97788c
  $fShowRunnerKey3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Engine.Runner.$fShowRunnerKey4) -}
fb5f6441ddac968f4e5fa1e79fb06500
  $fShowRunnerKey4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerKey'Hurt"#) -}
a4f9880639fce21767b8da21b52d261b
  $fShowRunnerKey5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Engine.Runner.$fShowRunnerKey6) -}
718ee8c028ec701e9fdc8de54cc2a67b
  $fShowRunnerKey6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerKey'Kick"#) -}
5716f7e786e21422dc15ab12070269dd
  $fShowRunnerKey7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Engine.Runner.$fShowRunnerKey8) -}
695aefc5089bab23d80a36ca9308073d
  $fShowRunnerKey8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerKey'Move"#) -}
0eda81c8c7e274210d32e6b0a279a8d5
  $fShowRunnerKey9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Engine.Runner.$fShowRunnerKey10) -}
f5b919cb557b82fc77185acb78bdb7da
  $fShowRunnerKey_$cshow ::
    StreetRun.Engine.Runner.RunnerKey -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Engine.Runner.RunnerKey) ->
                 case x of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> StreetRun.Engine.Runner.$fShowRunnerKey9
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> StreetRun.Engine.Runner.$fShowRunnerKey7
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> StreetRun.Engine.Runner.$fShowRunnerKey5
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> StreetRun.Engine.Runner.$fShowRunnerKey3
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> StreetRun.Engine.Runner.$fShowRunnerKey1 }) -}
f5b919cb557b82fc77185acb78bdb7da
  $fShowRunnerKey_$cshowList ::
    [StreetRun.Engine.Runner.RunnerKey] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Engine.Runner.RunnerKey])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Engine.Runner.RunnerKey
                   StreetRun.Engine.Runner.$w$cshowsPrec1
                   ls
                   s) -}
f5b919cb557b82fc77185acb78bdb7da
  $fShowRunnerKey_$cshowsPrec ::
    GHC.Types.Int
    -> StreetRun.Engine.Runner.RunnerKey -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: StreetRun.Engine.Runner.RunnerKey)
                   (w2 :: GHC.Base.String) ->
                 StreetRun.Engine.Runner.$w$cshowsPrec1 w1 w2) -}
8a2df4904a878996e6c672adcdcc81e9
  $fShowRunnerState ::
    GHC.Show.Show StreetRun.Engine.Runner.RunnerState
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Runner.RunnerState
                  StreetRun.Engine.Runner.$fShowRunnerState_$cshowsPrec
                  StreetRun.Engine.Runner.$fShowRunnerState_$cshow
                  StreetRun.Engine.Runner.$fShowRunnerState_$cshowList -}
8a2df4904a878996e6c672adcdcc81e9
  $fShowRunnerState1 ::
    StreetRun.Engine.Runner.RunnerState -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,1*U,1*U,1*U)>,
     Unfolding: (\ (w :: StreetRun.Engine.Runner.RunnerState) ->
                 case w of ww { StreetRun.Engine.Runner.RunnerState ww1 ww2 ww3 ww4 ->
                 StreetRun.Engine.Runner.$w$cshowsPrec2 0# ww1 ww2 ww3 ww4 }) -}
7734e95e81ea77c588a6bc70013c4411
  $fShowRunnerState2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
cccaad9dae4dc627125448530ee9dfb6
  $fShowRunnerState3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dsRecover = "#) -}
2474b7b18f391bb7740962a7ca75ea68
  $fShowRunnerState4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dsHurt = "#) -}
78a85d97cfb0342bcbb8edfca9d9f365
  $fShowRunnerState5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dsHeight = "#) -}
e6eaceecb2930977867dfeb4c0b0feb9
  $fShowRunnerState6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dsAction = "#) -}
7613adc4f6c449e3945c89ddd4ccd336
  $fShowRunnerState7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerState {"#) -}
7ed5795bb2a431d7c3b53b4da7c6fc17
  $fShowRunnerState8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
8a2df4904a878996e6c672adcdcc81e9
  $fShowRunnerState_$cshow ::
    StreetRun.Engine.Runner.RunnerState -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Engine.Runner.RunnerState) ->
                 StreetRun.Engine.Runner.$fShowRunnerState_$cshowsPrec
                   StreetRun.Engine.Runner.$fShowRunnerState8
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8a2df4904a878996e6c672adcdcc81e9
  $fShowRunnerState_$cshowList ::
    [StreetRun.Engine.Runner.RunnerState] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Engine.Runner.RunnerState])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Engine.Runner.RunnerState
                   StreetRun.Engine.Runner.$fShowRunnerState1
                   ls
                   s) -}
8a2df4904a878996e6c672adcdcc81e9
  $fShowRunnerState_$cshowsPrec ::
    GHC.Types.Int
    -> StreetRun.Engine.Runner.RunnerState -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,1*U,1*U,1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: StreetRun.Engine.Runner.RunnerState) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { StreetRun.Engine.Runner.RunnerState ww3 ww4 ww5 ww6 ->
                 StreetRun.Engine.Runner.$w$cshowsPrec2 ww1 ww3 ww4 ww5 ww6 } }) -}
8a2df4904a878996e6c672adcdcc81e9
  $sel:dsAction:RunnerState ::
    StreetRun.Engine.Runner.RunnerState
    -> StreetRun.Engine.Runner.RunnerAction
  RecSel Left StreetRun.Engine.Runner.RunnerState
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Engine.Runner.RunnerState) ->
                 case ds of wild { StreetRun.Engine.Runner.RunnerState ds1 ds2 ds3 ds4 ->
                 ds1 }) -}
8a2df4904a878996e6c672adcdcc81e9
  $sel:dsHeight:RunnerState ::
    StreetRun.Engine.Runner.RunnerState
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
  RecSel Left StreetRun.Engine.Runner.RunnerState
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Engine.Runner.RunnerState) ->
                 case ds of wild { StreetRun.Engine.Runner.RunnerState ds1 ds2 ds3 ds4 ->
                 ds2 }) -}
8a2df4904a878996e6c672adcdcc81e9
  $sel:dsHurt:RunnerState ::
    StreetRun.Engine.Runner.RunnerState
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
  RecSel Left StreetRun.Engine.Runner.RunnerState
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Engine.Runner.RunnerState) ->
                 case ds of wild { StreetRun.Engine.Runner.RunnerState ds1 ds2 ds3 ds4 ->
                 ds3 }) -}
8a2df4904a878996e6c672adcdcc81e9
  $sel:dsRecover:RunnerState ::
    StreetRun.Engine.Runner.RunnerState
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
  RecSel Left StreetRun.Engine.Runner.RunnerState
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Engine.Runner.RunnerState) ->
                 case ds of wild { StreetRun.Engine.Runner.RunnerState ds1 ds2 ds3 ds4 ->
                 ds4 }) -}
efe6ea381ba9dfbd368e6dd578a0b0d2
  $tc'RunnerAction'Duck :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5092318971957258849##
                   5565842508352322627##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tc'RunnerAction'Duck2
                   0#
                   StreetRun.Engine.Runner.$tc'RunnerAction'Duck1) -}
9b1ea928f830235f1dd1ef8c267b90ea
  $tc'RunnerAction'Duck1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
316991099e15c0c3c5f1641f2c74bcaa
  $tc'RunnerAction'Duck2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tc'RunnerAction'Duck3) -}
17bcce1b32b5f416b6130a56e7a63caa
  $tc'RunnerAction'Duck3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunnerAction'Duck"#) -}
aa9c7ee3fff84b69d82efe6f60e384d6
  $tc'RunnerAction'Hurt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13318265952123441028##
                   2992445759623288142##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tc'RunnerAction'Hurt1
                   0#
                   StreetRun.Engine.Runner.$tc'RunnerAction'Duck1) -}
54a4365497e8d9a52e6d5d416d2f1453
  $tc'RunnerAction'Hurt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tc'RunnerAction'Hurt2) -}
967a7278f5a0fb2c284eff2d13cb279b
  $tc'RunnerAction'Hurt2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunnerAction'Hurt"#) -}
27fa5350414a6135ddc24dd6b148022e
  $tc'RunnerAction'Jump :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8711460811056186770##
                   2429692159836141138##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tc'RunnerAction'Jump1
                   0#
                   StreetRun.Engine.Runner.$tc'RunnerAction'Duck1) -}
e056946f284ff9ef1565e9cc2a7951b7
  $tc'RunnerAction'Jump1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tc'RunnerAction'Jump2) -}
f6b9497cb52ee72d2689e9c1d9731ecc
  $tc'RunnerAction'Jump2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunnerAction'Jump"#) -}
8cf2c91d9d3381e35dcf1f2144636a88
  $tc'RunnerAction'Move :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1463624262459067647##
                   11371496257242903590##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tc'RunnerAction'Move1
                   0#
                   StreetRun.Engine.Runner.$tc'RunnerAction'Duck1) -}
3b81d1d86674bdc6c8263e42e2ae0dcc
  $tc'RunnerAction'Move1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tc'RunnerAction'Move2) -}
9b853a10ab893dc18dd57dff426e0117
  $tc'RunnerAction'Move2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunnerAction'Move"#) -}
7dbc0f68ecb20e2d9b177fc0fc3636c8
  $tc'RunnerKey'Hurt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3200854634993289024##
                   14643338008927929508##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tc'RunnerKey'Hurt2
                   0#
                   StreetRun.Engine.Runner.$tc'RunnerKey'Hurt1) -}
03708105d360df2fec6c4fa27db1df0d
  $tc'RunnerKey'Hurt1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
c28c3bb93c6b6112caca0922ca2875cf
  $tc'RunnerKey'Hurt2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tc'RunnerKey'Hurt3) -}
ce44c730bac50db761f83daf1dc322d9
  $tc'RunnerKey'Hurt3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunnerKey'Hurt"#) -}
0c484cd3e4e7893fb4838a612e110909
  $tc'RunnerKey'Idle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15645899751840550739##
                   10336057877011385148##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tc'RunnerKey'Idle1
                   0#
                   StreetRun.Engine.Runner.$tc'RunnerKey'Hurt1) -}
28680a299673bea84cad6efdab84a61c
  $tc'RunnerKey'Idle1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tc'RunnerKey'Idle2) -}
f299b85103c2a9a59610a4ea0ac95ffe
  $tc'RunnerKey'Idle2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunnerKey'Idle"#) -}
3203094d9755ba1a5a7389e156572f3e
  $tc'RunnerKey'Kick :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16137150100244029905##
                   1498980235863293753##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tc'RunnerKey'Kick1
                   0#
                   StreetRun.Engine.Runner.$tc'RunnerKey'Hurt1) -}
6a8b23e3491ae02daafaa7fa67ad65a9
  $tc'RunnerKey'Kick1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tc'RunnerKey'Kick2) -}
70e657a3cb795d0ceacf57c9908639d3
  $tc'RunnerKey'Kick2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunnerKey'Kick"#) -}
152bc7e9273d3bb2bd45f41d1ecba89d
  $tc'RunnerKey'Move :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15970104540860058960##
                   10065691197661548731##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tc'RunnerKey'Move1
                   0#
                   StreetRun.Engine.Runner.$tc'RunnerKey'Hurt1) -}
3627f2a1d573ce7fb68929e6bbcbb43d
  $tc'RunnerKey'Move1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tc'RunnerKey'Move2) -}
4cc0b94e33247e598bb04175ce16c4f5
  $tc'RunnerKey'Move2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunnerKey'Move"#) -}
614bf1603c06ec5dea29e5ff4f4befd6
  $tc'RunnerKey'Sneak :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13187807737886422682##
                   2688181677910814431##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tc'RunnerKey'Sneak1
                   0#
                   StreetRun.Engine.Runner.$tc'RunnerKey'Hurt1) -}
3447a46be75be5e8bbabee16cdb7495c
  $tc'RunnerKey'Sneak1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tc'RunnerKey'Sneak2) -}
d84cea19ff241b08146196da02c75daf
  $tc'RunnerKey'Sneak2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunnerKey'Sneak"#) -}
956d23cef9547e213643d06015f9c91a
  $tc'RunnerState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   495161182346405425##
                   1034136131200049626##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tc'RunnerState2
                   0#
                   StreetRun.Engine.Runner.$tc'RunnerState1) -}
2dcc79256eb35cb2c4f152e1d2db1e52
  $tc'RunnerState1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6c2eb3e216ab8ac67c01a1c1ac25038a
  $tc'RunnerState2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tc'RunnerState3) -}
c08045fca577d7921f2e5927e680c611
  $tc'RunnerState3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RunnerState"#) -}
13693b3ec8c42d37fdd31beea96c157a
  $tcRunnerAction :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8477604990062920601##
                   12177540973863331975##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tcRunnerAction1
                   0#
                   GHC.Types.krep$*) -}
81b1d4431f271700d84d9b47fb5e4e85
  $tcRunnerAction1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tcRunnerAction2) -}
6361637a9164f885dba76d0fcb502706
  $tcRunnerAction2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerAction"#) -}
38847707ea96a1337314b55433624ed4
  $tcRunnerKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10000973236474331052##
                   3766696084155929046##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tcRunnerKey1
                   0#
                   GHC.Types.krep$*) -}
e2d5d83aab2a427bf4b60f002926f899
  $tcRunnerKey1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tcRunnerKey2) -}
1520fe5021d3b67057bb71182d95b650
  $tcRunnerKey2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerKey"#) -}
f63244f259a94489c2460bc6b2220ea2
  $tcRunnerState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8271636485465776148##
                   1852022213972405728##
                   StreetRun.Engine.Runner.$trModule
                   StreetRun.Engine.Runner.$tcRunnerState1
                   0#
                   GHC.Types.krep$*) -}
612fe5d70ce3211353decff4b4272a11
  $tcRunnerState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$tcRunnerState2) -}
7a359ee920274622e4952b286add0ea6
  $tcRunnerState2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RunnerState"#) -}
0d2b6b477718f456febb631229d69a58
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Engine.Runner.$trModule3
                   StreetRun.Engine.Runner.$trModule1) -}
4430ff6311096b9ebd7a4085d82f7baa
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$trModule2) -}
53da800dec30a66f6985cb7463f2f1bc
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Engine.Runner"#) -}
3b8277455e1bfc4c299512c5966a5043
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Runner.$trModule4) -}
0081a02d220ef98fc1c5b7963b383b15
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
4bdb4b39cb26b1ee5005613b8b25abf0
  $w$c== ::
    StreetRun.Engine.Runner.RunnerAction
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
    -> StreetRun.Engine.Runner.RunnerAction
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [2],
     Unfolding: (\ (ww :: StreetRun.Engine.Runner.RunnerAction)
                   (ww1 :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent)
                   (ww2 :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent)
                   (ww3 :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent)
                   (ww4 :: StreetRun.Engine.Runner.RunnerAction)
                   (ww5 :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent)
                   (ww6 :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent)
                   (ww7 :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent) ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = let {
                       $j1 :: GHC.Types.Bool <join 0>
                       = let {
                           $j2 :: GHC.Types.Bool <join 0>
                           = case ww3 of wild {
                               GHC.Maybe.Nothing
                               -> case ww7 of wild1 {
                                    GHC.Maybe.Nothing -> GHC.Types.True
                                    GHC.Maybe.Just ipv -> GHC.Types.False }
                               GHC.Maybe.Just a1
                               -> case ww7 of wild1 {
                                    GHC.Maybe.Nothing -> GHC.Types.False
                                    GHC.Maybe.Just b1
                                    -> GHC.Classes.eqFloat
                                         a1 `cast` (StreetRun.Engine.Types.N:Percent[0])
                                         b1 `cast` (StreetRun.Engine.Types.N:Percent[0]) } }
                         } in
                         case ww2 of wild {
                           GHC.Maybe.Nothing
                           -> case ww6 of wild1 {
                                GHC.Maybe.Nothing -> $j2 GHC.Maybe.Just ipv -> GHC.Types.False }
                           GHC.Maybe.Just a1
                           -> case ww6 of wild1 {
                                GHC.Maybe.Nothing -> GHC.Types.False
                                GHC.Maybe.Just b1
                                -> case a1
                                          `cast`
                                        (StreetRun.Engine.Types.N:Percent[0]) of wild2 { GHC.Types.F# x ->
                                   case b1
                                          `cast`
                                        (StreetRun.Engine.Types.N:Percent[0]) of wild3 { GHC.Types.F# y ->
                                   case GHC.Prim.eqFloat# x y of lwild {
                                     DEFAULT -> GHC.Types.False 1# -> $j2 } } } } }
                     } in
                     case ww1 of wild {
                       GHC.Maybe.Nothing
                       -> case ww5 of wild1 {
                            GHC.Maybe.Nothing -> $j1 GHC.Maybe.Just ipv -> GHC.Types.False }
                       GHC.Maybe.Just a1
                       -> case ww5 of wild1 {
                            GHC.Maybe.Nothing -> GHC.Types.False
                            GHC.Maybe.Just b1
                            -> case a1
                                      `cast`
                                    (StreetRun.Engine.Types.N:Percent[0]) of wild2 { GHC.Types.F# x ->
                               case b1
                                      `cast`
                                    (StreetRun.Engine.Types.N:Percent[0]) of wild3 { GHC.Types.F# y ->
                               case GHC.Prim.eqFloat# x y of lwild {
                                 DEFAULT -> GHC.Types.False 1# -> $j1 } } } } }
                 } in
                 case ww of wild {
                   StreetRun.Engine.Runner.RunnerAction'Move
                   -> case ww4 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerAction'Move -> $j }
                   StreetRun.Engine.Runner.RunnerAction'Duck
                   -> case ww4 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerAction'Duck -> $j }
                   StreetRun.Engine.Runner.RunnerAction'Jump
                   -> case ww4 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerAction'Jump -> $j }
                   StreetRun.Engine.Runner.RunnerAction'Hurt
                   -> case ww4 of wild1 {
                        DEFAULT -> GHC.Types.False
                        StreetRun.Engine.Runner.RunnerAction'Hurt -> $j } }) -}
9c14ca64586513d13cab5286052b5631
  $w$cshowsPrec ::
    StreetRun.Engine.Runner.RunnerAction
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: StreetRun.Engine.Runner.RunnerAction)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   StreetRun.Engine.Runner.RunnerAction'Move
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        StreetRun.Engine.Runner.$fShowRunnerAction7
                        w1
                   StreetRun.Engine.Runner.RunnerAction'Duck
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        StreetRun.Engine.Runner.$fShowRunnerAction5
                        w1
                   StreetRun.Engine.Runner.RunnerAction'Jump
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        StreetRun.Engine.Runner.$fShowRunnerAction3
                        w1
                   StreetRun.Engine.Runner.RunnerAction'Hurt
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        StreetRun.Engine.Runner.$fShowRunnerAction1
                        w1 }) -}
f5b919cb557b82fc77185acb78bdb7da
  $w$cshowsPrec1 ::
    StreetRun.Engine.Runner.RunnerKey
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: StreetRun.Engine.Runner.RunnerKey)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        StreetRun.Engine.Runner.$fShowRunnerKey9
                        w1
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        StreetRun.Engine.Runner.$fShowRunnerKey7
                        w1
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        StreetRun.Engine.Runner.$fShowRunnerKey5
                        w1
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        StreetRun.Engine.Runner.$fShowRunnerKey3
                        w1
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        StreetRun.Engine.Runner.$fShowRunnerKey1
                        w1 }) -}
e58386a490043a76ac51b872e58e601e
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> StreetRun.Engine.Runner.RunnerAction
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
    -> GHC.Maybe.Maybe StreetRun.Engine.Types.Percent
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,U><L,1*U><L,1*U><L,1*U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: StreetRun.Engine.Runner.RunnerAction)
                   (ww2 :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent)
                   (ww3 :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent)
                   (ww4 :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ StreetRun.Engine.Types.Percent
                       StreetRun.Engine.Types.$fShowPercent
                       StreetRun.Engine.Runner.$fShowRunnerState8
                       ww2
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ StreetRun.Engine.Types.Percent
                       StreetRun.Engine.Types.$fShowPercent
                       StreetRun.Engine.Runner.$fShowRunnerState8
                       ww3
                 } in
                 let {
                   f2 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ StreetRun.Engine.Types.Percent
                       StreetRun.Engine.Types.$fShowPercent
                       StreetRun.Engine.Runner.$fShowRunnerState8
                       ww4
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       StreetRun.Engine.Runner.$fShowRunnerState7
                       (GHC.CString.unpackAppendCString#
                          StreetRun.Engine.Runner.$fShowRunnerState6
                          (StreetRun.Engine.Runner.$w$cshowsPrec
                             ww1
                             (GHC.Base.++
                                @ GHC.Types.Char
                                GHC.Show.showCommaSpace1
                                (GHC.CString.unpackAppendCString#
                                   StreetRun.Engine.Runner.$fShowRunnerState5
                                   (f (GHC.Base.++
                                         @ GHC.Types.Char
                                         GHC.Show.showCommaSpace1
                                         (GHC.CString.unpackAppendCString#
                                            StreetRun.Engine.Runner.$fShowRunnerState4
                                            (f1
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  GHC.Show.showCommaSpace1
                                                  (GHC.CString.unpackAppendCString#
                                                     StreetRun.Engine.Runner.$fShowRunnerState3
                                                     (f2
                                                        (GHC.CString.unpackAppendCString#
                                                           StreetRun.Engine.Runner.$fShowRunnerState2
                                                           x))))))))))))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }) -}
f5b919cb557b82fc77185acb78bdb7da
  $w$ctoEnum :: GHC.Prim.Int# -> StreetRun.Engine.Runner.RunnerKey
  {- Arity: 1, Strictness: <S,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.>=# ww 0# of lwild {
                   DEFAULT -> StreetRun.Engine.Runner.$wlvl ww
                   1#
                   -> case GHC.Prim.<=# ww 4# of lwild1 {
                        DEFAULT -> StreetRun.Engine.Runner.$wlvl ww
                        1#
                        -> GHC.Prim.tagToEnum#
                             @ StreetRun.Engine.Runner.RunnerKey
                             ww } }) -}
f5b919cb557b82fc77185acb78bdb7da
  $wlvl :: GHC.Prim.Int# -> StreetRun.Engine.Runner.RunnerKey
  {- Arity: 1, Strictness: <B,U>x, Inline: [2] -}
9c14ca64586513d13cab5286052b5631
  data RunnerAction
    = RunnerAction'Move
    | RunnerAction'Duck
    | RunnerAction'Jump
    | RunnerAction'Hurt
f5b919cb557b82fc77185acb78bdb7da
  data RunnerKey
    = RunnerKey'Idle
    | RunnerKey'Move
    | RunnerKey'Kick
    | RunnerKey'Hurt
    | RunnerKey'Sneak
8a2df4904a878996e6c672adcdcc81e9
  data RunnerState
    = RunnerState {dsAction :: StreetRun.Engine.Runner.RunnerAction,
                   dsHeight :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent,
                   dsHurt :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent,
                   dsRecover :: GHC.Maybe.Maybe StreetRun.Engine.Types.Percent}
f5b919cb557b82fc77185acb78bdb7da
  runnerKey'keyName ::
    StreetRun.Engine.Runner.RunnerKey -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Engine.Runner.RunnerKey) ->
                 case ds of wild {
                   StreetRun.Engine.Runner.RunnerKey'Idle
                   -> StreetRun.Engine.Runner.runnerKey'keyName9
                   StreetRun.Engine.Runner.RunnerKey'Move
                   -> StreetRun.Engine.Runner.runnerKey'keyName7
                   StreetRun.Engine.Runner.RunnerKey'Kick
                   -> StreetRun.Engine.Runner.runnerKey'keyName5
                   StreetRun.Engine.Runner.RunnerKey'Hurt
                   -> StreetRun.Engine.Runner.runnerKey'keyName3
                   StreetRun.Engine.Runner.RunnerKey'Sneak
                   -> StreetRun.Engine.Runner.runnerKey'keyName1 }) -}
855732831815309438871c450bea4ee2
  runnerKey'keyName1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   StreetRun.Engine.Runner.runnerKey'keyName2) -}
d185060f8afb477410fa8c3d0392dc8e
  runnerKey'keyName10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Idle"#) -}
d91c98d0602363d4e86442460f7f9925
  runnerKey'keyName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Sneak"#) -}
56b619216beabc1065315dad4e0cec8d
  runnerKey'keyName3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   StreetRun.Engine.Runner.runnerKey'keyName4) -}
d270808ecea9588320401d1ea433a933
  runnerKey'keyName4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Hurt"#) -}
aa6056c1312cf4294148d2b99255427f
  runnerKey'keyName5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   StreetRun.Engine.Runner.runnerKey'keyName6) -}
2098d7a4ff83a55365b945a82af033fc
  runnerKey'keyName6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Kick"#) -}
697281a4d90d03dd488329d769018091
  runnerKey'keyName7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   StreetRun.Engine.Runner.runnerKey'keyName8) -}
c632c1f225362c8933dbeee9eb4e137d
  runnerKey'keyName8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Move"#) -}
456c828973bde9235b1733bb0c210c29
  runnerKey'keyName9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   StreetRun.Engine.Runner.runnerKey'keyName10) -}
instance GHC.Enum.Bounded [StreetRun.Engine.Runner.RunnerKey]
  = StreetRun.Engine.Runner.$fBoundedRunnerKey
instance GHC.Enum.Enum [StreetRun.Engine.Runner.RunnerKey]
  = StreetRun.Engine.Runner.$fEnumRunnerKey
instance GHC.Classes.Eq [StreetRun.Engine.Runner.RunnerAction]
  = StreetRun.Engine.Runner.$fEqRunnerAction
instance GHC.Classes.Eq [StreetRun.Engine.Runner.RunnerKey]
  = StreetRun.Engine.Runner.$fEqRunnerKey
instance GHC.Classes.Eq [StreetRun.Engine.Runner.RunnerState]
  = StreetRun.Engine.Runner.$fEqRunnerState
instance Animate.KeyName [StreetRun.Engine.Runner.RunnerKey]
  = StreetRun.Engine.Runner.$fKeyNameRunnerKey
instance GHC.Classes.Ord [StreetRun.Engine.Runner.RunnerKey]
  = StreetRun.Engine.Runner.$fOrdRunnerKey
instance GHC.Show.Show [StreetRun.Engine.Runner.RunnerAction]
  = StreetRun.Engine.Runner.$fShowRunnerAction
instance GHC.Show.Show [StreetRun.Engine.Runner.RunnerKey]
  = StreetRun.Engine.Runner.$fShowRunnerKey
instance GHC.Show.Show [StreetRun.Engine.Runner.RunnerState]
  = StreetRun.Engine.Runner.$fShowRunnerState
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

