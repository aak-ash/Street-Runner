
==================== FINAL INTERFACE ====================
2019-04-25 16:57:38.829861527 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Engine.Common 8064
  interface hash: a15ab864fab5710402fce7969e506e2d
  ABI hash: 4d0d5abc96d404a54bf9e869f10eaeb3
  export-list hash: 6ba732522c41dfd1680709da05125599
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 402412713a6dba2e75ee0b452641298b
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: True
  where
exports:
  StreetRun.Engine.Common.initCommonVars
  StreetRun.Engine.Common.CommonVars{StreetRun.Engine.Common.CommonVars cvHiscore cvQuake cvSfx}
  StreetRun.Engine.Common.HasCommonVars{StreetRun.Engine.Common.commonVars}
module dependencies: StreetRun.Engine.Frame StreetRun.Engine.Quake
                     StreetRun.Engine.Quake_BackStreet StreetRun.Engine.Quake_Building
                     StreetRun.Engine.Quake_Grass StreetRun.Engine.Quake_Street
                     StreetRun.Engine.Sfx StreetRun.Engine.Step StreetRun.Engine.Types
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      bifunctors-5.5.3 binary-0.8.6.0 bytestring-0.10.8.2
                      call-stack-0.1.0 comonad-5.0.4 conduit-1.3.1.1 containers-0.6.0.1
                      contravariant-1.5 deepseq-1.4.4.0 distributive-0.6 dlist-0.8.0.6
                      exceptions-0.10.1 free-5.1 ghc-boot-th-8.6.4 ghc-prim-0.5.3
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      kan-extensions-5.2 lens-4.17 libyaml-0.1.1.0 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 scientific-0.3.6.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 th-abstraction-0.2.11.0
                      time-1.8.0.2 time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 transformers-compat-0.6.2
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.2 yaml-0.11.0.0
orphans: reflection-2.1.4:Data.Reflection
         stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  lens-4.17:Control.Lens 531af2b540e6d8d8ce856b6f46207d94
import  -/  lens-4.17:Control.Lens.TH c8ee903ac0437128dcf8373c689fbce1
import  -/  lens-4.17:Control.Lens.Type a26601a0a02238b01fa664e92db6501f
import  -/  StreetRun.Engine.Quake e802944d3e9b3bb39e50dfd6016ff286
  exports: 48113b9e723404cd26e72e91f3419860
  Quake 5c2104ccda55020462215de10bda60d8
  Quake'Dormant 1bba2db9362fdd2baba62baf9a906661
import  -/  StreetRun.Engine.Quake_BackStreet 2c32e9933ae6f7d7acd5c44c38eaa607
  exports: bee61ad7902bf8a110a11d6ed591fcba
import  -/  StreetRun.Engine.Quake_Building cee904e307d5a7be7c7cb2f745520253
  exports: 0f260dccef73c486c4ec321f550f451a
import  -/  StreetRun.Engine.Quake_Grass f701ba84ffd529478fb43fb5181b5793
  exports: 33e9288994c4f7d17213ba9ac23b2840
import  -/  StreetRun.Engine.Quake_Street ad14db3310a9d98636eddb15cd1449d7
  exports: 72c80df0b9ab6be3e85e86540aa17f35
import  -/  StreetRun.Engine.Sfx ce61680ab49e73d6adcab419b58e46a3
  exports: 9ed9b05206d8147ec52e3e5ef3b1f124
  Sfx 53b3c2df485e5327a1364b2ffc7c3703
import  -/  StreetRun.Engine.Types 6986db6c9f4d1e9fc0edc9e119b1c392
  exports: c934b5ae3d6a2dfd0319fd3b47efce61
  Score 2c1d435e70ce6141686e8dcd599abffc
841ce81843d4fcb757b67c9bc64ffd54
  $fEqCommonVars :: GHC.Classes.Eq StreetRun.Engine.Common.CommonVars
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Common.CommonVars
                  StreetRun.Engine.Common.$fEqCommonVars_$c==
                  StreetRun.Engine.Common.$fEqCommonVars_$c/= -}
841ce81843d4fcb757b67c9bc64ffd54
  $fEqCommonVars_$c/= ::
    StreetRun.Engine.Common.CommonVars
    -> StreetRun.Engine.Common.CommonVars -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LL),1*U(1*U(U),1*U,1*U)><S(S(S)LL),1*U(1*U(U),1*U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Engine.Common.CommonVars)
                   (y :: StreetRun.Engine.Common.CommonVars) ->
                 case StreetRun.Engine.Common.$fEqCommonVars_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
841ce81843d4fcb757b67c9bc64ffd54
  $fEqCommonVars_$c== ::
    StreetRun.Engine.Common.CommonVars
    -> StreetRun.Engine.Common.CommonVars -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LL),1*U(1*U(U),1*U,1*U)><S(S(S)LL),1*U(1*U(U),1*U,1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Engine.Common.CommonVars)
                   (w1 :: StreetRun.Engine.Common.CommonVars) ->
                 case w of ww { StreetRun.Engine.Common.CommonVars ww1 ww2 ww3 ->
                 case ww1
                        `cast`
                      (StreetRun.Engine.Types.N:Score[0]) of ww4 { GHC.Types.I# ww5 ->
                 case w1 of ww6 { StreetRun.Engine.Common.CommonVars ww7 ww8 ww9 ->
                 case ww7
                        `cast`
                      (StreetRun.Engine.Types.N:Score[0]) of ww10 { GHC.Types.I# ww11 ->
                 StreetRun.Engine.Common.$w$c== ww5 ww2 ww3 ww11 ww8 ww9 } } } }) -}
1902e2cee2c9cb85ed965064ea16c14d
  $fHasCommonVarsCommonVars ::
    StreetRun.Engine.Common.HasCommonVars
      StreetRun.Engine.Common.CommonVars
  DFunId
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                StreetRun.Engine.Common.$fHasCommonVarsCommonVars_$ccommonVars
                  `cast`
                (Sym (StreetRun.Engine.Common.N:HasCommonVars[0]
                          <StreetRun.Engine.Common.CommonVars>_N)) -}
5606cd8853defab0e826b00a7ef06b6a
  $fHasCommonVarsCommonVars_$ccommonVars ::
    Control.Lens.Type.Lens'
      StreetRun.Engine.Common.CommonVars
      StreetRun.Engine.Common.CommonVars
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ f :: * -> * ($dFunctor :: GHC.Base.Functor f) ->
                 GHC.Base.id
                   @ (StreetRun.Engine.Common.CommonVars
                      -> f StreetRun.Engine.Common.CommonVars)) -}
841ce81843d4fcb757b67c9bc64ffd54
  $fShowCommonVars ::
    GHC.Show.Show StreetRun.Engine.Common.CommonVars
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.Common.CommonVars
                  StreetRun.Engine.Common.$fShowCommonVars_$cshowsPrec
                  StreetRun.Engine.Common.$fShowCommonVars_$cshow
                  StreetRun.Engine.Common.$fShowCommonVars_$cshowList -}
841ce81843d4fcb757b67c9bc64ffd54
  $fShowCommonVars1 ::
    StreetRun.Engine.Common.CommonVars -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U(U),1*U,U)>,
     Unfolding: (\ (w :: StreetRun.Engine.Common.CommonVars) ->
                 case w of ww { StreetRun.Engine.Common.CommonVars ww1 ww2 ww3 ->
                 StreetRun.Engine.Common.$w$cshowsPrec 0# ww1 ww2 ww3 }) -}
6dc33592d1583d057eb58a1bbb8799fd
  $fShowCommonVars2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
48a76e6a43a4a2bb50e860a45c5c830e
  $fShowCommonVars3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cvSfx = "#) -}
0df0bef4ab3dedf18f156784f1d62093
  $fShowCommonVars4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cvQuake = "#) -}
952f1f6e5007576807be7e53fa0e682f
  $fShowCommonVars5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cvHiscore = "#) -}
511f9a83f9c96d9f6bb74d4770b6e394
  $fShowCommonVars6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CommonVars {"#) -}
2a8126e2b7c59b27c61aa6257451dad2
  $fShowCommonVars7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
841ce81843d4fcb757b67c9bc64ffd54
  $fShowCommonVars_$cshow ::
    StreetRun.Engine.Common.CommonVars -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U(U),1*U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Engine.Common.CommonVars) ->
                 StreetRun.Engine.Common.$fShowCommonVars_$cshowsPrec
                   StreetRun.Engine.Common.$fShowCommonVars7
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
841ce81843d4fcb757b67c9bc64ffd54
  $fShowCommonVars_$cshowList ::
    [StreetRun.Engine.Common.CommonVars] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Engine.Common.CommonVars])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Engine.Common.CommonVars
                   StreetRun.Engine.Common.$fShowCommonVars1
                   ls
                   s) -}
841ce81843d4fcb757b67c9bc64ffd54
  $fShowCommonVars_$cshowsPrec ::
    GHC.Types.Int
    -> StreetRun.Engine.Common.CommonVars -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U(U),1*U,U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: StreetRun.Engine.Common.CommonVars) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { StreetRun.Engine.Common.CommonVars ww3 ww4 ww5 ->
                 StreetRun.Engine.Common.$w$cshowsPrec ww1 ww3 ww4 ww5 } }) -}
841ce81843d4fcb757b67c9bc64ffd54
  $sel:cvHiscore:CommonVars ::
    StreetRun.Engine.Common.CommonVars -> StreetRun.Engine.Types.Score
  RecSel Left StreetRun.Engine.Common.CommonVars
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Engine.Common.CommonVars) ->
                 case ds of wild { StreetRun.Engine.Common.CommonVars ds1 ds2 ds3 ->
                 ds1 }) -}
841ce81843d4fcb757b67c9bc64ffd54
  $sel:cvQuake:CommonVars ::
    StreetRun.Engine.Common.CommonVars -> StreetRun.Engine.Quake.Quake
  RecSel Left StreetRun.Engine.Common.CommonVars
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Engine.Common.CommonVars) ->
                 case ds of wild { StreetRun.Engine.Common.CommonVars ds1 ds2 ds3 ->
                 ds2 }) -}
841ce81843d4fcb757b67c9bc64ffd54
  $sel:cvSfx:CommonVars ::
    StreetRun.Engine.Common.CommonVars -> [StreetRun.Engine.Sfx.Sfx]
  RecSel Left StreetRun.Engine.Common.CommonVars
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Engine.Common.CommonVars) ->
                 case ds of wild { StreetRun.Engine.Common.CommonVars ds1 ds2 ds3 ->
                 ds3 }) -}
369170d4ccaf1a886f056ab384f14532
  $tc'CommonVars :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13328193063961833272##
                   1942231285389049673##
                   StreetRun.Engine.Common.$trModule
                   StreetRun.Engine.Common.$tc'CommonVars2
                   0#
                   StreetRun.Engine.Common.$tc'CommonVars1) -}
aa1456c7e448ab04e3dbf08f5ecb4347
  $tc'CommonVars1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
52a1bfa8778267e15026d8151896ac1f
  $tc'CommonVars2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Common.$tc'CommonVars3) -}
0083cde0fceaff2c5eac9ef7ef245ca5
  $tc'CommonVars3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CommonVars"#) -}
ac98bab4bef64dd0b3979d81658a4f0b
  $tcCommonVars :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17479402994115314628##
                   1092499319093206916##
                   StreetRun.Engine.Common.$trModule
                   StreetRun.Engine.Common.$tcCommonVars1
                   0#
                   GHC.Types.krep$*) -}
4da16e9da16712f2e7463d1dfb5f089f
  $tcCommonVars1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Common.$tcCommonVars2) -}
4a967160fdc283ca2479e78b6cb43ae9
  $tcCommonVars2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CommonVars"#) -}
0104ec61b539ff42c5e6920de9d81498
  $tcHasCommonVars :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1385257011235121442##
                   9713464652209341649##
                   StreetRun.Engine.Common.$trModule
                   StreetRun.Engine.Common.$tcHasCommonVars2
                   0#
                   StreetRun.Engine.Common.$tcHasCommonVars1) -}
42af352a564e4af5f5909bb1939f0867
  $tcHasCommonVars1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3ed51c7202ef91bef9ba8c8438dcbba3
  $tcHasCommonVars2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Common.$tcHasCommonVars3) -}
e7fb2deae82cd619010aaa73f3fe3cca
  $tcHasCommonVars3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HasCommonVars"#) -}
d7dea8ebefc67bc77cbe38b9f6da1cf6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Engine.Common.$trModule3
                   StreetRun.Engine.Common.$trModule1) -}
5b62c79d280c0896f3f98815e259faad
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Common.$trModule2) -}
03a46c07658e6c6243bb7caf8392a53b
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Engine.Common"#) -}
a91821299b53d545d5101ee066e8cb7d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.Common.$trModule4) -}
49ef265cca765c7aec784951948efb34
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
b5b2930cfa875297b050e2ebadb99984
  $w$c== ::
    GHC.Prim.Int#
    -> StreetRun.Engine.Quake.Quake
    -> [StreetRun.Engine.Sfx.Sfx]
    -> GHC.Prim.Int#
    -> StreetRun.Engine.Quake.Quake
    -> [StreetRun.Engine.Sfx.Sfx]
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: StreetRun.Engine.Quake.Quake)
                   (ww2 :: [StreetRun.Engine.Sfx.Sfx])
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: StreetRun.Engine.Quake.Quake)
                   (ww5 :: [StreetRun.Engine.Sfx.Sfx]) ->
                 case GHC.Prim.==# ww ww3 of lwild {
                   DEFAULT -> GHC.Types.False
                   1#
                   -> case ww1 of wild {
                        StreetRun.Engine.Quake.Quake'Progress a1
                        -> case ww4 of wild1 {
                             StreetRun.Engine.Quake.Quake'Progress b1
                             -> case a1
                                       `cast`
                                     (StreetRun.Engine.Types.N:Percent[0]) of wild2 { GHC.Types.F# x ->
                                case b1
                                       `cast`
                                     (StreetRun.Engine.Types.N:Percent[0]) of wild3 { GHC.Types.F# y ->
                                case GHC.Prim.eqFloat# x y of lwild1 {
                                  DEFAULT -> GHC.Types.False
                                  1#
                                  -> GHC.Classes.$fEq[]_$c==
                                       @ StreetRun.Engine.Sfx.Sfx
                                       StreetRun.Engine.Sfx.$fEqSfx
                                       ww2
                                       ww5 } } }
                             StreetRun.Engine.Quake.Quake'Dormant ipv -> GHC.Types.False }
                        StreetRun.Engine.Quake.Quake'Dormant a1
                        -> case ww4 of wild1 {
                             StreetRun.Engine.Quake.Quake'Progress ipv -> GHC.Types.False
                             StreetRun.Engine.Quake.Quake'Dormant b1
                             -> case a1
                                       `cast`
                                     (StreetRun.Engine.Types.N:Seconds[0]) of wild2 { GHC.Types.F# x ->
                                case b1
                                       `cast`
                                     (StreetRun.Engine.Types.N:Seconds[0]) of wild3 { GHC.Types.F# y ->
                                case GHC.Prim.eqFloat# x y of lwild1 {
                                  DEFAULT -> GHC.Types.False
                                  1#
                                  -> GHC.Classes.$fEq[]_$c==
                                       @ StreetRun.Engine.Sfx.Sfx
                                       StreetRun.Engine.Sfx.$fEqSfx
                                       ww2
                                       ww5 } } } } } }) -}
af1bc9caa8d13a84f8a55a17bdfc74b3
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> StreetRun.Engine.Types.Score
    -> StreetRun.Engine.Quake.Quake
    -> [StreetRun.Engine.Sfx.Sfx]
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <S,U><L,U(U)><L,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: StreetRun.Engine.Types.Score)
                   (ww2 :: StreetRun.Engine.Quake.Quake)
                   (ww3 :: [StreetRun.Engine.Sfx.Sfx]) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = StreetRun.Engine.Quake.$w$cshowsPrec 0# ww2
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       StreetRun.Engine.Common.$fShowCommonVars6
                       (GHC.CString.unpackAppendCString#
                          StreetRun.Engine.Common.$fShowCommonVars5
                          (StreetRun.Engine.Types.$w$cshowsPrec2
                             0#
                             ww1
                             (GHC.Base.++
                                @ GHC.Types.Char
                                GHC.Show.showCommaSpace1
                                (GHC.CString.unpackAppendCString#
                                   StreetRun.Engine.Common.$fShowCommonVars4
                                   (f (GHC.Base.++
                                         @ GHC.Types.Char
                                         GHC.Show.showCommaSpace1
                                         (GHC.CString.unpackAppendCString#
                                            StreetRun.Engine.Common.$fShowCommonVars3
                                            (let {
                                               s :: GHC.Base.String
                                               = GHC.CString.unpackAppendCString#
                                                   StreetRun.Engine.Common.$fShowCommonVars2
                                                   x
                                             } in
                                             case ww3 of wild {
                                               []
                                               -> GHC.CString.unpackAppendCString#
                                                    GHC.Show.showList__4
                                                    s
                                               : x1 xs
                                               -> GHC.Types.:
                                                    @ GHC.Types.Char
                                                    GHC.Show.showList__3
                                                    (StreetRun.Engine.Sfx.$w$cshowsPrec
                                                       x1
                                                       (let {
                                                          lvl43 :: [GHC.Types.Char]
                                                          = GHC.Types.:
                                                              @ GHC.Types.Char
                                                              GHC.Show.showList__2
                                                              s
                                                        } in
                                                        letrec {
                                                          showl :: [StreetRun.Engine.Sfx.Sfx]
                                                                   -> GHC.Base.String
                                                            {- Arity: 1, Strictness: <S,1*U> -}
                                                          = \ (ds2 :: [StreetRun.Engine.Sfx.Sfx]) ->
                                                            case ds2 of wild1 {
                                                              [] -> lvl43
                                                              : y ys
                                                              -> GHC.Types.:
                                                                   @ GHC.Types.Char
                                                                   GHC.Show.showList__1
                                                                   (StreetRun.Engine.Sfx.$w$cshowsPrec
                                                                      y
                                                                      (showl ys)) }
                                                        } in
                                                        showl xs)) }))))))))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }) -}
841ce81843d4fcb757b67c9bc64ffd54
  data CommonVars
    = CommonVars {cvHiscore :: StreetRun.Engine.Types.Score,
                  cvQuake :: StreetRun.Engine.Quake.Quake,
                  cvSfx :: [StreetRun.Engine.Sfx.Sfx]}
1902e2cee2c9cb85ed965064ea16c14d
  class HasCommonVars c where
    commonVars :: Control.Lens.Type.Lens'
                    c StreetRun.Engine.Common.CommonVars
    {-# MINIMAL commonVars #-}
080beb5b5f09d925afa7adb595fadf7c
  initCommonVars :: StreetRun.Engine.Common.CommonVars
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (StreetRun.Engine.Common.CommonVars
                   StreetRun.Engine.Common.$fShowCommonVars7
                     `cast`
                   (Sym (StreetRun.Engine.Types.N:Score[0]))
                   StreetRun.Engine.Common.initCommonVars1
                   (GHC.Types.[] @ StreetRun.Engine.Sfx.Sfx)) -}
b1a48390ef2aba8559063bfc86463ded
  initCommonVars1 :: StreetRun.Engine.Quake.Quake
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (StreetRun.Engine.Quake.Quake'Dormant
                   StreetRun.Engine.Common.initCommonVars2
                     `cast`
                   (Sym (StreetRun.Engine.Types.N:Seconds[0]))) -}
6636db45da105d2ae1b3c87eab3a0cf6
  initCommonVars2 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 2.0#) -}
instance GHC.Classes.Eq [StreetRun.Engine.Common.CommonVars]
  = StreetRun.Engine.Common.$fEqCommonVars
instance StreetRun.Engine.Common.HasCommonVars [StreetRun.Engine.Common.CommonVars]
  = StreetRun.Engine.Common.$fHasCommonVarsCommonVars
instance GHC.Show.Show [StreetRun.Engine.Common.CommonVars]
  = StreetRun.Engine.Common.$fShowCommonVars
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

