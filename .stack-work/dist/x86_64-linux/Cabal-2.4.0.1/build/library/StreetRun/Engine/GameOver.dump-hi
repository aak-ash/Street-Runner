
==================== FINAL INTERFACE ====================
2019-04-25 16:33:29.249524603 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Engine.GameOver 8064
  interface hash: a863616d4f6c65ca20754beb92f43c9c
  ABI hash: 90c29e2126fa804b32def0a039805894
  export-list hash: 29769b6974a9c6b77fa9d27be7f6c46c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 402412713a6dba2e75ee0b452641298b
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: True
  where
exports:
  StreetRun.Engine.GameOver.gameOverShowPressSpace
  StreetRun.Engine.GameOver.initGameOverVars
  StreetRun.Engine.GameOver.stepGameOverVars
  StreetRun.Engine.GameOver.GameOverVars{StreetRun.Engine.GameOver.GameOverVars govFadeout govSpaceFlashing}
  StreetRun.Engine.GameOver.HasGameOverVars{StreetRun.Engine.GameOver.gameOverVars}
module dependencies: StreetRun.Engine.Types
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      bifunctors-5.5.3 binary-0.8.6.0 bytestring-0.10.8.2
                      call-stack-0.1.0 comonad-5.0.4 conduit-1.3.1.1 containers-0.6.0.1
                      contravariant-1.5 deepseq-1.4.4.0 distributive-0.6 dlist-0.8.0.6
                      exceptions-0.10.1 free-5.1 ghc-boot-th-8.6.4 ghc-prim-0.5.3
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      kan-extensions-5.2 lens-4.17 libyaml-0.1.1.0 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 scientific-0.3.6.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 th-abstraction-0.2.11.0
                      time-1.8.0.2 time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 transformers-compat-0.6.2
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.2 yaml-0.11.0.0
orphans: reflection-2.1.4:Data.Reflection
         stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Float ccb68fbeaab348f60d11c8132d51af5d
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  lens-4.17:Control.Lens 531af2b540e6d8d8ce856b6f46207d94
import  -/  lens-4.17:Control.Lens.TH c8ee903ac0437128dcf8373c689fbce1
import  -/  lens-4.17:Control.Lens.Type a26601a0a02238b01fa664e92db6501f
import  -/  StreetRun.Engine.Types 6986db6c9f4d1e9fc0edc9e119b1c392
  exports: c934b5ae3d6a2dfd0319fd3b47efce61
  Percent 34f2154fa29bed1ea1f6b21bbba55be5
  clamp ca541b68bef6644f83bd27282ad36f03
44a2302f25140b6c232c18cdab132fd4
  $fEqGameOverVars ::
    GHC.Classes.Eq StreetRun.Engine.GameOver.GameOverVars
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.GameOver.GameOverVars
                  StreetRun.Engine.GameOver.$fEqGameOverVars_$c==
                  StreetRun.Engine.GameOver.$fEqGameOverVars_$c/= -}
44a2302f25140b6c232c18cdab132fd4
  $fEqGameOverVars_$c/= ::
    StreetRun.Engine.GameOver.GameOverVars
    -> StreetRun.Engine.GameOver.GameOverVars -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Engine.GameOver.GameOverVars)
                   (y :: StreetRun.Engine.GameOver.GameOverVars) ->
                 case x of wild { StreetRun.Engine.GameOver.GameOverVars a1 a2 ->
                 case y of wild1 { StreetRun.Engine.GameOver.GameOverVars b1 b2 ->
                 case GHC.Classes.eqFloat
                        a1 `cast` (StreetRun.Engine.Types.N:Percent[0])
                        b1 `cast` (StreetRun.Engine.Types.N:Percent[0]) of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Classes.eqFloat
                             a2 `cast` (StreetRun.Engine.Types.N:Percent[0])
                             b2 `cast` (StreetRun.Engine.Types.N:Percent[0]) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
44a2302f25140b6c232c18cdab132fd4
  $fEqGameOverVars_$c== ::
    StreetRun.Engine.GameOver.GameOverVars
    -> StreetRun.Engine.GameOver.GameOverVars -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Engine.GameOver.GameOverVars)
                   (w1 :: StreetRun.Engine.GameOver.GameOverVars) ->
                 case w of ww { StreetRun.Engine.GameOver.GameOverVars ww1 ww2 ->
                 case ww1
                        `cast`
                      (StreetRun.Engine.Types.N:Percent[0]) of ww3 { GHC.Types.F# ww4 ->
                 case w1 of ww5 { StreetRun.Engine.GameOver.GameOverVars ww6 ww7 ->
                 case ww6
                        `cast`
                      (StreetRun.Engine.Types.N:Percent[0]) of ww8 { GHC.Types.F# ww9 ->
                 StreetRun.Engine.GameOver.$w$c== ww4 ww2 ww9 ww7 } } } }) -}
5f73717428fa5706f8209c0a5b6c633e
  $fHasGameOverVarsGameOverVars ::
    StreetRun.Engine.GameOver.HasGameOverVars
      StreetRun.Engine.GameOver.GameOverVars
  DFunId
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                StreetRun.Engine.GameOver.$fHasGameOverVarsGameOverVars_$cgameOverVars
                  `cast`
                (Sym (StreetRun.Engine.GameOver.N:HasGameOverVars[0]
                          <StreetRun.Engine.GameOver.GameOverVars>_N)) -}
2840d156f1739723681372af7604ef2f
  $fHasGameOverVarsGameOverVars_$cgameOverVars ::
    Control.Lens.Type.Lens'
      StreetRun.Engine.GameOver.GameOverVars
      StreetRun.Engine.GameOver.GameOverVars
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ f :: * -> * ($dFunctor :: GHC.Base.Functor f) ->
                 GHC.Base.id
                   @ (StreetRun.Engine.GameOver.GameOverVars
                      -> f StreetRun.Engine.GameOver.GameOverVars)) -}
44a2302f25140b6c232c18cdab132fd4
  $fShowGameOverVars ::
    GHC.Show.Show StreetRun.Engine.GameOver.GameOverVars
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Engine.GameOver.GameOverVars
                  StreetRun.Engine.GameOver.$fShowGameOverVars_$cshowsPrec
                  StreetRun.Engine.GameOver.$fShowGameOverVars_$cshow
                  StreetRun.Engine.GameOver.$fShowGameOverVars_$cshowList -}
44a2302f25140b6c232c18cdab132fd4
  $fShowGameOverVars1 ::
    StreetRun.Engine.GameOver.GameOverVars -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>,
     Unfolding: (\ (w :: StreetRun.Engine.GameOver.GameOverVars) ->
                 case w of ww { StreetRun.Engine.GameOver.GameOverVars ww1 ww2 ->
                 StreetRun.Engine.GameOver.$w$cshowsPrec 0# ww1 ww2 }) -}
7a2b83e1cae9ccb23f7e5f984b905290
  $fShowGameOverVars2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
4cc638935cead596bcae53feaa4fab6c
  $fShowGameOverVars3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("govSpaceFlashing = "#) -}
30b76f29df75720deda95bfdd4b7db6f
  $fShowGameOverVars4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("govFadeout = "#) -}
b1de440a0be3f8ac8de073890c01d6bd
  $fShowGameOverVars5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GameOverVars {"#) -}
df7f12f566e5321ab7b2ade1747276a2
  $fShowGameOverVars6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Engine.GameOver.$fShowGameOverVars2) -}
44a2302f25140b6c232c18cdab132fd4
  $fShowGameOverVars_$cshow ::
    StreetRun.Engine.GameOver.GameOverVars -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: StreetRun.Engine.GameOver.GameOverVars) ->
                 case w of ww { StreetRun.Engine.GameOver.GameOverVars ww1 ww2 ->
                 StreetRun.Engine.GameOver.$w$cshow ww1 ww2 }) -}
44a2302f25140b6c232c18cdab132fd4
  $fShowGameOverVars_$cshowList ::
    [StreetRun.Engine.GameOver.GameOverVars] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Engine.GameOver.GameOverVars])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Engine.GameOver.GameOverVars
                   StreetRun.Engine.GameOver.$fShowGameOverVars1
                   ls
                   s) -}
44a2302f25140b6c232c18cdab132fd4
  $fShowGameOverVars_$cshowsPrec ::
    GHC.Types.Int
    -> StreetRun.Engine.GameOver.GameOverVars -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: StreetRun.Engine.GameOver.GameOverVars) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { StreetRun.Engine.GameOver.GameOverVars ww3 ww4 ->
                 StreetRun.Engine.GameOver.$w$cshowsPrec ww1 ww3 ww4 } }) -}
44a2302f25140b6c232c18cdab132fd4
  $sel:govFadeout:GameOverVars ::
    StreetRun.Engine.GameOver.GameOverVars
    -> StreetRun.Engine.Types.Percent
  RecSel Left StreetRun.Engine.GameOver.GameOverVars
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Engine.GameOver.GameOverVars) ->
                 case ds of wild { StreetRun.Engine.GameOver.GameOverVars ds1 ds2 ->
                 ds1 }) -}
44a2302f25140b6c232c18cdab132fd4
  $sel:govSpaceFlashing:GameOverVars ::
    StreetRun.Engine.GameOver.GameOverVars
    -> StreetRun.Engine.Types.Percent
  RecSel Left StreetRun.Engine.GameOver.GameOverVars
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Engine.GameOver.GameOverVars) ->
                 case ds of wild { StreetRun.Engine.GameOver.GameOverVars ds1 ds2 ->
                 ds2 }) -}
dbc2624d9abca541e01171fdda1ff537
  $tc'GameOverVars :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4509160681828971031##
                   10573812976063161595##
                   StreetRun.Engine.GameOver.$trModule
                   StreetRun.Engine.GameOver.$tc'GameOverVars2
                   0#
                   StreetRun.Engine.GameOver.$tc'GameOverVars1) -}
f9674dc14d30cd1c92898e6c785e945d
  $tc'GameOverVars1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
063cebdcc2d28b9ee1e00d3241252484
  $tc'GameOverVars2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.GameOver.$tc'GameOverVars3) -}
9aefd6bb136a7fe6545de2b6467f4a57
  $tc'GameOverVars3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GameOverVars"#) -}
b42716198d868b63f8da48f2ca8b8e8e
  $tcGameOverVars :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8264263652678049496##
                   12004424368046127223##
                   StreetRun.Engine.GameOver.$trModule
                   StreetRun.Engine.GameOver.$tcGameOverVars1
                   0#
                   GHC.Types.krep$*) -}
d078946f40ceda028a06d958b552284a
  $tcGameOverVars1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.GameOver.$tcGameOverVars2) -}
334dedbc67eec7b75953a998f44e5f06
  $tcGameOverVars2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GameOverVars"#) -}
91a3e187a59be56a56293df523d562fa
  $tcHasGameOverVars :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14302729615941017678##
                   2258912757045878252##
                   StreetRun.Engine.GameOver.$trModule
                   StreetRun.Engine.GameOver.$tcHasGameOverVars2
                   0#
                   StreetRun.Engine.GameOver.$tcHasGameOverVars1) -}
bb879bad424da34fe202d6a634b58d1b
  $tcHasGameOverVars1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
aa072388b8fdd5e1829896176e674d4b
  $tcHasGameOverVars2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.GameOver.$tcHasGameOverVars3) -}
235aa9681acf8b31780f6f0db0861110
  $tcHasGameOverVars3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HasGameOverVars"#) -}
588ae44f4b15cfdedc3bb7206bb710d6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Engine.GameOver.$trModule3
                   StreetRun.Engine.GameOver.$trModule1) -}
8be16ae20b4753576ee4d6dcaa4102b1
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.GameOver.$trModule2) -}
7b3d9e396d1e1d671b49717c7eb68f85
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Engine.GameOver"#) -}
4fb8da3d82fcb150e5b26a4d609c9a6f
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Engine.GameOver.$trModule4) -}
671052b97c3e5b2d5816b515289d5d31
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
a1acff23f9eeebfb224a533fba7314d9
  $w$c== ::
    GHC.Prim.Float#
    -> StreetRun.Engine.Types.Percent
    -> GHC.Prim.Float#
    -> StreetRun.Engine.Types.Percent
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><S,U><L,1*U(U)>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Float#)
                   (ww1 :: StreetRun.Engine.Types.Percent)
                   (ww2 :: GHC.Prim.Float#)
                   (ww3 :: StreetRun.Engine.Types.Percent) ->
                 case GHC.Prim.eqFloat# ww ww2 of lwild {
                   DEFAULT -> GHC.Types.False
                   1#
                   -> GHC.Classes.eqFloat
                        ww1 `cast` (StreetRun.Engine.Types.N:Percent[0])
                        ww3 `cast` (StreetRun.Engine.Types.N:Percent[0]) }) -}
a7f6ee5c08f168ca64a2d7bf9fef742c
  $w$cshow ::
    StreetRun.Engine.Types.Percent
    -> StreetRun.Engine.Types.Percent -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U(U)>, Inline: [2],
     Unfolding: (\ (ww :: StreetRun.Engine.Types.Percent)
                   (ww1 :: StreetRun.Engine.Types.Percent) ->
                 GHC.CString.unpackAppendCString#
                   StreetRun.Engine.GameOver.$fShowGameOverVars5
                   (GHC.CString.unpackAppendCString#
                      StreetRun.Engine.GameOver.$fShowGameOverVars4
                      (GHC.Base.++
                         @ GHC.Types.Char
                         StreetRun.Engine.Types.$fShowPercent2
                         (case ww
                                 `cast`
                               (StreetRun.Engine.Types.N:Percent[0]) of ww2 { GHC.Types.F# ww3 ->
                          GHC.Float.$w$sshowSignedFloat1
                            GHC.Float.$fShowFloat2
                            StreetRun.Engine.Types.$fShowDistance4
                            ww3
                            (GHC.Base.++
                               @ GHC.Types.Char
                               GHC.Show.showCommaSpace1
                               (GHC.CString.unpackAppendCString#
                                  StreetRun.Engine.GameOver.$fShowGameOverVars3
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     StreetRun.Engine.Types.$fShowPercent2
                                     (case ww1
                                             `cast`
                                           (StreetRun.Engine.Types.N:Percent[0]) of ww4 { GHC.Types.F# ww5 ->
                                      GHC.Float.$w$sshowSignedFloat1
                                        GHC.Float.$fShowFloat2
                                        StreetRun.Engine.Types.$fShowDistance4
                                        ww5
                                        StreetRun.Engine.GameOver.$fShowGameOverVars6 })))) })))) -}
8da151e8618f0bba7b9ab9f21d4fe1c5
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> StreetRun.Engine.Types.Percent
    -> StreetRun.Engine.Types.Percent
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,1*U(U)>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: StreetRun.Engine.Types.Percent)
                   (ww2 :: StreetRun.Engine.Types.Percent) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = StreetRun.Engine.Types.$w$cshowsPrec1 0# ww1
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = StreetRun.Engine.Types.$w$cshowsPrec1 0# ww2
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> \ (x :: GHC.Base.String) ->
                      GHC.CString.unpackAppendCString#
                        StreetRun.Engine.GameOver.$fShowGameOverVars5
                        (GHC.CString.unpackAppendCString#
                           StreetRun.Engine.GameOver.$fShowGameOverVars4
                           (f (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    StreetRun.Engine.GameOver.$fShowGameOverVars3
                                    (f1
                                       (GHC.CString.unpackAppendCString#
                                          StreetRun.Engine.GameOver.$fShowGameOverVars2
                                          x))))))
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           StreetRun.Engine.GameOver.$fShowGameOverVars5
                           (GHC.CString.unpackAppendCString#
                              StreetRun.Engine.GameOver.$fShowGameOverVars4
                              (f (GHC.Base.++
                                    @ GHC.Types.Char
                                    GHC.Show.showCommaSpace1
                                    (GHC.CString.unpackAppendCString#
                                       StreetRun.Engine.GameOver.$fShowGameOverVars3
                                       (f1
                                          (GHC.CString.unpackAppendCString#
                                             StreetRun.Engine.GameOver.$fShowGameOverVars2
                                             (GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.$fShow(,)2
                                                x)))))))) }) -}
44a2302f25140b6c232c18cdab132fd4
  data GameOverVars
    = GameOverVars {govFadeout :: StreetRun.Engine.Types.Percent,
                    govSpaceFlashing :: StreetRun.Engine.Types.Percent}
5f73717428fa5706f8209c0a5b6c633e
  class HasGameOverVars c where
    gameOverVars :: Control.Lens.Type.Lens'
                      c StreetRun.Engine.GameOver.GameOverVars
    {-# MINIMAL gameOverVars #-}
d0a6030a9ed5563f0f6550c07b0d62cd
  gameOverShowPressSpace ::
    StreetRun.Engine.Types.Percent -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: StreetRun.Engine.Types.Percent) ->
                 case p `cast`
                      (StreetRun.Engine.Types.N:Percent[0]) of wild { GHC.Types.F# x ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.ltFloat# (GHC.Prim.sinFloat# x) 0.0#) }) -}
6634e684ff5dfe87c5e9256f9c9dfd92
  initGameOverVars :: StreetRun.Engine.GameOver.GameOverVars
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (StreetRun.Engine.GameOver.GameOverVars
                   StreetRun.Engine.GameOver.initGameOverVars1
                     `cast`
                   (Sym (StreetRun.Engine.Types.N:Percent[0]))
                   StreetRun.Engine.GameOver.initGameOverVars1
                     `cast`
                   (Sym (StreetRun.Engine.Types.N:Percent[0]))) -}
e9c454b9def483bd1eb85f10c9d5f433
  initGameOverVars1 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
96d4d5e60851099c2388ceef51dd93ee
  stepGameOverVars ::
    StreetRun.Engine.GameOver.GameOverVars
    -> StreetRun.Engine.GameOver.GameOverVars
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U(U),1*U(U))>m,
     Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: StreetRun.Engine.GameOver.GameOverVars) ->
                 case w of ww { StreetRun.Engine.GameOver.GameOverVars ww1 ww2 ->
                 StreetRun.Engine.GameOver.GameOverVars
                   (case ww1
                           `cast`
                         (StreetRun.Engine.Types.N:Percent[0]) of wild { GHC.Types.F# x ->
                    let {
                      x1 :: GHC.Prim.Float# = GHC.Prim.plusFloat# x 1.0e-2#
                    } in
                    case GHC.Prim.gtFloat# x1 0.0# of lwild {
                      DEFAULT
                      -> case GHC.Prim.ltFloat# x1 0.0# of lwild1 {
                           DEFAULT
                           -> (GHC.Types.F# x1)
                                `cast`
                              (Sym (StreetRun.Engine.Types.N:Percent[0]))
                           1#
                           -> StreetRun.Engine.GameOver.initGameOverVars1
                                `cast`
                              (Sym (StreetRun.Engine.Types.N:Percent[0])) }
                      1#
                      -> StreetRun.Engine.GameOver.initGameOverVars1
                           `cast`
                         (Sym (StreetRun.Engine.Types.N:Percent[0])) } })
                   (case ww2
                           `cast`
                         (StreetRun.Engine.Types.N:Percent[0]) of wild { GHC.Types.F# x ->
                    (GHC.Types.F# (GHC.Prim.plusFloat# x 5.0e-2#))
                      `cast`
                    (Sym (StreetRun.Engine.Types.N:Percent[0])) }) }) -}
instance GHC.Classes.Eq [StreetRun.Engine.GameOver.GameOverVars]
  = StreetRun.Engine.GameOver.$fEqGameOverVars
instance StreetRun.Engine.GameOver.HasGameOverVars [StreetRun.Engine.GameOver.GameOverVars]
  = StreetRun.Engine.GameOver.$fHasGameOverVarsGameOverVars
instance GHC.Show.Show [StreetRun.Engine.GameOver.GameOverVars]
  = StreetRun.Engine.GameOver.$fShowGameOverVars
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

