
==================== FINAL INTERFACE ====================
2019-04-25 22:26:37.656813524 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Renderer 8064
  interface hash: 9be6549940337960e894f261d91c35db
  ABI hash: eba9a9e4c8700e42ea509a1bf564c30b
  export-list hash: bdc569cebfaf1503ce959a9192a1814c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd6997935d09daa6a687cb8eb0447281
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Renderer.backStreetY
  StreetRun.Renderer.buildingY
  StreetRun.Renderer.clearScreen'
  StreetRun.Renderer.drawScreen'
  StreetRun.Renderer.grassY
  StreetRun.Renderer.streetY
  StreetRun.Renderer.Renderer{StreetRun.Renderer.clearScreen StreetRun.Renderer.drawBackStreet StreetRun.Renderer.drawBird StreetRun.Renderer.drawBlackOverlay StreetRun.Renderer.drawBuilding StreetRun.Renderer.drawControlsText StreetRun.Renderer.drawGameOverText StreetRun.Renderer.drawGrass StreetRun.Renderer.drawHiscoreText StreetRun.Renderer.drawLava StreetRun.Renderer.drawNumber StreetRun.Renderer.drawPauseText StreetRun.Renderer.drawPressEscapeText StreetRun.Renderer.drawPressSpaceText StreetRun.Renderer.drawRock StreetRun.Renderer.drawRunner StreetRun.Renderer.drawScreen StreetRun.Renderer.drawStreet StreetRun.Renderer.drawTitleText StreetRun.Renderer.getBirdAnimations StreetRun.Renderer.getBuildingAnimations StreetRun.Renderer.getGrassAnimations StreetRun.Renderer.getLavaAnimations StreetRun.Renderer.getRockAnimations StreetRun.Renderer.getRunnerAnimations}
module dependencies: StreetRun.Camera StreetRun.Config
                     StreetRun.Font StreetRun.Font_functions StreetRun.Frame
                     StreetRun.Hurdle StreetRun.Hurdle_1 StreetRun.Input
                     StreetRun.Physics StreetRun.Resource StreetRun.Runner
                     StreetRun.Runner_func_1 StreetRun.Runner_func_2
                     StreetRun.SDLRenderer StreetRun.Scenario StreetRun.Snag
                     StreetRun.Step StreetRun.Types
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      base16-bytestring-0.1.1.6 base64-bytestring-1.0.0.2
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 data-default-class-0.1.2.0
                      deepseq-1.4.4.0 distributive-0.6 dlist-0.8.0.6 errors-2.3.0
                      exceptions-0.10.1 free-5.1 ghc-boot-th-8.6.4 ghc-prim-0.5.3
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      kan-extensions-5.2 key-state-0.2.0 lens-4.17 libyaml-0.1.1.0
                      lifted-base-0.2.3.12 linear-1.20.8 monad-control-1.0.2.3 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17 scientific-0.3.6.2
                      sdl2-2.4.1.0 sdl2-image-2.0.0 sdl2-mixer-1.1.0 sdl2-ttf-2.0.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 text-conversions-0.3.0
                      th-abstraction-0.2.11.0 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.6.2 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.2
                      yaml-0.11.0.0
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Clock.TAI
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         reflection-2.1.4:Data.Reflection
         vector-0.12.0.2:Data.Vector.Unboxed stm-2.5.0.0:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         linear-1.20.8:Linear.Instances base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Affine linear-1.20.8:Linear.Plucker
                         linear-1.20.8:Linear.Quaternion linear-1.20.8:Linear.V
                         linear-1.20.8:Linear.V0 linear-1.20.8:Linear.V1
                         linear-1.20.8:Linear.V2 linear-1.20.8:Linear.V3
                         linear-1.20.8:Linear.V4
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         sdl2-2.4.1.0:SDL.Audio sdl2-2.4.1.0:SDL.Event
                         sdl2-2.4.1.0:SDL.Exception sdl2-2.4.1.0:SDL.Hint
                         sdl2-2.4.1.0:SDL.Init sdl2-2.4.1.0:SDL.Input.GameController
                         sdl2-2.4.1.0:SDL.Input.Joystick sdl2-2.4.1.0:SDL.Input.Keyboard
                         sdl2-2.4.1.0:SDL.Input.Keyboard.Codes sdl2-2.4.1.0:SDL.Input.Mouse
                         sdl2-2.4.1.0:SDL.Internal.Types sdl2-2.4.1.0:SDL.Power
                         sdl2-2.4.1.0:SDL.Time sdl2-2.4.1.0:SDL.Video
                         sdl2-2.4.1.0:SDL.Video.OpenGL sdl2-2.4.1.0:SDL.Video.Renderer
                         sdl2-image-2.0.0:SDL.Image sdl2-ttf-2.0.2:SDL.Font
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  StateVar-1.1.1.1:Data.StateVar 3356bd62ad24ee9ca28de7ecf3cb79ab
import  -/  animate-0.7.0:Animate 7c6496232245300f888f7e0dafeb231c
import  -/  base-4.12.0.0:Foreign.C.Types 35a1d321965626990bdd0f18683810e2
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  mtl-2.2.2:Control.Monad.Reader d5c3a33f1c95bb71f4ae02f87a7048ff
import  -/  mtl-2.2.2:Control.Monad.Reader.Class 56d676c7504f5007ee5b66906716abcc
import  -/  sdl2-2.4.1.0:SDL a2c38c0f08b3d06bbb0ff9d8498c68c0
import  -/  sdl2-2.4.1.0:SDL.Vect cd47fc30aef16e8f55c1351dafae292d
import  -/  StreetRun.Config cf93ae4b11ed31ae458ca135cf881ef9
  exports: 718448995096e5a0315e80eb460349b2
  $sel:cRenderer:Config 8fee3f2631cead17e5b67aab65a149ae
  Config 8fee3f2631cead17e5b67aab65a149ae
import  -/  StreetRun.Font a32f3953bbb50ce9b469edb8463d6f24
  exports: 7faf0604fc3be1edae721103fd7b3042
  Number b7e100f9135b0814c955ea3d79c02ada
import  -/  StreetRun.Font_functions 1a5a69e004e559ef0ed610c21b9037a3
  exports: 8738957528d4728a198f0cc1309ae7d5
import  -/  StreetRun.Runner d3359c007392b06d1628d1e8bb37f9ba
  exports: 07dc0a302095db6221f41ecc2db9aec7
  RunnerKey c9d847714c135c3fbba17148989067a8
import  -/  StreetRun.SDLRenderer 3cb58a3e7c151a4e55076a15375a1145
  exports: b035665cd19a2962c5a1cabd4abb8a1f
  SDLRenderer a56dc3e11af00cde5b5730118be5d15e
  clearRenderer d6e469c66242f7358aea74693233b027
  presentRenderer 006665aeab11c7fdedf4c62051a17626
import  -/  StreetRun.Scenario 3d565e4d4fcefb40de1d348ddc5508f1
  exports: 425f740a4cf1b868d9284521ed68ce1e
  BuildingKey b4c3f53a1de721da99d4f02d4409c2d9
  GrassKey da61b53345a9ca19f2dea7fa2a8793b3
import  -/  StreetRun.Snag 435128ff0e3817e1b1768f09cf894e59
  exports: 7f7b3656c97eba619795923512f79f2a
  BirdKey a4b9334f1959d8eda311a05a86034c88
  LavaKey ef15a7c1dcf7c6d0c02947b3c6d55574
  RockKey a1efaaa0d94a0294a7825caa774f65b1
import  -/  StreetRun.Types 12e0a8d06a192b8682dfbe1a40ce2131
  exports: 687926be2250d898b68652280e784933
  Animations 4b41587a259aae6b6ac40ba923e843f7
  DrawSprite 531feb50bd0e4f1fa8a49efaa448989f
  Percent 9bc35ebe469aab1ad3d8edfd9fd30da6
db36ef1624efe5dabea312d4c631a33d
  $tc'C:Renderer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13837472412662055692##
                   9168878423226045508##
                   StreetRun.Renderer.$trModule
                   StreetRun.Renderer.$tc'C:Renderer2
                   1#
                   StreetRun.Renderer.$tc'C:Renderer1) -}
8f98699188b840e5c5539b4de9525ba0
  $tc'C:Renderer1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3cf4c4310099367c9fb98ceab212e718
  $tc'C:Renderer2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Renderer.$tc'C:Renderer3) -}
0fc5f89c67855d63fea3572d796f4d1c
  $tc'C:Renderer3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:Renderer"#) -}
e49d48edb67daadb46ee1aacc54d02a3
  $tcRenderer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11071232882400314140##
                   4777465051328501973##
                   StreetRun.Renderer.$trModule
                   StreetRun.Renderer.$tcRenderer2
                   0#
                   StreetRun.Renderer.$tcRenderer1) -}
40b3cc54bfcb75f6eee7278cef7a835f
  $tcRenderer1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c717f5537df242b01d27280d496d759b
  $tcRenderer2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Renderer.$tcRenderer3) -}
78aba862a41f3d3bc437744b78b40660
  $tcRenderer3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Renderer"#) -}
caedb621ea7ef52a6e505679c297b6b3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Renderer.$trModule3
                   StreetRun.Renderer.$trModule1) -}
130b46c04a40bb1a3e53975cb2c78ab1
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Renderer.$trModule2) -}
8921d60f54874f8f20fdb3e85ed33b69
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Renderer"#) -}
3efa7ec0a3cffa892611a6ea59bafc7f
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Renderer.$trModule4) -}
8233917a180031b12970c1a0fd71188b
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
bda697b6a69aaed3882f497cced359de
  $wclearScreen' ::
    (forall a b. m a -> (a -> m b) -> m b)
    -> (SDL.Internal.Types.Renderer -> m ())
    -> Control.Monad.Reader.Class.MonadReader
         StreetRun.Config.Config m =>
       m ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,C(U)><L,1*U(A,A,A,1*C1(U))>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: forall a b. m a -> (a -> m b) -> m b)
                   (ww1 :: SDL.Internal.Types.Renderer -> m ())
                   (w :: Control.Monad.Reader.Class.MonadReader
                           StreetRun.Config.Config m) ->
                 ww
                   @ SDL.Internal.Types.Renderer
                   @ ()
                   (Control.Monad.Reader.Class.reader
                      @ StreetRun.Config.Config
                      @ m
                      w
                      @ SDL.Internal.Types.Renderer
                      StreetRun.Config.$sel:cRenderer:Config)
                   (\ (renderer :: SDL.Internal.Types.Renderer) -> ww1 renderer)) -}
879b383bd7b1ca67a12fca41ecb57c3d
  class GHC.Base.Monad m => Renderer (m :: * -> *) where
    clearScreen :: m ()
    drawScreen :: m ()
    getRunnerAnimations :: m (StreetRun.Types.Animations
                                StreetRun.Runner.RunnerKey)
    getLavaAnimations :: m (StreetRun.Types.Animations
                              StreetRun.Snag.LavaKey)
    getRockAnimations :: m (StreetRun.Types.Animations
                              StreetRun.Snag.RockKey)
    getBirdAnimations :: m (StreetRun.Types.Animations
                              StreetRun.Snag.BirdKey)
    getBuildingAnimations :: m (StreetRun.Types.Animations
                                  StreetRun.Scenario.BuildingKey)
    getGrassAnimations :: m (StreetRun.Types.Animations
                               StreetRun.Scenario.GrassKey)
    drawRunner :: StreetRun.Types.DrawSprite
                    StreetRun.Runner.RunnerKey m
    drawLava :: StreetRun.Types.DrawSprite StreetRun.Snag.LavaKey m
    drawRock :: StreetRun.Types.DrawSprite StreetRun.Snag.RockKey m
    drawBird :: StreetRun.Types.DrawSprite StreetRun.Snag.BirdKey m
    drawBuilding :: StreetRun.Types.DrawSprite
                      StreetRun.Scenario.BuildingKey m
    drawGrass :: StreetRun.Types.DrawSprite
                   StreetRun.Scenario.GrassKey m
    drawBackStreet :: (GHC.Types.Int, GHC.Types.Int) -> m ()
    drawStreet :: (GHC.Types.Int, GHC.Types.Int) -> m ()
    drawBlackOverlay :: StreetRun.Types.Percent -> m ()
    drawHiscoreText :: (GHC.Types.Int, GHC.Types.Int) -> m ()
    drawPauseText :: (GHC.Types.Int, GHC.Types.Int) -> m ()
    drawGameOverText :: (GHC.Types.Int, GHC.Types.Int) -> m ()
    drawPressSpaceText :: (GHC.Types.Int, GHC.Types.Int) -> m ()
    drawPressEscapeText :: (GHC.Types.Int, GHC.Types.Int) -> m ()
    drawTitleText :: (GHC.Types.Int, GHC.Types.Int) -> m ()
    drawNumber :: StreetRun.Font.Number
                  -> (GHC.Types.Int, GHC.Types.Int) -> m ()
    drawControlsText :: (GHC.Types.Int, GHC.Types.Int) -> m ()
    {-# MINIMAL clearScreen, drawScreen, getRunnerAnimations,
                getLavaAnimations, getRockAnimations, getBirdAnimations,
                getBuildingAnimations, getGrassAnimations, drawRunner, drawLava,
                drawRock, drawBird, drawBuilding, drawGrass, drawBackStreet,
                drawStreet, drawBlackOverlay, drawHiscoreText, drawPauseText,
                drawGameOverText, drawPressSpaceText, drawPressEscapeText,
                drawTitleText, drawNumber, drawControlsText #-}
ccf52ea587c1ecc8ec1796df4caa3d7d
  backStreetY :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
ab86752338eaff4cb8c6e6f15dcd589f
  buildingY :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# -16#) -}
1350ffd59d3419c0f668afcdafc5ad44
  clearScreen' ::
    (StreetRun.SDLRenderer.SDLRenderer m,
     Control.Monad.Reader.Class.MonadReader
       StreetRun.Config.Config m) =>
    m ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LC(C(S))LLL)LLLL),1*U(1*U(A,1*C1(C1(U)),A,A,A),A,C(U),A,A)><L,1*U(A,A,A,1*C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ @ m :: * -> *
                   (w :: StreetRun.SDLRenderer.SDLRenderer m)
                   (w1 :: Control.Monad.Reader.Class.MonadReader
                            StreetRun.Config.Config m) ->
                 case w of ww { StreetRun.SDLRenderer.C:SDLRenderer ww1 ww2 ww3 ww4 ww5 ->
                 case ww1 of ww6 { GHC.Base.C:Monad ww7 ww8 ww9 ww10 ww11 ->
                 StreetRun.Renderer.$wclearScreen' @ m ww8 ww3 w1 } }) -}
003fa5805c240f0f03d27f5af90ca290
  drawScreen' ::
    (StreetRun.SDLRenderer.SDLRenderer m,
     Control.Monad.Reader.Class.MonadReader
       StreetRun.Config.Config m) =>
    m ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LC(C(S))LLL)LLLL),1*U(1*U(A,1*C1(C1(U)),A,A,A),C(U),A,A,A)><L,1*U(A,A,A,1*C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ @ m :: * -> *
                   (w :: StreetRun.SDLRenderer.SDLRenderer m)
                   (w1 :: Control.Monad.Reader.Class.MonadReader
                            StreetRun.Config.Config m) ->
                 case w of ww { StreetRun.SDLRenderer.C:SDLRenderer ww1 ww2 ww3 ww4 ww5 ->
                 case ww1 of ww6 { GHC.Base.C:Monad ww7 ww8 ww9 ww10 ww11 ->
                 StreetRun.Renderer.$wclearScreen' @ m ww8 ww2 w1 } }) -}
a198ec76154c94d6ad1a9049304ad402
  grassY :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 576#) -}
db5e1961b93d8c66656c254e30009db8
  streetY :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 448#) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

