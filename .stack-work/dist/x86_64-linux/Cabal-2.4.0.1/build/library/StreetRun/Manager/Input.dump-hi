
==================== FINAL INTERFACE ====================
2019-04-25 19:02:31.778052965 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Manager.Input 8064
  interface hash: eacfc300bddf51f6422ec67bc7cb160e
  ABI hash: 60611ac9f06bd2a28b86373db069107b
  export-list hash: 046b66ed81721a6474e7a44e185c75ee
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 2aaf1a8ef5f2cb3af04d9d17b225ceb5
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Manager.Input.getInput'
  StreetRun.Manager.Input.setInput'
  StreetRun.Manager.Input.stepControl
  StreetRun.Manager.Input.updateInput'
  StreetRun.Manager.Input.HasInput{StreetRun.Manager.Input.getInput StreetRun.Manager.Input.setInput StreetRun.Manager.Input.updateInput}
module dependencies: StreetRun.Engine.Bird
                     StreetRun.Engine.Building StreetRun.Engine.Camera
                     StreetRun.Engine.Common StreetRun.Engine.Frame
                     StreetRun.Engine.Grass StreetRun.Engine.Hurdle
                     StreetRun.Engine.Hurdle_1 StreetRun.Engine.Input
                     StreetRun.Engine.Lava StreetRun.Engine.Obstacle
                     StreetRun.Engine.Out StreetRun.Engine.Out_func
                     StreetRun.Engine.Physics StreetRun.Engine.Quake
                     StreetRun.Engine.Quake_BackStreet StreetRun.Engine.Quake_Building
                     StreetRun.Engine.Quake_Grass StreetRun.Engine.Quake_Street
                     StreetRun.Engine.Rock StreetRun.Engine.Runner
                     StreetRun.Engine.Runner_func_1 StreetRun.Engine.Runner_func_2
                     StreetRun.Engine.Scene StreetRun.Engine.Sfx StreetRun.Engine.Step
                     StreetRun.Engine.Tag StreetRun.Engine.Tag_func
                     StreetRun.Engine.Types StreetRun.Engine.Work
                     StreetRun.Engine.Work_func StreetRun.State
                     StreetRun.Wrapper.SDLInput
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 deepseq-1.4.4.0
                      distributive-0.6 dlist-0.8.0.6 exceptions-0.10.1 free-5.1
                      ghc-boot-th-8.6.4 ghc-prim-0.5.3 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2 kan-extensions-5.2
                      key-state-0.2.0 lens-4.17 libyaml-0.1.1.0 linear-1.20.8 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17 scientific-0.3.6.2
                      sdl2-2.4.1.0 semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 th-abstraction-0.2.11.0
                      time-1.8.0.2 time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 transformers-compat-0.6.2
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.2 yaml-0.11.0.0
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         reflection-2.1.4:Data.Reflection linear-1.20.8:Linear.Instances
         stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Affine linear-1.20.8:Linear.Plucker
                         linear-1.20.8:Linear.Quaternion linear-1.20.8:Linear.V
                         linear-1.20.8:Linear.V0 linear-1.20.8:Linear.V1
                         linear-1.20.8:Linear.V2 linear-1.20.8:Linear.V3
                         linear-1.20.8:Linear.V4
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         sdl2-2.4.1.0:SDL.Audio sdl2-2.4.1.0:SDL.Event
                         sdl2-2.4.1.0:SDL.Exception sdl2-2.4.1.0:SDL.Hint
                         sdl2-2.4.1.0:SDL.Init sdl2-2.4.1.0:SDL.Input.GameController
                         sdl2-2.4.1.0:SDL.Input.Joystick sdl2-2.4.1.0:SDL.Input.Keyboard
                         sdl2-2.4.1.0:SDL.Input.Keyboard.Codes sdl2-2.4.1.0:SDL.Input.Mouse
                         sdl2-2.4.1.0:SDL.Internal.Types sdl2-2.4.1.0:SDL.Power
                         sdl2-2.4.1.0:SDL.Time sdl2-2.4.1.0:SDL.Video
                         sdl2-2.4.1.0:SDL.Video.OpenGL sdl2-2.4.1.0:SDL.Video.Renderer
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Data.Foldable 5f70351366640f007be66681d2212df8
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  key-state-0.2.0:KeyState f505d200ccd373546afa68666240df7e
import  -/  mtl-2.2.2:Control.Monad.State 753def63fe8e937dc636f11e5230745a
import  -/  mtl-2.2.2:Control.Monad.State.Class 94cc1438f3f9a3259fb0a2c56d3d0303
import  -/  sdl2-2.4.1.0:SDL a2c38c0f08b3d06bbb0ff9d8498c68c0
import  -/  sdl2-2.4.1.0:SDL.Event bdfb9ed9abd68e5e54327e8929789d20
import  -/  sdl2-2.4.1.0:SDL.Input.Keyboard.Codes 958ec6e4cb0fa119a48dab2683056293
import  -/  StreetRun.Engine.Input 8ed5dea8c2ff50fb4182cc619bb708e5
  exports: d2ebfd8f5e1fddf8ebe01df47fac8df1
  $sel:iDown:Input 047aef4b5239efc3f65529e526c28bcc
  $sel:iEscape:Input 047aef4b5239efc3f65529e526c28bcc
  $sel:iQuit:Input 047aef4b5239efc3f65529e526c28bcc
  $sel:iSpace:Input 047aef4b5239efc3f65529e526c28bcc
  $sel:iUp:Input 047aef4b5239efc3f65529e526c28bcc
  Input 5b5d230f1e32c4c9cf3cfcac994f6cab
  Input 047aef4b5239efc3f65529e526c28bcc
import  -/  StreetRun.State 6760bb50dcab97ca1c306ba8fc1e5a29
  exports: 9215ef2a775e8ad7562f6edbfe13ac1f
  $sel:vInput:Vars 8b8a4d5a787fdc7e1e581e9ea457e377
  Vars 8b8a4d5a787fdc7e1e581e9ea457e377
import  -/  StreetRun.Wrapper.SDLInput 0e149efae51d93fc0489a22c11cde5f3
  exports: d629e6b2297fc4e1bcc10637208076a2
  SDLInput 82ffcd4990efefa4505dd896f4004ed7
  keycodePressed 4d614476262d2040903d1993341ff15b
  keycodeReleased 176f01020e91ba4c249f65a72dba2075
  pollEventPayloads 303d7826eb3fc15e461bcf8d6d53068d
cee59216050a3951f77b0aed5f5c6104
  $tc'C:HasInput :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1712214812368932750##
                   13847675403654856546##
                   StreetRun.Manager.Input.$trModule
                   StreetRun.Manager.Input.$tc'C:HasInput2
                   1#
                   StreetRun.Manager.Input.$tc'C:HasInput1) -}
f800142ec9987ca9489238ce6afe2142
  $tc'C:HasInput1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
91344a0ae94c3328426d01ef893e36a9
  $tc'C:HasInput2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Manager.Input.$tc'C:HasInput3) -}
5b26410db9a120e6e1a4f313867769f9
  $tc'C:HasInput3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:HasInput"#) -}
3e43b7dc6900f221d3a9a09a3de498e9
  $tcHasInput :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13180180857071698194##
                   1009878929093757741##
                   StreetRun.Manager.Input.$trModule
                   StreetRun.Manager.Input.$tcHasInput2
                   0#
                   StreetRun.Manager.Input.$tcHasInput1) -}
0187c9df38f95749e702bdf7e1217811
  $tcHasInput1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
81d10f722336aa56e3f6732e383f8e27
  $tcHasInput2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Manager.Input.$tcHasInput3) -}
ee80420782c85aa8b2a0b888147f44b3
  $tcHasInput3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HasInput"#) -}
c2b402bbcc21762a11889168f81aef40
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Manager.Input.$trModule3
                   StreetRun.Manager.Input.$trModule1) -}
aae3a545cb9e06aad1a646473f6d5e58
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Manager.Input.$trModule2) -}
ad9d8f9c510ae83babd8171b4a6f7892
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Manager.Input"#) -}
f84b2732df5099006a2e6ccc8018e61e
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Manager.Input.$trModule4) -}
e420afa58193c2ec09a529408bcf9390
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
be190768d3c6457e9bf4348ef8be11ef
  $wgetInput' ::
    (forall a b. m a -> (a -> m b) -> m b)
    -> (forall a. a -> m a)
    -> m StreetRun.State.Vars
    -> m StreetRun.Engine.Input.Input
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,C(U)><L,U>, Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: forall a b. m a -> (a -> m b) -> m b)
                   (ww1 :: forall a. a -> m a)
                   (ww2 :: m StreetRun.State.Vars) ->
                 ww
                   @ StreetRun.State.Vars
                   @ StreetRun.Engine.Input.Input
                   ww2
                   (\ (s1 :: StreetRun.State.Vars) ->
                    ww1
                      @ StreetRun.Engine.Input.Input
                      (StreetRun.State.$sel:vInput:Vars s1))) -}
5abd56723262acc9544164ad679e1192
  $wstepControl ::
    [SDL.Event.EventPayload]
    -> KeyState.KeyState GHC.Types.Int
    -> KeyState.KeyState GHC.Types.Int
    -> KeyState.KeyState GHC.Types.Int
    -> KeyState.KeyState GHC.Types.Int
    -> (# KeyState.KeyState GHC.Types.Int,
          KeyState.KeyState GHC.Types.Int, KeyState.KeyState GHC.Types.Int,
          KeyState.KeyState GHC.Types.Int, GHC.Types.Bool #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U><L,U(U,U)><L,U(U,U)><L,U(U,U)><L,U(U,U)>,
     Inline: [2] -}
d7e6e19492819b49ca2db2f371cb565f
  $wupdateInput' ::
    (forall a b. m a -> (a -> m b) -> m b)
    -> (StreetRun.Engine.Input.Input -> m ())
    -> m StreetRun.Engine.Input.Input
    -> StreetRun.Wrapper.SDLInput.SDLInput m => m ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),C(C1(U))><L,C(U)><L,U><L,1*U(A,1*U)>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: forall a b. m a -> (a -> m b) -> m b)
                   (ww1 :: StreetRun.Engine.Input.Input -> m ())
                   (ww2 :: m StreetRun.Engine.Input.Input)
                   (w :: StreetRun.Wrapper.SDLInput.SDLInput m) ->
                 let {
                   lvl9 :: m [SDL.Event.EventPayload]
                   = StreetRun.Wrapper.SDLInput.pollEventPayloads @ m w
                 } in
                 ww
                   @ StreetRun.Engine.Input.Input
                   @ ()
                   ww2
                   (\ (input :: StreetRun.Engine.Input.Input) ->
                    ww
                      @ [SDL.Event.EventPayload]
                      @ ()
                      lvl9
                      (\ (events :: [SDL.Event.EventPayload]) ->
                       ww1 (StreetRun.Manager.Input.stepControl events input)))) -}
c83954caa9af776bfb3ef85042c6ac97
  class GHC.Base.Monad m => HasInput (m :: * -> *) where
    updateInput :: m ()
    setInput :: StreetRun.Engine.Input.Input -> m ()
    getInput :: m StreetRun.Engine.Input.Input
    {-# MINIMAL updateInput, setInput, getInput #-}
0df59f2e66251b65332fd2b624b3f01e
  getInput' ::
    Control.Monad.State.Class.MonadState StreetRun.State.Vars m =>
    m StreetRun.Engine.Input.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LC(C(S))LLL)LLL),1*U(1*U(A,1*C1(C1(U)),A,C(U),A),U,A,A)>,
     Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.State.Class.MonadState
                           StreetRun.State.Vars m) ->
                 case w of ww { Control.Monad.State.Class.C:MonadState ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Base.C:Monad ww6 ww7 ww8 ww9 ww10 ->
                 StreetRun.Manager.Input.$wgetInput' @ m ww7 ww9 ww2 } }) -}
46fbd5e3770adab956ad669837bf786e
  setInput' ::
    Control.Monad.State.Class.MonadState StreetRun.State.Vars m =>
    StreetRun.Engine.Input.Input -> m ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLC(S)),1*U(A,A,A,1*C1(U))><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ m :: * -> *
                   ($dMonadState :: Control.Monad.State.Class.MonadState
                                      StreetRun.State.Vars m)
                   (input :: StreetRun.Engine.Input.Input) ->
                 Control.Monad.State.Class.state
                   @ StreetRun.State.Vars
                   @ m
                   $dMonadState
                   @ ()
                   (\ (s1 :: StreetRun.State.Vars) ->
                    (GHC.Tuple.(),
                     case s1 of wild { StreetRun.State.Vars ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                     StreetRun.State.Vars ds ds1 ds2 ds3 ds4 ds5 input ds7 }))) -}
ff56b4935ff5a80ae576846313652d0b
  stepControl ::
    [SDL.Event.EventPayload]
    -> StreetRun.Engine.Input.Input -> StreetRun.Engine.Input.Input
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><S,1*U(U(U,U),U(U,U),U(U,U),U(U,U),A)>m,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [SDL.Event.EventPayload])
                   (w1 :: StreetRun.Engine.Input.Input) ->
                 case w1 of ww { StreetRun.Engine.Input.Input ww1 ww2 ww3 ww4 ww5 ->
                 case StreetRun.Manager.Input.$wstepControl
                        w
                        ww1
                        ww2
                        ww3
                        ww4 of ww6 { (#,,,,#) ww7 ww8 ww9 ww10 ww11 ->
                 StreetRun.Engine.Input.Input ww7 ww8 ww9 ww10 ww11 } }) -}
fd2a5ede6d6a8d0ae7ab006ea8befda4
  updateInput' ::
    (StreetRun.Manager.Input.HasInput m,
     StreetRun.Wrapper.SDLInput.SDLInput m) =>
    m ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LC(C(S))LLL)LLL),1*U(1*U(A,C(C1(U)),A,A,A),A,C(U),U)><L,1*U(A,1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ @ m :: * -> *
                   (w :: StreetRun.Manager.Input.HasInput m)
                   (w1 :: StreetRun.Wrapper.SDLInput.SDLInput m) ->
                 case w of ww { StreetRun.Manager.Input.C:HasInput ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Base.C:Monad ww6 ww7 ww8 ww9 ww10 ->
                 StreetRun.Manager.Input.$wupdateInput' @ m ww7 ww3 ww4 w1 } }) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

