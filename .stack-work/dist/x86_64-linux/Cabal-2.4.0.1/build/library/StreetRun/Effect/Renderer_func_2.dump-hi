
==================== FINAL INTERFACE ====================
2019-04-25 19:22:19.686320298 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Effect.Renderer_func_2 8064
  interface hash: a74304aad054fc545b055f9b9c784c32
  ABI hash: 24070f76182f29d818feee78d172aded
  export-list hash: 20c4b3a727dfc63e1397c8e4a265f761
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9e4fb1f04cc4eff0e23b2f9f31508f0f
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Effect.Renderer_func_2.drawBlackOverlay'
  StreetRun.Effect.Renderer_func_2.drawHorizontalScrollImage
  StreetRun.Effect.Renderer_func_2.drawHorizontalScrollSprite
  StreetRun.Effect.Renderer_func_2.getSpriteAnimations
  StreetRun.Effect.Renderer_func_2.stepHorizontalDistance
module dependencies: StreetRun.Config StreetRun.Effect.Renderer
                     StreetRun.Effect.Renderer_func_1 StreetRun.Engine.Bird
                     StreetRun.Engine.Building StreetRun.Engine.Camera
                     StreetRun.Engine.Font StreetRun.Engine.Font_functions
                     StreetRun.Engine.Frame StreetRun.Engine.Grass
                     StreetRun.Engine.Hurdle StreetRun.Engine.Hurdle_1
                     StreetRun.Engine.Input StreetRun.Engine.Lava
                     StreetRun.Engine.Obstacle StreetRun.Engine.Physics
                     StreetRun.Engine.Rock StreetRun.Engine.Runner StreetRun.Engine.Step
                     StreetRun.Engine.Types StreetRun.Resource
                     StreetRun.Wrapper.SDLRenderer
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      base16-bytestring-0.1.1.6 base64-bytestring-1.0.0.2
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 data-default-class-0.1.2.0
                      deepseq-1.4.4.0 distributive-0.6 dlist-0.8.0.6 errors-2.3.0
                      exceptions-0.10.1 free-5.1 ghc-boot-th-8.6.4 ghc-prim-0.5.3
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      kan-extensions-5.2 key-state-0.2.0 lens-4.17 libyaml-0.1.1.0
                      lifted-base-0.2.3.12 linear-1.20.8 monad-control-1.0.2.3 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17 scientific-0.3.6.2
                      sdl2-2.4.1.0 sdl2-image-2.0.0 sdl2-mixer-1.1.0 sdl2-ttf-2.0.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 text-conversions-0.3.0
                      th-abstraction-0.2.11.0 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.6.2 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.2
                      yaml-0.11.0.0
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Clock.TAI
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         reflection-2.1.4:Data.Reflection
         vector-0.12.0.2:Data.Vector.Unboxed stm-2.5.0.0:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         linear-1.20.8:Linear.Instances base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Affine linear-1.20.8:Linear.Plucker
                         linear-1.20.8:Linear.Quaternion linear-1.20.8:Linear.V
                         linear-1.20.8:Linear.V0 linear-1.20.8:Linear.V1
                         linear-1.20.8:Linear.V2 linear-1.20.8:Linear.V3
                         linear-1.20.8:Linear.V4
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         sdl2-2.4.1.0:SDL.Audio sdl2-2.4.1.0:SDL.Event
                         sdl2-2.4.1.0:SDL.Exception sdl2-2.4.1.0:SDL.Hint
                         sdl2-2.4.1.0:SDL.Init sdl2-2.4.1.0:SDL.Input.GameController
                         sdl2-2.4.1.0:SDL.Input.Joystick sdl2-2.4.1.0:SDL.Input.Keyboard
                         sdl2-2.4.1.0:SDL.Input.Keyboard.Codes sdl2-2.4.1.0:SDL.Input.Mouse
                         sdl2-2.4.1.0:SDL.Internal.Types sdl2-2.4.1.0:SDL.Power
                         sdl2-2.4.1.0:SDL.Time sdl2-2.4.1.0:SDL.Video
                         sdl2-2.4.1.0:SDL.Video.OpenGL sdl2-2.4.1.0:SDL.Video.Renderer
                         sdl2-image-2.0.0:SDL.Image sdl2-ttf-2.0.2:SDL.Font
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  StateVar-1.1.1.1:Data.StateVar 3356bd62ad24ee9ca28de7ecf3cb79ab
import  -/  animate-0.7.0:Animate 7c6496232245300f888f7e0dafeb231c
import  -/  base-4.12.0.0:Control.Monad.IO.Class e96805f9d79f75be66a0d44eb83064c1
import  -/  base-4.12.0.0:Foreign.C.Types 35a1d321965626990bdd0f18683810e2
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Real af2b985dd29515c375fb78b2c9298d42
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  linear-1.20.8:Linear.Affine ad49a7802911561cdceabb09a106eb0a
import  -/  linear-1.20.8:Linear.V2 4a7e4c0c9247ec5477069840e3acbf22
import  -/  linear-1.20.8:Linear.V4 c239e31f533d2317ba3df898a135744f
import  -/  linear-1.20.8:Linear.Vector ebc0287bf82b854e03a298077f8a5831
import  -/  mtl-2.2.2:Control.Monad.Reader d5c3a33f1c95bb71f4ae02f87a7048ff
import  -/  mtl-2.2.2:Control.Monad.Reader.Class 56d676c7504f5007ee5b66906716abcc
import  -/  sdl2-2.4.1.0:SDL a2c38c0f08b3d06bbb0ff9d8498c68c0
import  -/  sdl2-2.4.1.0:SDL.Vect cd47fc30aef16e8f55c1351dafae292d
import  -/  sdl2-2.4.1.0:SDL.Video.Renderer fde5d4735decffc12f192a8489c7afbb
import  -/  StreetRun.Config 5f6735077e5a1bb57e0d68657dfbe066
  exports: 718448995096e5a0315e80eb460349b2
  $sel:cRenderer:Config 97493c78c70274b9df7082b531336038
  Config 97493c78c70274b9df7082b531336038
import  -/  StreetRun.Effect.Renderer_func_1 a9608b678aa94e4aea2a526c39f1f138
  exports: 5096c284f071ed1000a4b145b540c3cf
  rectFromClip c85ce494cb7ded1862f29da1ce2ed3dd
import  -/  StreetRun.Engine.Bird 0bf40510f04513db7870a0eb83c839ab
  exports: 6e60076273bcfd5477b3f0cf8d1fb4b8
import  -/  StreetRun.Engine.Building 401c240dc76b2ac537785d52b863f952
  exports: cb80da8b5c84663056aff10870c070a8
import  -/  StreetRun.Engine.Font 0988ff1eb2a606d3c46214792ded3aaf
  exports: 0b4012bf7b7ba2d231fb49e61d3ee2dc
import  -/  StreetRun.Engine.Font_functions c76849088a4913547ebc4332565b6d68
  exports: 7ba329b9f4ccc8aaade996d3ca7dc8bf
import  -/  StreetRun.Engine.Grass 0690fbd2f8a253d4e72fcca563506522
  exports: 9609ba03635d68e1d29fc784e69668f9
import  -/  StreetRun.Engine.Lava f12a1755c46bbf2df272aa84c51b192b
  exports: f674034831bb56a1796bab0274d25cf8
import  -/  StreetRun.Engine.Rock c3a73de49be33c068fbd58b6e1005240
  exports: 09a82b06dd827cf2307a7779ea2b3f72
import  -/  StreetRun.Engine.Runner 92f0fc10c09bba0933086b352f065d17
  exports: c5bcac04dca39a47a3b45c58ae03f34c
import  -/  StreetRun.Engine.Types 6986db6c9f4d1e9fc0edc9e119b1c392
  exports: c934b5ae3d6a2dfd0319fd3b47efce61
  Animations d6e02cab8ac11b0c35f7d270737fb67c
  Distance 1d27617e6b1a52e1b2997bf23482db86
  Percent aafd0742f5cc2c53a24a559ac76fb568
  Percent 34f2154fa29bed1ea1f6b21bbba55be5
  Seconds 970124013cb076e3574e853bf4f93243
import  -/  StreetRun.Wrapper.SDLRenderer 8cea03805b1b006bb81c3dfc6e4ce7a3
  exports: 334ddba79d4365ceec7ac5a34d9b850b
  SDLRenderer 9fa7151f2e4e72b238f9dfaff11b1f84
  drawTexture 50c5cf86872286d2b373f262348263a5
  queryTexture c2d38916d1eb66e7e1a0f21a307e61d1
41c61a711d8f770839aa31d42635a8f5
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Effect.Renderer_func_2.$trModule3
                   StreetRun.Effect.Renderer_func_2.$trModule1) -}
340a3c17d5004b7cb4d03fd0f913824b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Effect.Renderer_func_2.$trModule2) -}
c54d829992e68310465ff2c46c6683b7
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("StreetRun.Effect.Renderer_func_2"#) -}
6eb94c1b08efb729c20d7188930a169a
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Effect.Renderer_func_2.$trModule4) -}
7c3cfb86fd172247bb51f3e16338f439
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
4f3d5952df6bb45c0d0dd0e246c5afe1
  $wdrawBlackOverlay' ::
    (forall a b. m a -> (a -> m b) -> m b)
    -> (forall a b. m a -> m b -> m b)
    -> (forall a. (StreetRun.Config.Config -> a) -> m a)
    -> Control.Monad.IO.Class.MonadIO m =>
       StreetRun.Engine.Types.Percent -> m ()
  {- Arity: 5,
     Strictness: <C(C(S)),1*C1(C1(U))><L,C(C1(U))><L,1*C1(U)><L,U(A,C(U))><L,1*U(U)>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: forall a b. m a -> (a -> m b) -> m b)
                   (ww1 :: forall a b. m a -> m b -> m b)
                   (ww2 :: forall a. (StreetRun.Config.Config -> a) -> m a)
                   (w :: Control.Monad.IO.Class.MonadIO m)
                   (w1 :: StreetRun.Engine.Types.Percent) ->
                 let {
                   lvl6 :: Linear.V4.V4 GHC.Word.Word8
                   = case w1
                            `cast`
                          (StreetRun.Engine.Types.N:Percent[0]) of wild1 { GHC.Types.F# y ->
                     Linear.V4.V4
                       @ GHC.Word.Word8
                       StreetRun.Effect.Renderer_func_2.drawBlackOverlay'2
                       StreetRun.Effect.Renderer_func_2.drawBlackOverlay'2
                       StreetRun.Effect.Renderer_func_2.drawBlackOverlay'2
                       (GHC.Word.W8#
                          (GHC.Prim.narrow8Word#
                             (GHC.Prim.int2Word#
                                (GHC.Prim.float2Int# (GHC.Prim.timesFloat# 255.0# y))))) }
                 } in
                 ww
                   @ SDL.Internal.Types.Renderer
                   @ ()
                   (ww2
                      @ SDL.Internal.Types.Renderer
                      StreetRun.Config.$sel:cRenderer:Config)
                   (\ (renderer :: SDL.Internal.Types.Renderer) ->
                    ww1
                      @ ()
                      @ ()
                      (case SDL.Video.Renderer.$wrendererDrawBlendMode
                              renderer of ww3 { (#,#) ww4 ww5 ->
                       Control.Monad.IO.Class.liftIO
                         @ m
                         w
                         @ ()
                         (ww5 SDL.Video.Renderer.BlendAlphaBlend) })
                      (ww1
                         @ ()
                         @ ()
                         (case SDL.Video.Renderer.$wrendererDrawColor
                                 renderer of ww3 { (#,#) ww4 ww5 ->
                          Control.Monad.IO.Class.liftIO @ m w @ () (ww5 lvl6) })
                         (ww1
                            @ ()
                            @ ()
                            (Control.Monad.IO.Class.liftIO
                               @ m
                               w
                               @ ()
                               (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                case renderer
                                       `cast`
                                     (SDL.Internal.Types.N:Renderer[0]) of ds8 { GHC.Ptr.Ptr ds9 ->
                                case {__pkg_ccall_GC sdl2-2.4.1.0 GHC.Prim.Addr#
                                                                  -> GHC.Prim.Addr#
                                                                  -> GHC.Prim.State#
                                                                       GHC.Prim.RealWorld
                                                                  -> (# GHC.Prim.State#
                                                                          GHC.Prim.RealWorld,
                                                                        GHC.Prim.Int# #)}
                                       ds9
                                       __NULL
                                       s of wild1 { (#,#) ds10 ds11 ->
                                case GHC.Prim.<# (GHC.Prim.narrow32Int# ds11) 0# of lwild {
                                  DEFAULT -> (# ds10, GHC.Tuple.() #)
                                  1#
                                  -> case {__pkg_ccall_GC sdl2-2.4.1.0 GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             GHC.Prim.Addr# #)}
                                            ds10 of wild2 { (#,#) ds1 ds2 ->
                                     case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                                           -> GHC.Prim.State#
                                                                                GHC.Prim.RealWorld
                                                                           -> (# GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld,
                                                                                 GHC.Prim.Word# #)}
                                            ds2
                                            ds1 of wild3 { (#,#) ds3 ds4 ->
                                     StreetRun.Effect.Renderer_func_2.drawBlackOverlay'1
                                       ds4
                                       ds3
                                       ds2 } } } } })
                                 `cast`
                               (Sym (GHC.Types.N:IO[0] <()>_R)))
                            (case SDL.Video.Renderer.$wrendererDrawBlendMode
                                    renderer of ww3 { (#,#) ww4 ww5 ->
                             Control.Monad.IO.Class.liftIO
                               @ m
                               w
                               @ ()
                               (ww5 SDL.Video.Renderer.BlendNone) }))))) -}
f9d2325ca240406efbca33381857c30d
  $wdrawHorizontalScrollImage ::
    (forall a b. m a -> (a -> m b) -> m b)
    -> (forall a b. m a -> m b -> m b)
    -> (forall a. (StreetRun.Config.Config -> a) -> m a)
    -> StreetRun.Wrapper.SDLRenderer.SDLRenderer m =>
       (StreetRun.Config.Config -> SDL.Video.Renderer.Texture)
       -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int -> m ()
  {- Arity: 8, HasNoCafRefs,
     Strictness: <C(C(S)),C(C1(U))><L,C(C1(U))><L,C(U)><L,U(A,A,A,C(U),C(C1(C1(C1(U)))))><L,U><L,1*U(U)><L,U(U)><L,U(U)>,
     Inline: [2] -}
e49f5e69d46f30b8ff56d88721f9bcfe
  $wdrawHorizontalScrollSprite ::
    (forall a b. m a -> (a -> m b) -> m b)
    -> (forall a b. m a -> m b -> m b)
    -> (forall a. (StreetRun.Config.Config -> a) -> m a)
    -> StreetRun.Wrapper.SDLRenderer.SDLRenderer m =>
       (StreetRun.Config.Config
        -> Animate.SpriteSheet
             key SDL.Video.Renderer.Texture StreetRun.Engine.Types.Seconds)
       -> GHC.Types.Int
       -> Animate.SpriteClip key
       -> GHC.Types.Int
       -> GHC.Types.Int
       -> m ()
  {- Arity: 9, HasNoCafRefs,
     Strictness: <C(C(S)),C(C1(U))><L,C(C1(U))><L,C(U)><L,U(A,A,A,A,C(C1(C1(C1(U)))))><L,C(U(A,1*U))><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),A)><L,U(U)><L,U(U)>,
     Inline: [2] -}
091490463f09f137469d03ca5dc0ee34
  drawBlackOverlay' ::
    (Control.Monad.Reader.Class.MonadReader StreetRun.Config.Config m,
     StreetRun.Wrapper.SDLRenderer.SDLRenderer m,
     Control.Monad.IO.Class.MonadIO m) =>
    StreetRun.Engine.Types.Percent -> m ()
  {- Arity: 4,
     Strictness: <S(S(LC(C(S))LLL)LLL),1*U(1*U(A,1*C1(C1(U)),C(C1(U)),A,A),A,A,1*C1(U))><L,A><L,U(A,C(U))><L,1*U(U)>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.Reader.Class.MonadReader
                           StreetRun.Config.Config m)
                   (w1 :: StreetRun.Wrapper.SDLRenderer.SDLRenderer m)
                   (w2 :: Control.Monad.IO.Class.MonadIO m)
                   (w3 :: StreetRun.Engine.Types.Percent) ->
                 case w of ww { Control.Monad.Reader.Class.C:MonadReader ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Base.C:Monad ww6 ww7 ww8 ww9 ww10 ->
                 StreetRun.Effect.Renderer_func_2.$wdrawBlackOverlay'
                   @ m
                   ww7
                   ww8
                   ww4
                   w2
                   w3 } }) -}
a442b06b8760d5dfc047c9af071397df
  drawBlackOverlay'1 ::
    GHC.Prim.Word#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Prim.Addr#
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><S,U><S,U> -}
6d374a489d7bfbffef347d8ad5e855f6
  drawBlackOverlay'2 :: GHC.Word.Word8
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Word.W8# 0##) -}
8f3e6198f84125da72b7112326794b5d
  drawHorizontalScrollImage ::
    (Control.Monad.Reader.Class.MonadReader StreetRun.Config.Config m,
     StreetRun.Wrapper.SDLRenderer.SDLRenderer m) =>
    (StreetRun.Config.Config -> SDL.Video.Renderer.Texture)
    -> GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int) -> m ()
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(S(LC(C(S))LLL)LLL),1*U(1*U(A,C(C1(U)),C(C1(U)),A,A),A,A,C(U))><L,U(A,A,A,C(U),C(C1(C1(C1(U)))))><L,U><L,1*U(U)><S,1*U(U(U),U(U))>,
     Inline: [2],
     Unfolding: InlineRule (5, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.Reader.Class.MonadReader
                           StreetRun.Config.Config m)
                   (w1 :: StreetRun.Wrapper.SDLRenderer.SDLRenderer m)
                   (w2 :: StreetRun.Config.Config -> SDL.Video.Renderer.Texture)
                   (w3 :: GHC.Types.Int)
                   (w4 :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case w of ww { Control.Monad.Reader.Class.C:MonadReader ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Base.C:Monad ww6 ww7 ww8 ww9 ww10 ->
                 case w4 of ww11 { (,) ww12 ww13 ->
                 StreetRun.Effect.Renderer_func_2.$wdrawHorizontalScrollImage
                   @ m
                   ww7
                   ww8
                   ww4
                   w1
                   w2
                   w3
                   ww12
                   ww13 } } }) -}
51ad36184beaa323cb21e7948dcd5049
  drawHorizontalScrollSprite ::
    (Control.Monad.Reader.Class.MonadReader StreetRun.Config.Config m,
     StreetRun.Wrapper.SDLRenderer.SDLRenderer m) =>
    (StreetRun.Config.Config
     -> Animate.SpriteSheet
          key SDL.Video.Renderer.Texture StreetRun.Engine.Types.Seconds)
    -> GHC.Types.Int
    -> Animate.SpriteClip key
    -> (GHC.Types.Int, GHC.Types.Int)
    -> m ()
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S(S(LC(C(S))LLL)LLL),1*U(1*U(A,C(C1(U)),C(C1(U)),A,A),A,A,C(U))><L,U(A,A,A,A,C(C1(C1(C1(U)))))><L,C(U(A,1*U))><L,1*U(U)><L,1*U(1*U(U),1*U(U),1*U(U),1*U(U),A)><S,1*U(U(U),U(U))>,
     Inline: [2],
     Unfolding: InlineRule (6, True, False)
                (\ @ m :: * -> *
                   @ key
                   (w :: Control.Monad.Reader.Class.MonadReader
                           StreetRun.Config.Config m)
                   (w1 :: StreetRun.Wrapper.SDLRenderer.SDLRenderer m)
                   (w2 :: StreetRun.Config.Config
                          -> Animate.SpriteSheet
                               key SDL.Video.Renderer.Texture StreetRun.Engine.Types.Seconds)
                   (w3 :: GHC.Types.Int)
                   (w4 :: Animate.SpriteClip key)
                   (w5 :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case w of ww { Control.Monad.Reader.Class.C:MonadReader ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Base.C:Monad ww6 ww7 ww8 ww9 ww10 ->
                 case w5 of ww11 { (,) ww12 ww13 ->
                 StreetRun.Effect.Renderer_func_2.$wdrawHorizontalScrollSprite
                   @ m
                   @ key
                   ww7
                   ww8
                   ww4
                   w1
                   w2
                   w3
                   w4
                   ww12
                   ww13 } } }) -}
170443c071074cf3cf39389a879b33d8
  getSpriteAnimations ::
    Control.Monad.Reader.Class.MonadReader StreetRun.Config.Config m =>
    (StreetRun.Config.Config
     -> Animate.SpriteSheet
          key SDL.Video.Renderer.Texture StreetRun.Engine.Types.Seconds)
    -> m (StreetRun.Engine.Types.Animations key)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLC(S)),1*U(A,A,A,1*C1(U))><L,C(U(1*U,A))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ m :: * -> *
                   @ key
                   ($dMonadReader :: Control.Monad.Reader.Class.MonadReader
                                       StreetRun.Config.Config m)
                   (ss :: StreetRun.Config.Config
                          -> Animate.SpriteSheet
                               key SDL.Video.Renderer.Texture StreetRun.Engine.Types.Seconds) ->
                 Control.Monad.Reader.Class.reader
                   @ StreetRun.Config.Config
                   @ m
                   $dMonadReader
                   @ (Animate.Animations
                        key (Animate.SpriteClip key) StreetRun.Engine.Types.Seconds)
                   (\ (x :: StreetRun.Config.Config) ->
                    case ss x of wild { Animate.SpriteSheet ds1 ds2 -> ds1 })) -}
7d76a71b1d8251308f823bbab0de7c51
  stepHorizontalDistance ::
    StreetRun.Engine.Types.Distance
    -> StreetRun.Engine.Types.Distance
    -> StreetRun.Engine.Types.Distance
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (dist :: StreetRun.Engine.Types.Distance)
                   (speed :: StreetRun.Engine.Types.Distance) ->
                 case dist
                        `cast`
                      (StreetRun.Engine.Types.N:Distance[0]) of wild { GHC.Types.F# x ->
                 case speed
                        `cast`
                      (StreetRun.Engine.Types.N:Distance[0]) of wild1 { GHC.Types.F# y ->
                 let {
                   x1 :: GHC.Prim.Float# = GHC.Prim.plusFloat# x y
                 } in
                 case GHC.Prim.leFloat# x1 -1280.0# of lwild {
                   DEFAULT
                   -> (GHC.Types.F# x1)
                        `cast`
                      (Sym (StreetRun.Engine.Types.N:Distance[0]))
                   1#
                   -> (GHC.Types.F# (GHC.Prim.plusFloat# x1 1280.0#))
                        `cast`
                      (Sym (StreetRun.Engine.Types.N:Distance[0])) } } }) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

