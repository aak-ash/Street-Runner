
==================== FINAL INTERFACE ====================
2019-04-25 21:19:30.455380273 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Camera 8064
  interface hash: 85fa9d0df75b1e0d6dfcaf9c0591694d
  ABI hash: 63926371f9a3875764572c53b7b589e9
  export-list hash: 0bdcb1ea14c3bd8392b27cba46d7b4fa
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd6997935d09daa6a687cb8eb0447281
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Camera.initCamera
  StreetRun.Camera.lerpCamera
  StreetRun.Camera.moveOrigin
  StreetRun.Camera.screenHeight
  StreetRun.Camera.screenV2
  StreetRun.Camera.screenWidth
  StreetRun.Camera.Camera{StreetRun.Camera.Camera camOrigin camZoom}
module dependencies:
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      array-0.5.3.0 base-4.12.0.0 base-orphans-0.8.1 bifunctors-5.5.3
                      binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2 call-stack-0.1.0
                      cereal-0.5.8.0 comonad-5.0.4 containers-0.6.0.1 contravariant-1.5
                      deepseq-1.4.4.0 distributive-0.6 exceptions-0.10.1 free-5.1
                      ghc-boot-th-8.6.4 ghc-prim-0.5.3 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2 kan-extensions-5.2
                      lens-4.17 linear-1.20.8 mtl-2.2.2 pretty-1.1.3.6 primitive-0.6.4.0
                      profunctors-5.3 reflection-2.1.4 scientific-0.3.6.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 th-abstraction-0.2.11.0
                      time-1.8.0.2 transformers-0.5.6.2 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unordered-containers-0.2.9.0
                      vector-0.12.0.2
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         reflection-2.1.4:Data.Reflection
         vector-0.12.0.2:Data.Vector.Unboxed stm-2.5.0.0:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         linear-1.20.8:Linear.Instances base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Plucker linear-1.20.8:Linear.Quaternion
                         linear-1.20.8:Linear.V linear-1.20.8:Linear.V0
                         linear-1.20.8:Linear.V1 linear-1.20.8:Linear.V2
                         linear-1.20.8:Linear.V3 linear-1.20.8:Linear.V4
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Real af2b985dd29515c375fb78b2c9298d42
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  linear-1.20.8:Linear c66c613217f57f0236b62caf498b629a
import  -/  linear-1.20.8:Linear.V2 4a7e4c0c9247ec5477069840e3acbf22
import  -/  linear-1.20.8:Linear.Vector ebc0287bf82b854e03a298077f8a5831
2825edad27438647c3fbdedec7f77477
  $fEqCamera :: GHC.Classes.Eq StreetRun.Camera.Camera
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Camera.Camera
                  StreetRun.Camera.$fEqCamera_$c==
                  StreetRun.Camera.$fEqCamera_$c/= -}
2825edad27438647c3fbdedec7f77477
  $fEqCamera_$c/= ::
    StreetRun.Camera.Camera
    -> StreetRun.Camera.Camera -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)S)L),1*U(1*U(U(U),U(U)),1*U(U(U),U(U)))><S(S(S(S)S)L),1*U(1*U(U(U),U(U)),1*U(U(U),U(U)))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Camera.Camera) (y :: StreetRun.Camera.Camera) ->
                 case StreetRun.Camera.$fEqCamera_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
2825edad27438647c3fbdedec7f77477
  $fEqCamera_$c== ::
    StreetRun.Camera.Camera
    -> StreetRun.Camera.Camera -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)S(S))L),1*U(1*U(U(U),U(U)),1*U(U(U),U(U)))><S(S(S(S)S(S))L),1*U(1*U(U(U),U(U)),1*U(U(U),U(U)))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Camera.Camera)
                   (w1 :: StreetRun.Camera.Camera) ->
                 case w of ww { StreetRun.Camera.Camera ww1 ww2 ->
                 case ww1 of ww3 { Linear.V2.V2 ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.F# ww7 ->
                 case ww5 of ww8 { GHC.Types.F# ww9 ->
                 case w1 of ww10 { StreetRun.Camera.Camera ww11 ww12 ->
                 case ww11 of ww13 { Linear.V2.V2 ww14 ww15 ->
                 case ww14 of ww16 { GHC.Types.F# ww17 ->
                 case ww15 of ww18 { GHC.Types.F# ww19 ->
                 StreetRun.Camera.$w$c==
                   ww7
                   ww9
                   ww2
                   ww17
                   ww19
                   ww12 } } } } } } } }) -}
2825edad27438647c3fbdedec7f77477
  $fShowCamera :: GHC.Show.Show StreetRun.Camera.Camera
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Camera.Camera
                  StreetRun.Camera.$fShowCamera_$cshowsPrec
                  StreetRun.Camera.$fShowCamera_$cshow
                  StreetRun.Camera.$fShowCamera_$cshowList -}
2825edad27438647c3fbdedec7f77477
  $fShowCamera1 :: StreetRun.Camera.Camera -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U),1*U(U,U))>,
     Unfolding: (\ (w :: StreetRun.Camera.Camera) ->
                 case w of ww { StreetRun.Camera.Camera ww1 ww2 ->
                 StreetRun.Camera.$w$cshowsPrec 0# ww1 ww2 }) -}
09970a08d6b3b75ebdd79b9169dd6fdd
  $fShowCamera2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
4bca73453af1a70478ed0276a8653c2b
  $fShowCamera3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("camZoom = "#) -}
d8455795169e4c7f7df655e3c82caf60
  $fShowCamera4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("camOrigin = "#) -}
c3f807055a333845c51bc98175872a38
  $fShowCamera5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Camera {"#) -}
f8027900b634ae951ee56290368da540
  $fShowCamera6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
2825edad27438647c3fbdedec7f77477
  $fShowCamera_$cshow :: StreetRun.Camera.Camera -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U),1*U(U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Camera.Camera) ->
                 StreetRun.Camera.$fShowCamera_$cshowsPrec
                   StreetRun.Camera.$fShowCamera6
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
2825edad27438647c3fbdedec7f77477
  $fShowCamera_$cshowList ::
    [StreetRun.Camera.Camera] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Camera.Camera]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Camera.Camera
                   StreetRun.Camera.$fShowCamera1
                   ls
                   s) -}
2825edad27438647c3fbdedec7f77477
  $fShowCamera_$cshowsPrec ::
    GHC.Types.Int -> StreetRun.Camera.Camera -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U),1*U(U,U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: StreetRun.Camera.Camera) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { StreetRun.Camera.Camera ww3 ww4 ->
                 StreetRun.Camera.$w$cshowsPrec ww1 ww3 ww4 } }) -}
2825edad27438647c3fbdedec7f77477
  $sel:camOrigin:Camera ::
    StreetRun.Camera.Camera -> Linear.V2.V2 GHC.Types.Float
  RecSel Left StreetRun.Camera.Camera
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Camera.Camera) ->
                 case ds of wild { StreetRun.Camera.Camera ds1 ds2 -> ds1 }) -}
2825edad27438647c3fbdedec7f77477
  $sel:camZoom:Camera ::
    StreetRun.Camera.Camera -> Linear.V2.V2 GHC.Types.Float
  RecSel Left StreetRun.Camera.Camera
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Camera.Camera) ->
                 case ds of wild { StreetRun.Camera.Camera ds1 ds2 -> ds2 }) -}
08de559a6ce61f71e8ad7a486833e784
  $tc'Camera :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1966018098795392184##
                   14876636375414634700##
                   StreetRun.Camera.$trModule
                   StreetRun.Camera.$tc'Camera2
                   0#
                   StreetRun.Camera.$tc'Camera1) -}
9ef65875e0ab530b49ae6a17d01c7bf9
  $tc'Camera1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6b09a3b524c104a0d9a1b7c3db881568
  $tc'Camera2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Camera.$tc'Camera3) -}
b14f943fa8c420c23cf2202530c2afe4
  $tc'Camera3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Camera"#) -}
44035924d51fc49197290c944ce4433e
  $tcCamera :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17422780130554357040##
                   2352440353931876182##
                   StreetRun.Camera.$trModule
                   StreetRun.Camera.$tcCamera1
                   0#
                   GHC.Types.krep$*) -}
d5a45eb028beaed40e6586c99ab808b8
  $tcCamera1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Camera.$tcCamera2) -}
68a2dfdabe82419a248429a1d8257df3
  $tcCamera2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Camera"#) -}
6ffb113249b943b6c83f57f9aff5ff08
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Camera.$trModule3
                   StreetRun.Camera.$trModule1) -}
6f22f4b54bdb1f70cc6763863ab21229
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Camera.$trModule2) -}
bfcb4b9408f4b93e41093ef397b49631
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Camera"#) -}
5db25512267cf59248a5006c49404cc3
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Camera.$trModule4) -}
3dba2c4421653d2cfbe8d183b2f8119e
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
8d2685c9b99eefb357532cb6ea32289d
  $w$c== ::
    GHC.Prim.Float#
    -> GHC.Prim.Float#
    -> Linear.V2.V2 GHC.Types.Float
    -> GHC.Prim.Float#
    -> GHC.Prim.Float#
    -> Linear.V2.V2 GHC.Types.Float
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,U><L,1*U(U(U),U(U))><S,U><L,U><L,1*U(U(U),U(U))>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Float#)
                   (ww1 :: GHC.Prim.Float#)
                   (ww2 :: Linear.V2.V2 GHC.Types.Float)
                   (ww3 :: GHC.Prim.Float#)
                   (ww4 :: GHC.Prim.Float#)
                   (ww5 :: Linear.V2.V2 GHC.Types.Float) ->
                 case GHC.Prim.eqFloat# ww ww3 of lwild {
                   DEFAULT -> GHC.Types.False
                   1#
                   -> case GHC.Prim.eqFloat# ww1 ww4 of lwild1 {
                        DEFAULT -> GHC.Types.False
                        1#
                        -> case ww2 of ww6 { Linear.V2.V2 ww7 ww8 ->
                           case ww7 of wild { GHC.Types.F# x ->
                           case ww8 of wild1 { GHC.Types.F# x1 ->
                           case ww5 of ww9 { Linear.V2.V2 ww10 ww11 ->
                           case ww10 of wild2 { GHC.Types.F# y ->
                           case ww11 of wild3 { GHC.Types.F# y1 ->
                           case GHC.Prim.eqFloat# x y of lwild2 {
                             DEFAULT -> GHC.Types.False
                             1#
                             -> GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.eqFloat# x1 y1) } } } } } } } } }) -}
602b18950a8295d2eff2931904269e0b
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Linear.V2.V2 GHC.Types.Float
    -> Linear.V2.V2 GHC.Types.Float
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U(U,U)><L,1*U(U,U)>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Linear.V2.V2 GHC.Types.Float)
                   (ww2 :: Linear.V2.V2 GHC.Types.Float) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww3 { Linear.V2.V2 ww4 ww5 ->
                     Linear.V2.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww4
                       ww5 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww3 { Linear.V2.V2 ww4 ww5 ->
                     Linear.V2.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww4
                       ww5 }
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> \ (x :: GHC.Base.String) ->
                      GHC.CString.unpackAppendCString#
                        StreetRun.Camera.$fShowCamera5
                        (GHC.CString.unpackAppendCString#
                           StreetRun.Camera.$fShowCamera4
                           (f (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    StreetRun.Camera.$fShowCamera3
                                    (f1
                                       (GHC.CString.unpackAppendCString#
                                          StreetRun.Camera.$fShowCamera2
                                          x))))))
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           StreetRun.Camera.$fShowCamera5
                           (GHC.CString.unpackAppendCString#
                              StreetRun.Camera.$fShowCamera4
                              (f (GHC.Base.++
                                    @ GHC.Types.Char
                                    GHC.Show.showCommaSpace1
                                    (GHC.CString.unpackAppendCString#
                                       StreetRun.Camera.$fShowCamera3
                                       (f1
                                          (GHC.CString.unpackAppendCString#
                                             StreetRun.Camera.$fShowCamera2
                                             (GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.$fShow(,)2
                                                x)))))))) }) -}
e63f2c0e3605eb590f74c4e2239e7573
  $wlerpCamera ::
    GHC.Types.Float
    -> StreetRun.Camera.Camera
    -> StreetRun.Camera.Camera
    -> (# Linear.V2.V2 GHC.Types.Float, Linear.V2.V2 GHC.Types.Float #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U)><L,U(1*U(U(U),U(U)),1*U(U(U),U(U)))><L,U(1*U(U(U),U(U)),1*U(U(U),U(U)))>,
     Inline: [2],
     Unfolding: (\ (w :: GHC.Types.Float)
                   (w1 :: StreetRun.Camera.Camera)
                   (w2 :: StreetRun.Camera.Camera) ->
                 (# case w1 of wild { StreetRun.Camera.Camera ds ds1 ->
                    case ds of wild1 { Linear.V2.V2 a1 b ->
                    case a1 of wild2 { GHC.Types.F# y ->
                    case b of wild3 { GHC.Types.F# y1 ->
                    case w of wild4 { GHC.Types.F# x ->
                    case w2 of wild5 { StreetRun.Camera.Camera ds2 ds3 ->
                    case ds2 of wild6 { Linear.V2.V2 a4 b3 ->
                    case a4 of wild7 { GHC.Types.F# y2 ->
                    case b3 of wild8 { GHC.Types.F# y3 ->
                    let {
                      ds4 :: GHC.Prim.Float# = GHC.Prim.minusFloat# 1.0# x
                    } in
                    Linear.V2.V2
                      @ GHC.Types.Float
                      (GHC.Types.F#
                         (GHC.Prim.plusFloat#
                            (GHC.Prim.timesFloat# x y)
                            (GHC.Prim.timesFloat# ds4 y2)))
                      (GHC.Types.F#
                         (GHC.Prim.plusFloat#
                            (GHC.Prim.timesFloat# x y1)
                            (GHC.Prim.timesFloat# ds4 y3))) } } } } } } } } },
                    case w1 of wild { StreetRun.Camera.Camera ds ds1 ->
                    case ds1 of wild1 { Linear.V2.V2 a1 b ->
                    case a1 of wild2 { GHC.Types.F# y ->
                    case b of wild3 { GHC.Types.F# y1 ->
                    case w of wild4 { GHC.Types.F# x ->
                    case w2 of wild5 { StreetRun.Camera.Camera ds2 ds3 ->
                    case ds3 of wild6 { Linear.V2.V2 a4 b3 ->
                    case a4 of wild7 { GHC.Types.F# y2 ->
                    case b3 of wild8 { GHC.Types.F# y3 ->
                    let {
                      ds4 :: GHC.Prim.Float# = GHC.Prim.minusFloat# 1.0# x
                    } in
                    Linear.V2.V2
                      @ GHC.Types.Float
                      (GHC.Types.F#
                         (GHC.Prim.plusFloat#
                            (GHC.Prim.timesFloat# x y)
                            (GHC.Prim.timesFloat# ds4 y2)))
                      (GHC.Types.F#
                         (GHC.Prim.plusFloat#
                            (GHC.Prim.timesFloat# x y1)
                            (GHC.Prim.timesFloat# ds4 y3))) } } } } } } } } } #)) -}
2825edad27438647c3fbdedec7f77477
  data Camera
    = Camera {camOrigin :: Linear.V2.V2 GHC.Types.Float,
              camZoom :: Linear.V2.V2 GHC.Types.Float}
375914fddf296f3e4e56a03285ce9522
  initCamera :: StreetRun.Camera.Camera
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (StreetRun.Camera.Camera
                   StreetRun.Camera.initCamera3
                   StreetRun.Camera.initCamera1) -}
12a38708d1b32bbef553dd920af8f3d0
  initCamera1 :: Linear.V2.V2 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Float
                   StreetRun.Camera.initCamera2
                   StreetRun.Camera.initCamera2) -}
0b70f28a7cebe3c3bf0b35ecc1331ef3
  initCamera2 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 1.0#) -}
3ff652c13733e467cc61ba88d880e2ee
  initCamera3 :: Linear.V2.V2 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Float
                   StreetRun.Camera.initCamera4
                   StreetRun.Camera.initCamera4) -}
d31ccb93c9807b4f8d332d1c1f01e587
  initCamera4 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 640.0#) -}
71a7d17bf6ea03383a228b9217071fda
  lerpCamera ::
    GHC.Types.Float
    -> StreetRun.Camera.Camera
    -> StreetRun.Camera.Camera
    -> StreetRun.Camera.Camera
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U)><L,U(U(U(U),U(U)),U(U(U),U(U)))><L,U(U(U(U),U(U)),U(U(U),U(U)))>m,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Float)
                   (w1 :: StreetRun.Camera.Camera)
                   (w2 :: StreetRun.Camera.Camera) ->
                 case StreetRun.Camera.$wlerpCamera w w1 w2 of ww { (#,#) ww1 ww2 ->
                 StreetRun.Camera.Camera ww1 ww2 }) -}
b15a8ffc08aeb0da07f783749d42a97a
  moveOrigin ::
    Linear.V2.V2 GHC.Types.Float -> Linear.V2.V2 GHC.Types.Float
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(U(U),U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Linear.V2.V2 GHC.Types.Float) ->
                 case ds of wild { Linear.V2.V2 x y ->
                 case x of wild1 { GHC.Types.F# y1 ->
                 case y of wild2 { GHC.Types.F# y2 ->
                 Linear.V2.V2
                   @ GHC.Types.Float
                   (GHC.Types.F# (GHC.Prim.minusFloat# 640.0# y1))
                   (GHC.Types.F# (GHC.Prim.minusFloat# 640.0# y2)) } } }) -}
d749dc9cfe9526b9f126b3b3fbc28746
  screenHeight :: GHC.Types.Float
  {- Strictness: m, Unfolding: (StreetRun.Camera.screenWidth) -}
2a10fb626633c8c65637ada046def9a1
  screenV2 :: Linear.V2.V2 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V2.V2
                   @ GHC.Types.Float
                   StreetRun.Camera.screenWidth
                   StreetRun.Camera.screenWidth) -}
89b4095375b03e30a566a665788c5fbb
  screenWidth :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.F# 1280.0#) -}
instance GHC.Classes.Eq [StreetRun.Camera.Camera]
  = StreetRun.Camera.$fEqCamera
instance GHC.Show.Show [StreetRun.Camera.Camera]
  = StreetRun.Camera.$fShowCamera
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

