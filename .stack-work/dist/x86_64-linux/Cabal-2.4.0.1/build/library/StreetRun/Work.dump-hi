
==================== FINAL INTERFACE ====================
2019-04-26 14:29:07.853424336 UTC

interface street-runner-0.0.0-8ZEy2IVHyWYJYWzE7qtJkg:StreetRun.Work 8064
  interface hash: 73fd16b2ab5dc6ddaebf1032de726642
  ABI hash: 84c49625e5300d184b6b74d71a119d1f
  export-list hash: be18f47a77094179ee18b27ca088c03e
  orphan hash: ae0984d8c0419deff78d05da7212152b
  flag hash: e9979ed0ba295133ef8188aa5e696ffc
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Work.PlayVars{StreetRun.Work.PlayVars pvBackStreetScroll pvBuildingPos pvBuildingScroll pvGrassPos pvGrassScroll pvObstacles pvRunnerPos pvRunnerState pvScore pvSeconds pvShowRunner pvSpeed pvStocks pvStreetScroll pvUpcomingObstacles pvZoom}
module dependencies: StreetRun.CFL StreetRun.Camera
                     StreetRun.Hurdle StreetRun.Hurdle_1 StreetRun.Input
                     StreetRun.Physics StreetRun.Runner StreetRun.Runner_func_1
                     StreetRun.Runner_func_2 StreetRun.Scenario StreetRun.Snag
                     StreetRun.Step StreetRun.Types
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 deepseq-1.4.4.0
                      distributive-0.6 dlist-0.8.0.6 exceptions-0.10.1 free-5.1
                      ghc-boot-th-8.6.4 ghc-prim-0.5.3 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2 kan-extensions-5.2
                      key-state-0.2.0 lens-4.17 libyaml-0.1.1.0 linear-1.20.8 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17 scientific-0.3.6.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 th-abstraction-0.2.11.0
                      time-1.8.0.2 time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 transformers-compat-0.6.2
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.2 yaml-0.11.0.0
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         reflection-2.1.4:Data.Reflection linear-1.20.8:Linear.Instances
         stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Plucker linear-1.20.8:Linear.Quaternion
                         linear-1.20.8:Linear.V linear-1.20.8:Linear.V0
                         linear-1.20.8:Linear.V1 linear-1.20.8:Linear.V2
                         linear-1.20.8:Linear.V3 linear-1.20.8:Linear.V4
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  animate-0.7.0:Animate cf529f033c38156be2990062be8eb570
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  lens-4.17:Control.Lens 02c38743366e4d3d260b71bddfddea13
import  -/  StreetRun.Hurdle 38a26fa541ce5ced9eea0f70d3aa69b6
  exports: ccac325c207e939d1f0d01c3da87ee30
  ObstacleState 95c2800d9f00728984a40ce71c8f5ddb
  ObstacleTag 87a5d4ad614d614ae5f2b575cc03f725
import  -/  StreetRun.Hurdle_1 c9e76027407717b022743d66c2f85407
  exports: be3dc5eb0f18c89559dce1b425bb13f5
import  -/  StreetRun.Runner a6abbd291e744158bf9018a60f48d314
  exports: ae88bb9ed2797ab0ae7bfb3fb6716c40
  RunnerKey 246fbc2203e765942b6e843f2c5465c5
  RunnerState 47dad745455c1bb3aa6466e0dcf4a02c
import  -/  StreetRun.Runner_func_1 bdddcc72b2b205ac6ed65be0261303a7
  exports: 5dd8b90845ed790a7a36c82e6f4d7138
import  -/  StreetRun.Runner_func_2 850b3567ef6c7c4675339eaa541ca68a
  exports: 132f0584768b112cf2826c60192e01cb
import  -/  StreetRun.Scenario 354a54748ba84a3c008f8f16b2acd94c
  exports: 64c6733be65834216e60f326da61cf65
  BuildingKey 8d4c5e6921f733591e707f21136e38ef
  GrassKey ad2a2fb6c9f7041cf4bd51fd17675c8c
import  -/  StreetRun.Types fe57a12901e3ac69e610bc5ec1ffe588
  exports: 68eec0a854069d6ebcc9ba499b980fc6
  Distance b4174e484e1fd82b32e71de2fbcef362
  Percent ba7abb7eeed8b328d8b72349c7c4fef0
  Score 4bad63bb3fa03e71441e81262a8b345e
  Seconds a9822968438ab4a0fccda00b12150109
  Stocks 7e2313b523e61aeeac98a063f19e7634
454bac6bacb8c3a13959acb3712742b4
  $fEqPlayVars :: GHC.Classes.Eq StreetRun.Work.PlayVars
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Work.PlayVars
                  StreetRun.Work.$fEqPlayVars_$c==
                  StreetRun.Work.$fEqPlayVars_$c/= -}
454bac6bacb8c3a13959acb3712742b4
  $fEqPlayVars_$c/= ::
    StreetRun.Work.PlayVars
    -> StreetRun.Work.PlayVars -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(1*U,1*U,1*U,1*U),1*U,1*U(1*U,1*U(U),1*U(U),1*U),1*U(1*H,1*U(U),1*U(U),1*U),1*U(1*H,1*U(U),1*U(U),1*U),1*U(1*U,1*U,1*U,1*U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U)><S(S(S)LLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(1*U,1*U,1*U,1*U),1*U,1*U(1*U,1*U(U),1*U(U),1*U),1*U(1*H,1*U(U),1*U(U),1*U),1*U(1*H,1*U(U),1*U(U),1*U),1*U(1*U,1*U,1*U,1*U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Work.PlayVars) (y :: StreetRun.Work.PlayVars) ->
                 case StreetRun.Work.$fEqPlayVars_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
454bac6bacb8c3a13959acb3712742b4
  $fEqPlayVars_$c== ::
    StreetRun.Work.PlayVars
    -> StreetRun.Work.PlayVars -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(1*U,1*U,1*U,1*U),1*U,1*U(1*U,1*U(U),1*U(U),1*U),1*U(1*H,1*U(U),1*U(U),1*U),1*U(1*H,1*U(U),1*U(U),1*U),1*U(1*U,1*U,1*U,1*U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U)><S(S(S)LLLLLLLLLLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(1*U,1*U,1*U,1*U),1*U,1*U(1*U,1*U(U),1*U(U),1*U),1*U(1*H,1*U(U),1*U(U),1*U),1*U(1*H,1*U(U),1*U(U),1*U),1*U(1*U,1*U,1*U,1*U),1*U(U),1*U(U),1*U(U),1*U(U),1*U,1*U)> -}
454bac6bacb8c3a13959acb3712742b4
  $fShowPlayVars :: GHC.Show.Show StreetRun.Work.PlayVars
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Work.PlayVars
                  StreetRun.Work.$fShowPlayVars_$cshowsPrec
                  StreetRun.Work.$fShowPlayVars_$cshow
                  StreetRun.Work.$fShowPlayVars_$cshowList -}
454bac6bacb8c3a13959acb3712742b4
  $fShowPlayVars1 :: StreetRun.Work.PlayVars -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (StreetRun.Work.$fShowPlayVars_$cshowsPrec
                   StreetRun.Work.$fShowPlayVars2) -}
505da64ecd58bfbb9d27a7c40b1dbc25
  $fShowPlayVars2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
454bac6bacb8c3a13959acb3712742b4
  $fShowPlayVars_$cshow :: StreetRun.Work.PlayVars -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U(U),U(U),1*U(U),1*U(U),1*U(U,1*U,1*U,1*U),U,1*U(U,U(U),U,U),1*U(U,U(U),U,U),1*U(U,U(U),U,U),1*U(U,1*U,1*U,1*U),1*U(U),1*U(U),1*U(U),1*U(U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Work.PlayVars) ->
                 StreetRun.Work.$fShowPlayVars_$cshowsPrec
                   StreetRun.Work.$fShowPlayVars2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
454bac6bacb8c3a13959acb3712742b4
  $fShowPlayVars_$cshowList ::
    [StreetRun.Work.PlayVars] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Work.PlayVars]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Work.PlayVars
                   StreetRun.Work.$fShowPlayVars1
                   ls
                   s) -}
454bac6bacb8c3a13959acb3712742b4
  $fShowPlayVars_$cshowsPrec ::
    GHC.Types.Int -> StreetRun.Work.PlayVars -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U),U(U),1*U(U),1*U(U),1*U(U,1*U,1*U,1*U),U,1*U(U,U(U),U,U),1*U(U,U(U),U,U),1*U(U,U(U),U,U),1*U(U,1*U,1*U,1*U),1*U(U),1*U(U),1*U(U),1*U(U),U,U)> -}
1a4536b13e7de3f585bdeb023c1d3d38
  $s$fEq(,) ::
    GHC.Classes.Eq (GHC.Types.Int, StreetRun.Hurdle.ObstacleTag)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, StreetRun.Hurdle.ObstacleTag)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Types.Int
                     @ StreetRun.Hurdle.ObstacleTag
                     GHC.Classes.$fEqInt
                     StreetRun.Hurdle.$fEqObstacleTag)
                  StreetRun.Work.$s$fEq(,)_$s$fEq(,)_$c/= -}
6ea9aed6eedc6906de33d90de14cf697
  $s$fEq(,)_$s$fEq(,)_$c/= ::
    (GHC.Types.Int, StreetRun.Hurdle.ObstacleTag)
    -> (GHC.Types.Int, StreetRun.Hurdle.ObstacleTag) -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U)><S(S(S)L),1*U(1*U(U),1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (GHC.Types.Int, StreetRun.Hurdle.ObstacleTag))
                   (y :: (GHC.Types.Int, StreetRun.Hurdle.ObstacleTag)) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case GHC.Classes.eqInt a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case a2 of wild4 {
                        StreetRun.Hurdle.ObstacleTag'Lava
                        -> case b2 of wild5 {
                             DEFAULT -> GHC.Types.True
                             StreetRun.Hurdle.ObstacleTag'Lava -> GHC.Types.False }
                        StreetRun.Hurdle.ObstacleTag'Rock
                        -> case b2 of wild5 {
                             DEFAULT -> GHC.Types.True
                             StreetRun.Hurdle.ObstacleTag'Rock -> GHC.Types.False }
                        StreetRun.Hurdle.ObstacleTag'Bird
                        -> case b2 of wild5 {
                             DEFAULT -> GHC.Types.True
                             StreetRun.Hurdle.ObstacleTag'Bird -> GHC.Types.False } } } } }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvBackStreetScroll:PlayVars ::
    StreetRun.Work.PlayVars -> StreetRun.Types.Distance
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds12 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvBuildingPos:PlayVars ::
    StreetRun.Work.PlayVars
    -> Animate.Position
         StreetRun.Scenario.BuildingKey StreetRun.Types.Seconds
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds8 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvBuildingScroll:PlayVars ::
    StreetRun.Work.PlayVars -> StreetRun.Types.Distance
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds11 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvGrassPos:PlayVars ::
    StreetRun.Work.PlayVars
    -> Animate.Position
         StreetRun.Scenario.GrassKey StreetRun.Types.Seconds
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds9 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvGrassScroll:PlayVars ::
    StreetRun.Work.PlayVars -> StreetRun.Types.Distance
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds14 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvObstacles:PlayVars ::
    StreetRun.Work.PlayVars -> [StreetRun.Hurdle.ObstacleState]
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds15 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvRunnerPos:PlayVars ::
    StreetRun.Work.PlayVars
    -> Animate.Position
         StreetRun.Runner.RunnerKey StreetRun.Types.Seconds
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds7 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvRunnerState:PlayVars ::
    StreetRun.Work.PlayVars -> StreetRun.Runner.RunnerState
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds10 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvScore:PlayVars ::
    StreetRun.Work.PlayVars -> StreetRun.Types.Score
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLL),1*U(1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds1 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvSeconds:PlayVars ::
    StreetRun.Work.PlayVars -> StreetRun.Types.Seconds
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLL),1*U(A,A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds4 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvShowRunner:PlayVars ::
    StreetRun.Work.PlayVars -> GHC.Types.Bool
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds6 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvSpeed:PlayVars ::
    StreetRun.Work.PlayVars -> StreetRun.Types.Percent
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLL),1*U(A,A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds3 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvStocks:PlayVars ::
    StreetRun.Work.PlayVars -> StreetRun.Types.Stocks
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLL),1*U(A,1*U(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds2 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvStreetScroll:PlayVars ::
    StreetRun.Work.PlayVars -> StreetRun.Types.Distance
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds13 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvUpcomingObstacles:PlayVars ::
    StreetRun.Work.PlayVars
    -> [(GHC.Types.Int, StreetRun.Hurdle.ObstacleTag)]
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds16 }) -}
454bac6bacb8c3a13959acb3712742b4
  $sel:pvZoom:PlayVars ::
    StreetRun.Work.PlayVars -> StreetRun.Runner.RunnerState
  RecSel Left StreetRun.Work.PlayVars
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLL),1*U(A,A,A,A,1*U(U,U,U,U),A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Work.PlayVars) ->
                 case ds of wild { StreetRun.Work.PlayVars ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds5 }) -}
8371ff9656a14157d29ff25b272f96cf
  $tc'PlayVars :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   871256229387469565##
                   14849259944924488951##
                   StreetRun.Work.$trModule
                   StreetRun.Work.$tc'PlayVars2
                   0#
                   StreetRun.Work.$tc'PlayVars1) -}
8b7b7e0a967708202a86737b2f208245
  $tc'PlayVars1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
379e1eea897dde8b88345eb2c91247ec
  $tc'PlayVars2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Work.$tc'PlayVars3) -}
8ccb93c657f023c059de7e97ccfa1fbf
  $tc'PlayVars3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PlayVars"#) -}
a631e7dbf50fc2847c24ef06b0fa5e88
  $tcPlayVars :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11272203216010749436##
                   17918643941445644072##
                   StreetRun.Work.$trModule
                   StreetRun.Work.$tcPlayVars1
                   0#
                   GHC.Types.krep$*) -}
38f639c7db93a8561a0d36dfc31af304
  $tcPlayVars1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Work.$tcPlayVars2) -}
fa2e3d4c627e0f5c00bc9ae19d00212a
  $tcPlayVars2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PlayVars"#) -}
c27fe1e501ea0d58519d02a90cbf413c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Work.$trModule3
                   StreetRun.Work.$trModule1) -}
5788e4390a853e5fb47e87d40f5fa1ff
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Work.$trModule2) -}
45a0661ef8f1b16cd29ef6794086d1dc
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Work"#) -}
06b28818169c7b7a7e8b90ef71828141
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Work.$trModule4) -}
6ecb8ee584e3835d56da98f1beb7adda
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-8ZEy2IVHyWYJYWzE7qtJkg"#) -}
454bac6bacb8c3a13959acb3712742b4
  data PlayVars
    = PlayVars {pvScore :: StreetRun.Types.Score,
                pvStocks :: StreetRun.Types.Stocks,
                pvSpeed :: StreetRun.Types.Percent,
                pvSeconds :: StreetRun.Types.Seconds,
                pvZoom :: StreetRun.Runner.RunnerState,
                pvShowRunner :: GHC.Types.Bool,
                pvRunnerPos :: Animate.Position
                                 StreetRun.Runner.RunnerKey StreetRun.Types.Seconds,
                pvBuildingPos :: Animate.Position
                                   StreetRun.Scenario.BuildingKey StreetRun.Types.Seconds,
                pvGrassPos :: Animate.Position
                                StreetRun.Scenario.GrassKey StreetRun.Types.Seconds,
                pvRunnerState :: StreetRun.Runner.RunnerState,
                pvBuildingScroll :: StreetRun.Types.Distance,
                pvBackStreetScroll :: StreetRun.Types.Distance,
                pvStreetScroll :: StreetRun.Types.Distance,
                pvGrassScroll :: StreetRun.Types.Distance,
                pvObstacles :: [StreetRun.Hurdle.ObstacleState],
                pvUpcomingObstacles :: [(GHC.Types.Int,
                                         StreetRun.Hurdle.ObstacleTag)]}
instance GHC.Classes.Eq [StreetRun.Work.PlayVars]
  = StreetRun.Work.$fEqPlayVars
instance GHC.Show.Show [StreetRun.Work.PlayVars]
  = StreetRun.Work.$fShowPlayVars
"SPEC/StreetRun.Work $fEq(,) @ Int @ ObstacleTag" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                           StreetRun.Hurdle.ObstacleTag)
                                                                  (v :: GHC.Classes.Eq
                                                                          GHC.Types.Int)
  GHC.Classes.$fEq(,) @ GHC.Types.Int
                      @ StreetRun.Hurdle.ObstacleTag
                      v
                      v1
  = StreetRun.Work.$s$fEq(,)
"SPEC/StreetRun.Work $fEq(,)_$c/= @ Int @ ObstacleTag" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                   StreetRun.Hurdle.ObstacleTag)
                                                                       ($dEq :: GHC.Classes.Eq
                                                                                  GHC.Types.Int)
  GHC.Classes.$fEq(,)_$c/= @ GHC.Types.Int
                           @ StreetRun.Hurdle.ObstacleTag
                           $dEq
                           $dEq1
  = StreetRun.Work.$s$fEq(,)_$s$fEq(,)_$c/=
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

