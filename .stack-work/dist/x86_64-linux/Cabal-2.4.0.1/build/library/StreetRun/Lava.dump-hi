
==================== FINAL INTERFACE ====================
2019-04-25 21:19:31.151868149 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Lava 8064
  interface hash: ca6e9bbccffcbcbe954672f1d5b37532
  ABI hash: 5ec51153d76a239977a21550d17c7b86
  export-list hash: 8c188687c68a0b6d09517355c796d818
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd6997935d09daa6a687cb8eb0447281
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Lava.lavaKey'keyName
  StreetRun.Lava.LavaKey{StreetRun.Lava.LavaKey'Idle}
module dependencies:
package dependencies: aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0
                      attoparsec-0.13.2.2 base-4.12.0.0 base-compat-0.10.5 binary-0.8.6.0
                      bytestring-0.10.8.2 conduit-1.3.1.1 containers-0.6.0.1
                      deepseq-1.4.4.0 dlist-0.8.0.6 exceptions-0.10.1 ghc-boot-th-8.6.4
                      ghc-prim-0.5.3 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 libyaml-0.1.1.0 mtl-2.2.2
                      primitive-0.6.4.0 random-1.1 resourcet-1.2.2 scientific-0.3.6.2
                      stm-2.5.0.0 tagged-0.8.6 template-haskell-2.14.0.0 text-1.2.3.1
                      time-1.8.0.2 time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.2 yaml-0.11.0.0
orphans: stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: aeson-1.4.2.0:Data.Aeson.Types.Internal
                         animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  animate-0.7.0:Animate 7c6496232245300f888f7e0dafeb231c
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Enum 87204abed08db8735fc0be5ab48689aa
import  -/  base-4.12.0.0:GHC.Err ea5e313ef4146b40b5d8b27aa168e736
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  text-1.2.3.1:Data.Text 1e51a010d8f8a6fa41d8ea82d69faf13
import  -/  text-1.2.3.1:Data.Text.Internal 537e168590e8068f673f691833f78483
fdaf3163ae08da548cdba45dc10bb4c0
  $fBoundedLavaKey :: GHC.Enum.Bounded StreetRun.Lava.LavaKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Lava.LavaKey
                  StreetRun.Lava.LavaKey'Idle
                  StreetRun.Lava.LavaKey'Idle -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey :: GHC.Enum.Enum StreetRun.Lava.LavaKey
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Lava.LavaKey
                  StreetRun.Lava.$fEnumLavaKey_$csucc
                  StreetRun.Lava.$fEnumLavaKey_$cpred
                  StreetRun.Lava.$fEnumLavaKey_$ctoEnum
                  StreetRun.Lava.$fEnumLavaKey_$cfromEnum
                  StreetRun.Lava.$fEnumLavaKey_$cenumFrom
                  StreetRun.Lava.$fEnumLavaKey_$cenumFromThen
                  StreetRun.Lava.$fEnumLavaKey_$cenumFromTo
                  StreetRun.Lava.$fEnumLavaKey_$cenumFromThenTo -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey1 :: [StreetRun.Lava.LavaKey]
  {- Unfolding: (StreetRun.Lava.$fEnumLavaKey_go_up 0#) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey2 :: [StreetRun.Lava.LavaKey]
  {- Unfolding: (StreetRun.Lava.$fEnumLavaKey_go 0#) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey3 :: [StreetRun.Lava.LavaKey]
  {- Unfolding: (StreetRun.Lava.$fEnumLavaKey_go1 0#) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey4 :: StreetRun.Lava.LavaKey
  {- Strictness: x -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey5 :: StreetRun.Lava.LavaKey
  {- Strictness: x -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_$cenumFrom ::
    StreetRun.Lava.LavaKey -> [StreetRun.Lava.LavaKey]
  {- Arity: 1, Strictness: <S,1*H>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: StreetRun.Lava.LavaKey) ->
                 case w of w1 { StreetRun.Lava.LavaKey'Idle ->
                 StreetRun.Lava.$fEnumLavaKey3 }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_$cenumFromThen ::
    StreetRun.Lava.LavaKey
    -> StreetRun.Lava.LavaKey -> [StreetRun.Lava.LavaKey]
  {- Arity: 2, Strictness: <S,1*H><S,1*H>m2, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Lava.LavaKey) (w1 :: StreetRun.Lava.LavaKey) ->
                 case w of w2 { StreetRun.Lava.LavaKey'Idle ->
                 case w1 of w3 { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Types.:
                   @ StreetRun.Lava.LavaKey
                   StreetRun.Lava.LavaKey'Idle
                   (letrec {
                      go_up1 :: GHC.Prim.Int# -> [StreetRun.Lava.LavaKey]
                        {- Arity: 1, Strictness: <S,U> -}
                      = \ (x :: GHC.Prim.Int#) ->
                        case GHC.Prim.># x 0# of lwild1 {
                          DEFAULT
                          -> GHC.Types.:
                               @ StreetRun.Lava.LavaKey
                               (GHC.Prim.tagToEnum# @ StreetRun.Lava.LavaKey x)
                               (go_up1 x)
                          1#
                          -> GHC.Types.:
                               @ StreetRun.Lava.LavaKey
                               (GHC.Prim.tagToEnum# @ StreetRun.Lava.LavaKey x)
                               (GHC.Types.[] @ StreetRun.Lava.LavaKey) }
                    } in
                    go_up1 0#) } }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_$cenumFromThenTo ::
    StreetRun.Lava.LavaKey
    -> StreetRun.Lava.LavaKey
    -> StreetRun.Lava.LavaKey
    -> [StreetRun.Lava.LavaKey]
  {- Arity: 3, Strictness: <S,1*H><S,1*H><S,1*H>m2, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: StreetRun.Lava.LavaKey)
                   (w1 :: StreetRun.Lava.LavaKey)
                   (w2 :: StreetRun.Lava.LavaKey) ->
                 case w of w3 { StreetRun.Lava.LavaKey'Idle ->
                 case w1 of w4 { StreetRun.Lava.LavaKey'Idle ->
                 case w2 of w5 { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Types.:
                   @ StreetRun.Lava.LavaKey
                   StreetRun.Lava.LavaKey'Idle
                   StreetRun.Lava.$fEnumLavaKey1 } } }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_$cenumFromTo ::
    StreetRun.Lava.LavaKey
    -> StreetRun.Lava.LavaKey -> [StreetRun.Lava.LavaKey]
  {- Arity: 2, Strictness: <S,1*H><S,1*H>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: StreetRun.Lava.LavaKey) (w1 :: StreetRun.Lava.LavaKey) ->
                 case w of w2 { StreetRun.Lava.LavaKey'Idle ->
                 case w1 of w3 { StreetRun.Lava.LavaKey'Idle ->
                 StreetRun.Lava.$fEnumLavaKey2 } }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_$cfromEnum :: StreetRun.Lava.LavaKey -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Lava.LavaKey) ->
                 case a of wild { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Types.I# 0# }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_$cpred ::
    StreetRun.Lava.LavaKey -> StreetRun.Lava.LavaKey
  {- Arity: 1, Strictness: <B,1*H>x,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Lava.LavaKey) ->
                 case a of wild { StreetRun.Lava.LavaKey'Idle ->
                 StreetRun.Lava.$fEnumLavaKey4 }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_$csucc ::
    StreetRun.Lava.LavaKey -> StreetRun.Lava.LavaKey
  {- Arity: 1, Strictness: <B,1*H>x,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: StreetRun.Lava.LavaKey) ->
                 case a of wild { StreetRun.Lava.LavaKey'Idle ->
                 StreetRun.Lava.$fEnumLavaKey5 }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_$ctoEnum :: GHC.Types.Int -> StreetRun.Lava.LavaKey
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 StreetRun.Lava.$w$ctoEnum ww1 }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_go :: GHC.Prim.Int# -> [StreetRun.Lava.LavaKey]
  {- Arity: 1, Strictness: <L,U>m2 -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_go1 :: GHC.Prim.Int# -> [StreetRun.Lava.LavaKey]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEnumLavaKey_go_up :: GHC.Prim.Int# -> [StreetRun.Lava.LavaKey]
  {- Arity: 1, Strictness: <S,U>m2 -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEqLavaKey :: GHC.Classes.Eq StreetRun.Lava.LavaKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Lava.LavaKey
                  StreetRun.Lava.$fEqLavaKey_$c==
                  StreetRun.Lava.$fEqLavaKey_$c/= -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEqLavaKey_$c/= ::
    StreetRun.Lava.LavaKey -> StreetRun.Lava.LavaKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: StreetRun.Lava.LavaKey) (y :: StreetRun.Lava.LavaKey) ->
                 case x of wild { StreetRun.Lava.LavaKey'Idle ->
                 case y of wild1 { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Types.False } }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fEqLavaKey_$c== ::
    StreetRun.Lava.LavaKey -> StreetRun.Lava.LavaKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: StreetRun.Lava.LavaKey)
                   (ds1 :: StreetRun.Lava.LavaKey) ->
                 case ds of wild { StreetRun.Lava.LavaKey'Idle ->
                 case ds1 of wild1 { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Types.True } }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fKeyNameLavaKey :: Animate.KeyName StreetRun.Lava.LavaKey
  DFunId
  {- Arity: 1, Strictness: <S,1*H>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                StreetRun.Lava.lavaKey'keyName
                  `cast`
                (Sym (Animate.N:KeyName[0] <StreetRun.Lava.LavaKey>_N)) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fOrdLavaKey :: GHC.Classes.Ord StreetRun.Lava.LavaKey
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Lava.LavaKey
                  StreetRun.Lava.$fEqLavaKey
                  StreetRun.Lava.$fOrdLavaKey_$ccompare
                  StreetRun.Lava.$fOrdLavaKey_$c<
                  StreetRun.Lava.$fOrdLavaKey_$c<=
                  StreetRun.Lava.$fOrdLavaKey_$c>
                  StreetRun.Lava.$fEqLavaKey_$c==
                  StreetRun.Lava.$fOrdLavaKey_$cmax
                  StreetRun.Lava.$fOrdLavaKey_$cmax -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fOrdLavaKey_$c< ::
    StreetRun.Lava.LavaKey -> StreetRun.Lava.LavaKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Lava.LavaKey) (b :: StreetRun.Lava.LavaKey) ->
                 case a of wild { StreetRun.Lava.LavaKey'Idle ->
                 case b of wild1 { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Types.False } }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fOrdLavaKey_$c<= ::
    StreetRun.Lava.LavaKey -> StreetRun.Lava.LavaKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Lava.LavaKey) (b :: StreetRun.Lava.LavaKey) ->
                 case b of wild { StreetRun.Lava.LavaKey'Idle ->
                 case a of wild1 { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Types.True } }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fOrdLavaKey_$c> ::
    StreetRun.Lava.LavaKey -> StreetRun.Lava.LavaKey -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Lava.LavaKey) (b :: StreetRun.Lava.LavaKey) ->
                 case b of wild { StreetRun.Lava.LavaKey'Idle ->
                 case a of wild1 { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Types.False } }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fOrdLavaKey_$ccompare ::
    StreetRun.Lava.LavaKey
    -> StreetRun.Lava.LavaKey -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*H><S,1*H>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: StreetRun.Lava.LavaKey) (b :: StreetRun.Lava.LavaKey) ->
                 case a of wild { StreetRun.Lava.LavaKey'Idle ->
                 case b of wild1 { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Types.EQ } }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fOrdLavaKey_$cmax ::
    StreetRun.Lava.LavaKey
    -> StreetRun.Lava.LavaKey -> StreetRun.Lava.LavaKey
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U()><S,1*H>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: StreetRun.Lava.LavaKey) (y :: StreetRun.Lava.LavaKey) ->
                 case y of wild { StreetRun.Lava.LavaKey'Idle -> x }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fShowLavaKey :: GHC.Show.Show StreetRun.Lava.LavaKey
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ StreetRun.Lava.LavaKey
                  StreetRun.Lava.$fShowLavaKey_$cshowsPrec
                  StreetRun.Lava.$fShowLavaKey_$cshow
                  StreetRun.Lava.$fShowLavaKey_$cshowList -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fShowLavaKey1 :: StreetRun.Lava.LavaKey -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*H><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: StreetRun.Lava.LavaKey) (eta :: GHC.Base.String) ->
                 case ds of wild { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      StreetRun.Lava.$fShowLavaKey2)
                   eta }) -}
64c63d79e38ba0e868776ce53d91b755
  $fShowLavaKey2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   StreetRun.Lava.$fShowLavaKey3) -}
836984be18d52163b4e0c3dfd4ce0cb5
  $fShowLavaKey3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LavaKey'Idle"#) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fShowLavaKey_$cshow :: StreetRun.Lava.LavaKey -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: StreetRun.Lava.LavaKey) ->
                 case x of wild { StreetRun.Lava.LavaKey'Idle ->
                 StreetRun.Lava.$fShowLavaKey2 }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fShowLavaKey_$cshowList ::
    [StreetRun.Lava.LavaKey] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [StreetRun.Lava.LavaKey]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ StreetRun.Lava.LavaKey
                   StreetRun.Lava.$fShowLavaKey1
                   ls
                   s) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $fShowLavaKey_$cshowsPrec ::
    GHC.Types.Int -> StreetRun.Lava.LavaKey -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*H><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: StreetRun.Lava.LavaKey)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild { StreetRun.Lava.LavaKey'Idle ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      StreetRun.Lava.$fShowLavaKey2)
                   eta }) -}
b4752cc4cb8ac34cb85be1f40f466b52
  $tc'LavaKey'Idle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   225800218978202089##
                   7706195777900610312##
                   StreetRun.Lava.$trModule
                   StreetRun.Lava.$tc'LavaKey'Idle2
                   0#
                   StreetRun.Lava.$tc'LavaKey'Idle1) -}
bcf029b25218595d00ebdf5a77c64bd0
  $tc'LavaKey'Idle1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
503aa4a754b4bda4accce64d08fb4713
  $tc'LavaKey'Idle2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Lava.$tc'LavaKey'Idle3) -}
09c8692aa8a495cc8349b84e3649e7e1
  $tc'LavaKey'Idle3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LavaKey'Idle"#) -}
a10dcfe29963134e512ad6cc7eaad608
  $tcLavaKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14379238239119440996##
                   16998206457034878294##
                   StreetRun.Lava.$trModule
                   StreetRun.Lava.$tcLavaKey1
                   0#
                   GHC.Types.krep$*) -}
1f7f07b57c8722e6674e91f571f4c036
  $tcLavaKey1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Lava.$tcLavaKey2) -}
cbc6a3eedf16582bea522a1fc346c888
  $tcLavaKey2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LavaKey"#) -}
1dfe7abba95ba4d67a1175db9bfaace3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Lava.$trModule3
                   StreetRun.Lava.$trModule1) -}
eb02a2009e8bfa476e06a8de59a4adbd
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Lava.$trModule2) -}
7695dc1ce928acc356a1297a130d7b7a
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Lava"#) -}
fd63b81a2eed4e070b77f24a2213c7c3
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Lava.$trModule4) -}
c9641aa7faa4ebbe3c2036ac65344660
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $w$ctoEnum :: GHC.Prim.Int# -> StreetRun.Lava.LavaKey
  {- Arity: 1, Strictness: <S,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.>=# ww 0# of lwild {
                   DEFAULT -> StreetRun.Lava.$wlvl ww
                   1#
                   -> case GHC.Prim.<=# ww 0# of lwild1 {
                        DEFAULT -> StreetRun.Lava.$wlvl ww
                        1# -> GHC.Prim.tagToEnum# @ StreetRun.Lava.LavaKey ww } }) -}
fdaf3163ae08da548cdba45dc10bb4c0
  $wlvl :: GHC.Prim.Int# -> StreetRun.Lava.LavaKey
  {- Arity: 1, Strictness: <B,U>x, Inline: [2] -}
fdaf3163ae08da548cdba45dc10bb4c0
  data LavaKey = LavaKey'Idle
fdaf3163ae08da548cdba45dc10bb4c0
  lavaKey'keyName ::
    StreetRun.Lava.LavaKey -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: StreetRun.Lava.LavaKey) ->
                 case ds of wild { StreetRun.Lava.LavaKey'Idle ->
                 StreetRun.Lava.lavaKey'keyName1 }) -}
aa3158bdd019c40c329010798daccb4b
  lavaKey'keyName1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   StreetRun.Lava.lavaKey'keyName2) -}
4fa8e0cbba9b1becab5439f90263ddf0
  lavaKey'keyName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Idle"#) -}
instance GHC.Enum.Bounded [StreetRun.Lava.LavaKey]
  = StreetRun.Lava.$fBoundedLavaKey
instance GHC.Enum.Enum [StreetRun.Lava.LavaKey]
  = StreetRun.Lava.$fEnumLavaKey
instance GHC.Classes.Eq [StreetRun.Lava.LavaKey]
  = StreetRun.Lava.$fEqLavaKey
instance Animate.KeyName [StreetRun.Lava.LavaKey]
  = StreetRun.Lava.$fKeyNameLavaKey
instance GHC.Classes.Ord [StreetRun.Lava.LavaKey]
  = StreetRun.Lava.$fOrdLavaKey
instance GHC.Show.Show [StreetRun.Lava.LavaKey]
  = StreetRun.Lava.$fShowLavaKey
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

