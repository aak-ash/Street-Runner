
==================== FINAL INTERFACE ====================
2019-04-25 22:26:38.64958347 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Load 8064
  interface hash: 5720ad06b45feb1f69198aec886701f4
  ABI hash: 3dc63bb9369eb1de600fb017ab043f16
  export-list hash: bb94dee51103db3de49f80223cdee067
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd6997935d09daa6a687cb8eb0447281
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Load.getInput'
  StreetRun.Load.setInput'
  StreetRun.Load.stepControl
  StreetRun.Load.updateInput'
  StreetRun.Load.HasInput{StreetRun.Load.getInput StreetRun.Load.setInput StreetRun.Load.updateInput}
module dependencies: StreetRun.Camera StreetRun.Common
                     StreetRun.Frame StreetRun.Hurdle StreetRun.Hurdle_1 StreetRun.Input
                     StreetRun.Out StreetRun.Out_func StreetRun.Physics StreetRun.Quake
                     StreetRun.Quake_BackStreet StreetRun.Quake_Building
                     StreetRun.Quake_Grass StreetRun.Quake_Street StreetRun.Runner
                     StreetRun.Runner_func_1 StreetRun.Runner_func_2 StreetRun.SDLInput
                     StreetRun.Scenario StreetRun.Sfx StreetRun.Snag StreetRun.State
                     StreetRun.Step StreetRun.Tag StreetRun.Tag_func StreetRun.Types
                     StreetRun.Work StreetRun.Work_func
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 deepseq-1.4.4.0
                      distributive-0.6 dlist-0.8.0.6 exceptions-0.10.1 free-5.1
                      ghc-boot-th-8.6.4 ghc-prim-0.5.3 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2 kan-extensions-5.2
                      key-state-0.2.0 lens-4.17 libyaml-0.1.1.0 linear-1.20.8 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17 scientific-0.3.6.2
                      sdl2-2.4.1.0 semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 th-abstraction-0.2.11.0
                      time-1.8.0.2 time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 transformers-compat-0.6.2
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vector-0.12.0.2 yaml-0.11.0.0
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         reflection-2.1.4:Data.Reflection linear-1.20.8:Linear.Instances
         stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Affine linear-1.20.8:Linear.Plucker
                         linear-1.20.8:Linear.Quaternion linear-1.20.8:Linear.V
                         linear-1.20.8:Linear.V0 linear-1.20.8:Linear.V1
                         linear-1.20.8:Linear.V2 linear-1.20.8:Linear.V3
                         linear-1.20.8:Linear.V4
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         sdl2-2.4.1.0:SDL.Audio sdl2-2.4.1.0:SDL.Event
                         sdl2-2.4.1.0:SDL.Exception sdl2-2.4.1.0:SDL.Hint
                         sdl2-2.4.1.0:SDL.Init sdl2-2.4.1.0:SDL.Input.GameController
                         sdl2-2.4.1.0:SDL.Input.Joystick sdl2-2.4.1.0:SDL.Input.Keyboard
                         sdl2-2.4.1.0:SDL.Input.Keyboard.Codes sdl2-2.4.1.0:SDL.Input.Mouse
                         sdl2-2.4.1.0:SDL.Internal.Types sdl2-2.4.1.0:SDL.Power
                         sdl2-2.4.1.0:SDL.Time sdl2-2.4.1.0:SDL.Video
                         sdl2-2.4.1.0:SDL.Video.OpenGL sdl2-2.4.1.0:SDL.Video.Renderer
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Data.Foldable 5f70351366640f007be66681d2212df8
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  key-state-0.2.0:KeyState f505d200ccd373546afa68666240df7e
import  -/  mtl-2.2.2:Control.Monad.State 753def63fe8e937dc636f11e5230745a
import  -/  mtl-2.2.2:Control.Monad.State.Class 94cc1438f3f9a3259fb0a2c56d3d0303
import  -/  sdl2-2.4.1.0:SDL a2c38c0f08b3d06bbb0ff9d8498c68c0
import  -/  sdl2-2.4.1.0:SDL.Event bdfb9ed9abd68e5e54327e8929789d20
import  -/  sdl2-2.4.1.0:SDL.Input.Keyboard.Codes 958ec6e4cb0fa119a48dab2683056293
import  -/  StreetRun.Input dc1e62404449c4ef4f763046555938b3
  exports: d5c6fc579c43e57e8ccb72f493e3d8f8
  $sel:iDown:Input debdce52acaa37df87e66131243c6c87
  $sel:iEscape:Input debdce52acaa37df87e66131243c6c87
  $sel:iQuit:Input debdce52acaa37df87e66131243c6c87
  $sel:iSpace:Input debdce52acaa37df87e66131243c6c87
  $sel:iUp:Input debdce52acaa37df87e66131243c6c87
  Input e98b533a546cc5e8f0f0d2754a3f06d0
  Input debdce52acaa37df87e66131243c6c87
import  -/  StreetRun.SDLInput 7f2490d25daddc69d56177a64a0d9e82
  exports: 531251f807022c0b301a8eab3b96e7f9
  SDLInput c707ee7fc58c67970eedff7fdde886ac
  keycodePressed cc16adb67ee5159fa97a55e6ea5a1911
  keycodeReleased cba7751ea4a56515fff9cc9951fed5b1
  pollEventPayloads a91c93657bcf4151e0803d26d969d260
import  -/  StreetRun.State afe769c83e1db811ae34958dff0a7dea
  exports: 9215ef2a775e8ad7562f6edbfe13ac1f
  $sel:vInput:Vars 4201915800ab738e9c71b5816972a806
  Vars 4201915800ab738e9c71b5816972a806
3dde55c39db25282fa9e63ad079e5010
  $tc'C:HasInput :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10872750098901145836##
                   8811918079519061596##
                   StreetRun.Load.$trModule
                   StreetRun.Load.$tc'C:HasInput2
                   1#
                   StreetRun.Load.$tc'C:HasInput1) -}
40e117501262ad12ae996cefb36527c5
  $tc'C:HasInput1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
67a9d51ffb434a2cf012f154d3e4cabb
  $tc'C:HasInput2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Load.$tc'C:HasInput3) -}
195f88217af4655d2d564f1642852aaf
  $tc'C:HasInput3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:HasInput"#) -}
d21492d6e408ced4b555250a9d2f9162
  $tcHasInput :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9198917501761024435##
                   2012035368532478941##
                   StreetRun.Load.$trModule
                   StreetRun.Load.$tcHasInput2
                   0#
                   StreetRun.Load.$tcHasInput1) -}
6c05eef07d2954aaa2c1a395d569aaaa
  $tcHasInput1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f537af97fb74a48feef6ecf1a9e4ef77
  $tcHasInput2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Load.$tcHasInput3) -}
74fd8c68374b4adfa07d9e27d0496378
  $tcHasInput3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HasInput"#) -}
0f3f60097c9eda56f9a77eedbaa2971c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Load.$trModule3
                   StreetRun.Load.$trModule1) -}
377b9c4ab9d87ba23e345fa5b3575014
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Load.$trModule2) -}
803691e1bf80efc2371de460be37d242
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Load"#) -}
39131d71155714a6e8e964933e71ff73
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Load.$trModule4) -}
673cb22551712490e6e0588328dcd60d
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
d5280969b4d8c5de585061039c538728
  $wgetInput' ::
    (forall a b. m a -> (a -> m b) -> m b)
    -> (forall a. a -> m a)
    -> m StreetRun.State.Vars
    -> m StreetRun.Input.Input
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,C(U)><L,U>, Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: forall a b. m a -> (a -> m b) -> m b)
                   (ww1 :: forall a. a -> m a)
                   (ww2 :: m StreetRun.State.Vars) ->
                 ww
                   @ StreetRun.State.Vars
                   @ StreetRun.Input.Input
                   ww2
                   (\ (s1 :: StreetRun.State.Vars) ->
                    ww1
                      @ StreetRun.Input.Input
                      (StreetRun.State.$sel:vInput:Vars s1))) -}
93381ed33a2fbba2609e3003f53980ea
  $wstepControl ::
    [SDL.Event.EventPayload]
    -> KeyState.KeyState GHC.Types.Int
    -> KeyState.KeyState GHC.Types.Int
    -> KeyState.KeyState GHC.Types.Int
    -> KeyState.KeyState GHC.Types.Int
    -> (# KeyState.KeyState GHC.Types.Int,
          KeyState.KeyState GHC.Types.Int, KeyState.KeyState GHC.Types.Int,
          KeyState.KeyState GHC.Types.Int, GHC.Types.Bool #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U><L,U(U,U)><L,U(U,U)><L,U(U,U)><L,U(U,U)>,
     Inline: [2] -}
90d6371ba81038c6949ff25c26f5cda2
  $wupdateInput' ::
    (forall a b. m a -> (a -> m b) -> m b)
    -> (StreetRun.Input.Input -> m ())
    -> m StreetRun.Input.Input
    -> StreetRun.SDLInput.SDLInput m => m ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),C(C1(U))><L,C(U)><L,U><L,1*U(A,1*U)>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: forall a b. m a -> (a -> m b) -> m b)
                   (ww1 :: StreetRun.Input.Input -> m ())
                   (ww2 :: m StreetRun.Input.Input)
                   (w :: StreetRun.SDLInput.SDLInput m) ->
                 let {
                   lvl9 :: m [SDL.Event.EventPayload]
                   = StreetRun.SDLInput.pollEventPayloads @ m w
                 } in
                 ww
                   @ StreetRun.Input.Input
                   @ ()
                   ww2
                   (\ (input :: StreetRun.Input.Input) ->
                    ww
                      @ [SDL.Event.EventPayload]
                      @ ()
                      lvl9
                      (\ (events :: [SDL.Event.EventPayload]) ->
                       ww1 (StreetRun.Load.stepControl events input)))) -}
a827a1b40b93ca24fd0678aff14a3874
  class GHC.Base.Monad m => HasInput (m :: * -> *) where
    updateInput :: m ()
    setInput :: StreetRun.Input.Input -> m ()
    getInput :: m StreetRun.Input.Input
    {-# MINIMAL updateInput, setInput, getInput #-}
86b22baae5666ec0b15ffa42c041ac14
  getInput' ::
    Control.Monad.State.Class.MonadState StreetRun.State.Vars m =>
    m StreetRun.Input.Input
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(LC(C(S))LLL)LLL),1*U(1*U(A,1*C1(C1(U)),A,C(U),A),U,A,A)>,
     Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.State.Class.MonadState
                           StreetRun.State.Vars m) ->
                 case w of ww { Control.Monad.State.Class.C:MonadState ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Base.C:Monad ww6 ww7 ww8 ww9 ww10 ->
                 StreetRun.Load.$wgetInput' @ m ww7 ww9 ww2 } }) -}
cae1858b005fdcc5ba51e93a49349d38
  setInput' ::
    Control.Monad.State.Class.MonadState StreetRun.State.Vars m =>
    StreetRun.Input.Input -> m ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLC(S)),1*U(A,A,A,1*C1(U))><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ m :: * -> *
                   ($dMonadState :: Control.Monad.State.Class.MonadState
                                      StreetRun.State.Vars m)
                   (input :: StreetRun.Input.Input) ->
                 Control.Monad.State.Class.state
                   @ StreetRun.State.Vars
                   @ m
                   $dMonadState
                   @ ()
                   (\ (s1 :: StreetRun.State.Vars) ->
                    (GHC.Tuple.(),
                     case s1 of wild { StreetRun.State.Vars ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                     StreetRun.State.Vars ds ds1 ds2 ds3 ds4 ds5 input ds7 }))) -}
2145c61a58bc015f73ada4dbb406da5e
  stepControl ::
    [SDL.Event.EventPayload]
    -> StreetRun.Input.Input -> StreetRun.Input.Input
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><S,1*U(U(U,U),U(U,U),U(U,U),U(U,U),A)>m,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [SDL.Event.EventPayload]) (w1 :: StreetRun.Input.Input) ->
                 case w1 of ww { StreetRun.Input.Input ww1 ww2 ww3 ww4 ww5 ->
                 case StreetRun.Load.$wstepControl
                        w
                        ww1
                        ww2
                        ww3
                        ww4 of ww6 { (#,,,,#) ww7 ww8 ww9 ww10 ww11 ->
                 StreetRun.Input.Input ww7 ww8 ww9 ww10 ww11 } }) -}
f510f8119c3c4e774a33c2459719a17b
  updateInput' ::
    (StreetRun.Load.HasInput m, StreetRun.SDLInput.SDLInput m) => m ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LC(C(S))LLL)LLL),1*U(1*U(A,C(C1(U)),A,A,A),A,C(U),U)><L,1*U(A,1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ @ m :: * -> *
                   (w :: StreetRun.Load.HasInput m)
                   (w1 :: StreetRun.SDLInput.SDLInput m) ->
                 case w of ww { StreetRun.Load.C:HasInput ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Base.C:Monad ww6 ww7 ww8 ww9 ww10 ->
                 StreetRun.Load.$wupdateInput' @ m ww7 ww3 ww4 w1 } }) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

