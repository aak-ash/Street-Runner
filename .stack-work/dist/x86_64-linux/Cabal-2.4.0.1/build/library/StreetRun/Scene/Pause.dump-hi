
==================== FINAL INTERFACE ====================
2019-04-25 19:42:29.509801229 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Scene.Pause 8064
  interface hash: 1ea17d072ea5915c08c7f1c49d1425b3
  ABI hash: aec473276a62662b7c196060a3da1176
  export-list hash: 8586959a20993ae51b40207d6cca6cd1
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: de258abf6559f3c6fe75345ba5c1b459
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Scene.Pause.drawPause
  StreetRun.Scene.Pause.pauseStep'
  StreetRun.Scene.Pause.Pause{StreetRun.Scene.Pause.pauseStep}
module dependencies: StreetRun.Config StreetRun.Effect.Audio
                     StreetRun.Effect.Clock StreetRun.Effect.HUD StreetRun.Effect.Logger
                     StreetRun.Effect.Picture StreetRun.Effect.Renderer
                     StreetRun.Effect.Renderer_func_1 StreetRun.Effect.Renderer_func_2
                     StreetRun.Effect.Sound_effects StreetRun.Engine.Bird
                     StreetRun.Engine.Building StreetRun.Engine.Camera
                     StreetRun.Engine.Common StreetRun.Engine.Font
                     StreetRun.Engine.Font_functions StreetRun.Engine.Frame
                     StreetRun.Engine.Grass StreetRun.Engine.Hurdle
                     StreetRun.Engine.Hurdle_1 StreetRun.Engine.Input
                     StreetRun.Engine.Lava StreetRun.Engine.Obstacle
                     StreetRun.Engine.Out StreetRun.Engine.Out_func
                     StreetRun.Engine.Physics StreetRun.Engine.Quake
                     StreetRun.Engine.Quake_BackStreet StreetRun.Engine.Quake_Building
                     StreetRun.Engine.Quake_Grass StreetRun.Engine.Quake_Street
                     StreetRun.Engine.Rock StreetRun.Engine.Runner
                     StreetRun.Engine.Runner_func_1 StreetRun.Engine.Runner_func_2
                     StreetRun.Engine.Scene_change StreetRun.Engine.Sfx
                     StreetRun.Engine.Step StreetRun.Engine.Tag
                     StreetRun.Engine.Tag_func StreetRun.Engine.Types
                     StreetRun.Engine.Work StreetRun.Engine.Work_func
                     StreetRun.Manager.Load StreetRun.Manager.Scene StreetRun.Resource
                     StreetRun.Scene.Play StreetRun.State StreetRun.Wrapper.SDLInput
                     StreetRun.Wrapper.SDLRenderer
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      base16-bytestring-0.1.1.6 base64-bytestring-1.0.0.2
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 data-default-class-0.1.2.0
                      deepseq-1.4.4.0 distributive-0.6 dlist-0.8.0.6 errors-2.3.0
                      exceptions-0.10.1 free-5.1 ghc-boot-th-8.6.4 ghc-prim-0.5.3
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      kan-extensions-5.2 key-state-0.2.0 lens-4.17 libyaml-0.1.1.0
                      lifted-base-0.2.3.12 linear-1.20.8 monad-control-1.0.2.3 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17
                      safe-exceptions-0.1.7.0 scientific-0.3.6.2 sdl2-2.4.1.0
                      sdl2-image-2.0.0 sdl2-mixer-1.1.0 sdl2-ttf-2.0.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 text-conversions-0.3.0
                      th-abstraction-0.2.11.0 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.6.2 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.2
                      yaml-0.11.0.0
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         reflection-2.1.4:Data.Reflection linear-1.20.8:Linear.Instances
         stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Affine linear-1.20.8:Linear.Plucker
                         linear-1.20.8:Linear.Quaternion linear-1.20.8:Linear.V
                         linear-1.20.8:Linear.V0 linear-1.20.8:Linear.V1
                         linear-1.20.8:Linear.V2 linear-1.20.8:Linear.V3
                         linear-1.20.8:Linear.V4
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         sdl2-2.4.1.0:SDL.Audio sdl2-2.4.1.0:SDL.Event
                         sdl2-2.4.1.0:SDL.Exception sdl2-2.4.1.0:SDL.Hint
                         sdl2-2.4.1.0:SDL.Init sdl2-2.4.1.0:SDL.Input.GameController
                         sdl2-2.4.1.0:SDL.Input.Joystick sdl2-2.4.1.0:SDL.Input.Keyboard
                         sdl2-2.4.1.0:SDL.Input.Keyboard.Codes sdl2-2.4.1.0:SDL.Input.Mouse
                         sdl2-2.4.1.0:SDL.Internal.Types sdl2-2.4.1.0:SDL.Power
                         sdl2-2.4.1.0:SDL.Time sdl2-2.4.1.0:SDL.Video
                         sdl2-2.4.1.0:SDL.Video.OpenGL sdl2-2.4.1.0:SDL.Video.Renderer
                         sdl2-image-2.0.0:SDL.Image sdl2-ttf-2.0.2:SDL.Font
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Control.Monad 728c9526f38369d3ad3bf7824b06e87e
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  key-state-0.2.0:KeyState f505d200ccd373546afa68666240df7e
import  -/  mtl-2.2.2:Control.Monad.State 753def63fe8e937dc636f11e5230745a
import  -/  mtl-2.2.2:Control.Monad.State.Class 94cc1438f3f9a3259fb0a2c56d3d0303
import  -/  StreetRun.Effect.HUD f9bfb9f6aa4889d50b2ee3ffd92a38eb
  exports: 1513d5ed5cda58f06011a28449dbff9a
  HUD fc223c5cb769bec6a1ba86e1c4eb9c15
import  -/  StreetRun.Effect.Picture 37f92f682c1a92fcd7c7fcca83b0e1ce
  exports: 325a52fa897941b0bb8ce7d33861c5c1
  CameraControl caddcb79db93a69450b9671fbfb1ee07
  disableZoom 5ae3183ba0878f6fd71fd41ee23110a9
  enableZoom 270b737495323f20dd25088b70f5a754
import  -/  StreetRun.Effect.Renderer ab90110934e7b75f3455023d30483443
  exports: cbf684934b44747975b302576fca8d1f
  Renderer d187c6010c0ba5c0f84877a624ef3fab
  drawBlackOverlay 810a193e091ed2216e368b8d7f3e4826
  drawPauseText d17b63f0d7df4918cf4b96e8815c1a40
import  -/  StreetRun.Effect.Renderer_func_1 a9608b678aa94e4aea2a526c39f1f138
  exports: 5096c284f071ed1000a4b145b540c3cf
import  -/  StreetRun.Effect.Renderer_func_2 24070f76182f29d818feee78d172aded
  exports: 20c4b3a727dfc63e1397c8e4a265f761
import  -/  StreetRun.Engine.Common 4d0d5abc96d404a54bf9e869f10eaeb3
  exports: 6ba732522c41dfd1680709da05125599
  HasCommonVars 1902e2cee2c9cb85ed965064ea16c14d
import  -/  StreetRun.Engine.Input 8ed5dea8c2ff50fb4182cc619bb708e5
  exports: d2ebfd8f5e1fddf8ebe01df47fac8df1
  $sel:iSpace:Input 047aef4b5239efc3f65529e526c28bcc
import  -/  StreetRun.Engine.Scene_change 253b9956c7accfa8a990d6cdb327d6b3
  Scene'Play a4e9e07d7dd84db89ca07abd67e5a98f
import  -/  StreetRun.Engine.Work 2093cc6ef87d0747d31187ee7f4f6e98
  exports: 6477792e7e6fbcfa456b9e9fd542c55e
import  -/  StreetRun.Engine.Work_func 5d5c1ab58a668b4426b71411aac59071
  exports: d6952fa3f315a51912879459d6a4cf3b
  HasPlayVars eba756839bda4b326f1dc840564166a5
import  -/  StreetRun.Manager.Load b17a9b87fd3fad5a68e2c7b1a58675ff
  exports: e129c81ac26341241599af1bf56028af
  HasInput d4a6564b950be4600c0d17462501d132
  getInput c77838a3bb68d5c19d619ca6ffdce44d
import  -/  StreetRun.Manager.Scene 70192b0738c83d5e336e779bb0e7b0eb
  exports: 28deb09ef45708ade781a394cb3fe267
  SceneManager 6f1a4f9d9385f2e7d31601eacb49c57e
  toScene 16ddf7e68df0df87e303dd0b34fe6293
import  -/  StreetRun.Scene.Play fd7fb7518de6d99bfc98da0193a19cca
  exports: 7961221ad922babff9c69cb6cf2894bd
  drawPlay 72a2c75b155b34487ef6742185bd5262
fa845990f3fa0896a2bb5e7a2186528f
  $tc'C:Pause :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3340337871849225391##
                   18277190461872814232##
                   StreetRun.Scene.Pause.$trModule
                   StreetRun.Scene.Pause.$tc'C:Pause2
                   1#
                   StreetRun.Scene.Pause.$tc'C:Pause1) -}
efcd27c9d42772586d7c2fd7162d393b
  $tc'C:Pause1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c22ba6f61f6002558b95e0d0b7164c05
  $tc'C:Pause2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Scene.Pause.$tc'C:Pause3) -}
80dbce9c958a16dbce4ec722498a7783
  $tc'C:Pause3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:Pause"#) -}
81789e78d658706515f026f3572ec789
  $tcPause :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12605567293776615410##
                   5432889218290050117##
                   StreetRun.Scene.Pause.$trModule
                   StreetRun.Scene.Pause.$tcPause2
                   0#
                   StreetRun.Scene.Pause.$tcPause1) -}
58bd5c3601ebb361e2c990c8cf49c654
  $tcPause1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
37bd275fe8987f7e5cd7a7a5edda023f
  $tcPause2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Scene.Pause.$tcPause3) -}
fc3366c1a60a3dfa5dfb8152b0c75399
  $tcPause3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Pause"#) -}
bbd91ee381b86d322f4860b7efaba204
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Scene.Pause.$trModule3
                   StreetRun.Scene.Pause.$trModule1) -}
86e6426002a31e60669b294478a6dd0f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Scene.Pause.$trModule2) -}
cc0a8c45b7da726f6f4848d1b2dd6992
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Scene.Pause"#) -}
5690dcf2a3b91eaf86ca4b27203230bb
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS StreetRun.Scene.Pause.$trModule4) -}
0073184b60e825adfb5757d0cd4409b5
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
23eb6a4f5b799675a346396b54c6109a
  $wdrawPause ::
    (forall a b. m a -> m b -> m b)
    -> (StreetRun.Engine.Types.Percent -> m ())
    -> ((GHC.Types.Int, GHC.Types.Int) -> m ())
    -> StreetRun.Effect.Picture.CameraControl m => m ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),C(C1(U))><L,1*C1(U)><L,1*C1(U)><L,U(A,A,1*U,1*U)>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: forall a b. m a -> m b -> m b)
                   (ww1 :: StreetRun.Engine.Types.Percent -> m ())
                   (ww2 :: (GHC.Types.Int, GHC.Types.Int) -> m ())
                   (w :: StreetRun.Effect.Picture.CameraControl m) ->
                 ww
                   @ ()
                   @ ()
                   (ww1
                      StreetRun.Scene.Pause.drawPause4
                        `cast`
                      (Sym (StreetRun.Engine.Types.N:Percent[0])))
                   (ww
                      @ ()
                      @ ()
                      (StreetRun.Effect.Picture.disableZoom @ m w)
                      (ww
                         @ ()
                         @ ()
                         (ww2 StreetRun.Scene.Pause.drawPause1)
                         (StreetRun.Effect.Picture.enableZoom @ m w)))) -}
2a377324d15e3bffab284d0059a158a3
  class GHC.Base.Monad m => Pause (m :: * -> *) where
    pauseStep :: m ()
    {-# MINIMAL pauseStep #-}
5859626fb90a08ba76507d8a427ab3d3
  drawPause ::
    (StreetRun.Effect.Renderer.Renderer m,
     StreetRun.Effect.Picture.CameraControl m) =>
    m ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLC(C(S))LL)LLLLLLLLLLLLLLLLLLLLLLLLL),1*U(1*U(A,A,C(C1(U)),A,A),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*C1(U),A,1*C1(U),A,A,A,A,A,A)><L,U(A,A,U,U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ @ m :: * -> *
                   (w :: StreetRun.Effect.Renderer.Renderer m)
                   (w1 :: StreetRun.Effect.Picture.CameraControl m) ->
                 case w of ww { StreetRun.Effect.Renderer.C:Renderer ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ->
                 case ww1 of ww27 { GHC.Base.C:Monad ww28 ww29 ww30 ww31 ww32 ->
                 StreetRun.Scene.Pause.$wdrawPause @ m ww30 ww18 ww20 w1 } }) -}
11a9b81d2b0b36f755332f6e6617fb57
  drawPause1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((StreetRun.Scene.Pause.drawPause3,
                  StreetRun.Scene.Pause.drawPause2)) -}
2b6f05e6de929736089bfbb5f6d4dc0f
  drawPause2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 270#) -}
488bbb7f7145b324fb9646a6c7c24ede
  drawPause3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 530#) -}
5536b5ba7a874a8b8989aee69f221b2a
  drawPause4 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.8#) -}
d007c01d3f29660a0fd6397c6feb933e
  pauseStep' ::
    (StreetRun.Engine.Work_func.HasPlayVars s,
     StreetRun.Engine.Common.HasCommonVars s,
     Control.Monad.State.Class.MonadState s m,
     StreetRun.Manager.Scene.SceneManager m,
     StreetRun.Manager.Load.HasInput m,
     StreetRun.Effect.Renderer.Renderer m,
     StreetRun.Effect.Picture.CameraControl m,
     StreetRun.Effect.HUD.HUD m) =>
    m ()
  {- Arity: 8,
     Strictness: <L,1*C1(C1(C(U)))><L,1*C1(C1(C(U)))><S(S(LC(C(S))LLL)LLL),U(U(U(A,C(U),A,A,A,A),C(C1(U)),C(C1(U)),C(U),A),U,A,A)><L,1*U(A,1*C1(U))><L,1*U(A,A,A,1*U)><L,U(U(A,C(C1(U)),C(C1(U)),C(U),A),A,A,U,U,U,U,U,U,C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),C(U),C(U),1*C1(U),A,1*C1(U),A,A,A,A,A,A)><L,U(A,A,U,U)><L,U(A,U,U,U)>,
     Unfolding: (\ @ s
                   @ m :: * -> *
                   ($dHasPlayVars :: StreetRun.Engine.Work_func.HasPlayVars s)
                   ($dHasCommonVars :: StreetRun.Engine.Common.HasCommonVars s)
                   ($dMonadState :: Control.Monad.State.Class.MonadState s m)
                   ($dSceneManager :: StreetRun.Manager.Scene.SceneManager m)
                   ($dHasInput :: StreetRun.Manager.Load.HasInput m)
                   ($dRenderer :: StreetRun.Effect.Renderer.Renderer m)
                   ($dCameraControl :: StreetRun.Effect.Picture.CameraControl m)
                   ($dHUD :: StreetRun.Effect.HUD.HUD m) ->
                 case Control.Monad.State.Class.$p1MonadState
                        @ s
                        @ m
                        $dMonadState of ww { GHC.Base.C:Monad ww1 ww2 ww3 ww4 ww5 ->
                 let {
                   lvl :: m ()
                   = case $dMonadState of ww6 { Control.Monad.State.Class.C:MonadState ww7 ww8 ww9 ww10 ->
                     case ww7 of ww11 { GHC.Base.C:Monad ww12 ww13 ww14 ww15 ww16 ->
                     StreetRun.Scene.Play.$wdrawPlay
                       @ s
                       @ m
                       $dHasPlayVars
                       $dHasCommonVars
                       ww12
                       ww13
                       ww14
                       ww15
                       ww8
                       $dRenderer
                       $dCameraControl
                       $dHUD } }
                 } in
                 let {
                   lvl1 :: m ()
                   = case $dRenderer of ww6 { StreetRun.Effect.Renderer.C:Renderer ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ->
                     case ww7 of ww33 { GHC.Base.C:Monad ww34 ww35 ww36 ww37 ww38 ->
                     StreetRun.Scene.Pause.$wdrawPause
                       @ m
                       ww36
                       ww24
                       ww26
                       $dCameraControl } }
                 } in
                 let {
                   lvl2 :: m ()
                   = StreetRun.Manager.Scene.toScene
                       @ m
                       $dSceneManager
                       StreetRun.Engine.Scene_change.Scene'Play
                 } in
                 let {
                   lvl3 :: m () = GHC.Base.pure @ m ww1 @ () GHC.Tuple.()
                 } in
                 ww2
                   @ StreetRun.Engine.Input.Input
                   @ ()
                   (StreetRun.Manager.Load.getInput @ m $dHasInput)
                   (\ (input :: StreetRun.Engine.Input.Input) ->
                    ww3
                      @ ()
                      @ ()
                      lvl
                      (ww3
                         @ ()
                         @ ()
                         lvl1
                         (case input of wild { StreetRun.Engine.Input.Input ds1 ds2 ds3 ds4 ds5 ->
                          case ds1 of wild1 { KeyState.KeyState ds7 ds8 ->
                          case ds7 of wild2 {
                            DEFAULT -> lvl3 KeyState.KeyStatus'Pressed -> lvl2 } } }))) }) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

