
==================== FINAL INTERFACE ====================
2019-04-26 14:29:07.596445449 UTC

interface street-runner-0.0.0-8ZEy2IVHyWYJYWzE7qtJkg:StreetRun.Sound_effects 8064
  interface hash: 194e41293d3afe36fb49b820c117cff8
  ABI hash: d6b1e92985bd34983de20a110cbdad5e
  export-list hash: eb4fe4175b79b0dda794b44c2a2faa67
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd6997935d09daa6a687cb8eb0447281
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Sound_effects.addSfxs'
  StreetRun.Sound_effects.clearSfx'
  StreetRun.Sound_effects.playSfx'
  StreetRun.Sound_effects.AudioSfx{StreetRun.Sound_effects.addSfxs StreetRun.Sound_effects.clearSfx StreetRun.Sound_effects.playSfx}
module dependencies: StreetRun.Assets StreetRun.Assets_1
                     StreetRun.Assets_2 StreetRun.Audio StreetRun.CFL StreetRun.Camera
                     StreetRun.Common StreetRun.Config StreetRun.Font
                     StreetRun.Font_functions StreetRun.Hurdle StreetRun.Hurdle_1
                     StreetRun.Input StreetRun.Physics StreetRun.Quake
                     StreetRun.Quake_BackStreet StreetRun.Quake_Building
                     StreetRun.Quake_Grass StreetRun.Quake_Street StreetRun.Runner
                     StreetRun.Runner_func_1 StreetRun.Runner_func_2 StreetRun.Scenario
                     StreetRun.Sfx StreetRun.Snag StreetRun.Step StreetRun.Types
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      base16-bytestring-0.1.1.6 base64-bytestring-1.0.0.2
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 data-default-class-0.1.2.0
                      deepseq-1.4.4.0 distributive-0.6 dlist-0.8.0.6 errors-2.3.0
                      exceptions-0.10.1 free-5.1 ghc-boot-th-8.6.4 ghc-prim-0.5.3
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      kan-extensions-5.2 key-state-0.2.0 lens-4.17 libyaml-0.1.1.0
                      lifted-base-0.2.3.12 linear-1.20.8 monad-control-1.0.2.3 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17
                      safe-exceptions-0.1.7.0 scientific-0.3.6.2 sdl2-2.4.1.0
                      sdl2-image-2.0.0 sdl2-mixer-1.1.0 sdl2-ttf-2.0.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 text-conversions-0.3.0
                      th-abstraction-0.2.11.0 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.6.2 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.2
                      yaml-0.11.0.0
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         reflection-2.1.4:Data.Reflection linear-1.20.8:Linear.Instances
         stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Affine linear-1.20.8:Linear.Plucker
                         linear-1.20.8:Linear.Quaternion linear-1.20.8:Linear.V
                         linear-1.20.8:Linear.V0 linear-1.20.8:Linear.V1
                         linear-1.20.8:Linear.V2 linear-1.20.8:Linear.V3
                         linear-1.20.8:Linear.V4
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         sdl2-2.4.1.0:SDL.Audio sdl2-2.4.1.0:SDL.Event
                         sdl2-2.4.1.0:SDL.Exception sdl2-2.4.1.0:SDL.Hint
                         sdl2-2.4.1.0:SDL.Init sdl2-2.4.1.0:SDL.Input.GameController
                         sdl2-2.4.1.0:SDL.Input.Joystick sdl2-2.4.1.0:SDL.Input.Keyboard
                         sdl2-2.4.1.0:SDL.Input.Keyboard.Codes sdl2-2.4.1.0:SDL.Input.Mouse
                         sdl2-2.4.1.0:SDL.Internal.Types sdl2-2.4.1.0:SDL.Power
                         sdl2-2.4.1.0:SDL.Time sdl2-2.4.1.0:SDL.Video
                         sdl2-2.4.1.0:SDL.Video.OpenGL sdl2-2.4.1.0:SDL.Video.Renderer
                         sdl2-image-2.0.0:SDL.Image sdl2-ttf-2.0.2:SDL.Font
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Data.Foldable 5f70351366640f007be66681d2212df8
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  lens-4.17:Control.Lens 02c38743366e4d3d260b71bddfddea13
import  -/  lens-4.17:Control.Lens.Getter 18b0523ecb5ed8cc7fa826ffd942da08
import  -/  lens-4.17:Control.Lens.Setter 7961fe073f63bb6246bee7094d4bca17
import  -/  mtl-2.2.2:Control.Monad.State 753def63fe8e937dc636f11e5230745a
import  -/  mtl-2.2.2:Control.Monad.State.Class 94cc1438f3f9a3259fb0a2c56d3d0303
import  -/  StreetRun.Audio 91f095936fecbb9f076d29d5950c869b
  exports: 778206d5370172e5e0ea84450aec5c45
  Audio 4ba14999075ad68ce5a755a8d89bcb9d
  playBirdSfx d9792ec2564942c5a448696acf821537
  playDuckSfx 6892af05d409539f222b02910c59fea0
  playHurtSfx 3fa823b85477e1f8d19fab0d4c8801f0
  playJumpSfx 35f5f4aa0e2a01fb1c30e557b0a2cc9f
  playLavaSfx 4d5f1f87827d904fc29afead4b7049af
  playPointSfx 3f192db1f231254a271f2e429682ed5b
  playQuakeSfx 257050c0fe1d5722c150c95c34a22bcf
  playRecoverSfx d687bc619cddf3d52a0b415c0e9f7c2f
  playRockSfx 2870e964a642ebc8ba36130861f38273
  playStockSfx 21ba0ec7a5f6e6b4cbabb8b3df416129
import  -/  StreetRun.Common ec7a24ddc13a89793e354234ea8b6a8f
  exports: 5bf7e8807e04e9b7e18cf5c3f75b1f5b
  $sel:cvSfx:CommonVars 1a70b4b7adfef4baee78b76f08e9c288
  CommonVars d0ccda0544952faf6904cd020455d00a
  HasCommonVars 78e2982dec7ad30766f890d3421b5154
  commonVars 2394ba70a1376f821bc3afbedd466646
import  -/  StreetRun.Sfx 188ad4f30736accf16515482a6965264
  exports: 029fd02878001f540ae45828c6e7c393
  Sfx a3dab70cffee12c7533ffba02a25eece
  Sfx'Bird 1f1ba1728d237b5d51b72b3daf99d1d1
  Sfx'Duck eb77abe0c091145f00bdaff90b40ea21
  Sfx'Hurt 3c96acc933522ccaabee8a638f05522e
  Sfx'Jump d3f376393e045f258d4e4e5ddfe7404d
  Sfx'Lava 9d2afb631f8fa581f2d96fc1060f962a
  Sfx'Point 10fa82efc274b76820ab3985e983a1e0
  Sfx'Quake 3418156418f2be3f54fabce9f34e741c
  Sfx'Recover de8bbbbbcb8df0922fccd5201cf41108
  Sfx'Rock 09d3a0d7bd4375c4ec54e20275c0f938
  Sfx'Stock d1d978543e45439a3cea625161ca468a
af540129feaa246da0da4845a7faeed5
  $tc'C:AudioSfx :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8455907832363172209##
                   684876376975425477##
                   StreetRun.Sound_effects.$trModule
                   StreetRun.Sound_effects.$tc'C:AudioSfx2
                   1#
                   StreetRun.Sound_effects.$tc'C:AudioSfx1) -}
f3daf60d0fe56f85d2072198253875da
  $tc'C:AudioSfx1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
22b00eb93fa6b4821a2e7cf516d81514
  $tc'C:AudioSfx2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Sound_effects.$tc'C:AudioSfx3) -}
588502b08c70a380e8c47ffea65962d3
  $tc'C:AudioSfx3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:AudioSfx"#) -}
dc6529396933ff87c09ed51d460e8200
  $tcAudioSfx :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1990855494753294668##
                   15388437779411516393##
                   StreetRun.Sound_effects.$trModule
                   StreetRun.Sound_effects.$tcAudioSfx2
                   0#
                   StreetRun.Sound_effects.$tcAudioSfx1) -}
4c973b74d4c67f002f83915b27e2ece7
  $tcAudioSfx1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
217033c655354f5059722c498cec3f08
  $tcAudioSfx2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Sound_effects.$tcAudioSfx3) -}
8ac2127b1141217cec09aec09d935f96
  $tcAudioSfx3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AudioSfx"#) -}
0af6c874a72839791fd27cec760dcac6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Sound_effects.$trModule3
                   StreetRun.Sound_effects.$trModule1) -}
1c54f1645e18d930dc29d56021c128c7
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Sound_effects.$trModule2) -}
0e5c82916dd6053115e226d11d2ea5d7
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Sound_effects"#) -}
0a98e6b3fffc3c5b20d7a356226b062f
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Sound_effects.$trModule4) -}
c6707a97ca9816f8dc7e92e18108f276
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-8ZEy2IVHyWYJYWzE7qtJkg"#) -}
6c25b698bf4f6b08d131fa4e03eac95a
  $waddSfxs' ::
    StreetRun.Common.HasCommonVars s =>
    (forall a. (s -> (a, s)) -> m a) -> [StreetRun.Sfx.Sfx] -> m ()
  {- Arity: 3, Strictness: <L,1*C1(C1(C(U)))><C(S),1*C1(U)><L,U>,
     Inline: [2],
     Unfolding: (\ @ s
                   @ m :: * -> *
                   (w :: StreetRun.Common.HasCommonVars s)
                   (ww :: forall a. (s -> (a, s)) -> m a)
                   (w1 :: [StreetRun.Sfx.Sfx]) ->
                 let {
                   f :: s -> Data.Functor.Identity.Identity s
                   = w `cast` (StreetRun.Common.N:HasCommonVars[0] <s>_N)
                       @ Data.Functor.Identity.Identity
                       Data.Functor.Identity.$fFunctorIdentity
                       (\ (cv :: StreetRun.Common.CommonVars) ->
                        case cv of wild { StreetRun.Common.CommonVars ds ds1 ds2 ->
                        StreetRun.Common.CommonVars
                          ds
                          ds1
                          (GHC.Base.++ @ StreetRun.Sfx.Sfx w1 ds2) })
                         `cast`
                       (<StreetRun.Common.CommonVars>_R
                        ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                      <StreetRun.Common.CommonVars>_R))
                 } in
                 ww
                   @ ()
                   (\ (s1 :: s) ->
                    (GHC.Tuple.(),
                     (f s1) `cast` (Data.Functor.Identity.N:Identity[0] <s>_R)))) -}
19168281410972ffe2e8037dd6077227
  $wclearSfx' ::
    StreetRun.Common.HasCommonVars s =>
    (forall a. (s -> (a, s)) -> m a) -> m ()
  {- Arity: 2, Strictness: <L,1*C1(C1(C(U)))><C(S),1*C1(U)>,
     Inline: [2],
     Unfolding: (\ @ s
                   @ m :: * -> *
                   (w :: StreetRun.Common.HasCommonVars s)
                   (ww :: forall a. (s -> (a, s)) -> m a) ->
                 let {
                   f :: s -> Data.Functor.Identity.Identity s
                   = w `cast` (StreetRun.Common.N:HasCommonVars[0] <s>_N)
                       @ Data.Functor.Identity.Identity
                       Data.Functor.Identity.$fFunctorIdentity
                       StreetRun.Sound_effects.clearSfx'1
                         `cast`
                       (<StreetRun.Common.CommonVars>_R
                        ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                      <StreetRun.Common.CommonVars>_R))
                 } in
                 ww
                   @ ()
                   (\ (s1 :: s) ->
                    (GHC.Tuple.(),
                     (f s1) `cast` (Data.Functor.Identity.N:Identity[0] <s>_R)))) -}
61b40e20c8ad121c087626bea3914def
  class GHC.Base.Monad m => AudioSfx (m :: * -> *) where
    clearSfx :: m ()
    addSfxs :: [StreetRun.Sfx.Sfx] -> m ()
    playSfx :: m ()
    {-# MINIMAL clearSfx, addSfxs, playSfx #-}
5d7112eff69866d72abf7654300d2670
  addSfxs' ::
    (StreetRun.Common.HasCommonVars s,
     Control.Monad.State.Class.MonadState s m) =>
    [StreetRun.Sfx.Sfx] -> m ()
  {- Arity: 3,
     Strictness: <L,1*C1(C1(C(U)))><S(LLLC(S)),1*U(A,A,A,1*C1(U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ m :: * -> *
                   (w :: StreetRun.Common.HasCommonVars s)
                   (w1 :: Control.Monad.State.Class.MonadState s m)
                   (w2 :: [StreetRun.Sfx.Sfx]) ->
                 case w1 of ww { Control.Monad.State.Class.C:MonadState ww1 ww2 ww3 ww4 ->
                 StreetRun.Sound_effects.$waddSfxs' @ s @ m w ww4 w2 }) -}
f1c69f0b09e0a67514a2e563f54fa253
  clearSfx' ::
    (StreetRun.Common.HasCommonVars s,
     Control.Monad.State.Class.MonadState s m) =>
    m ()
  {- Arity: 2,
     Strictness: <L,1*C1(C1(C(U)))><S(LLLC(S)),1*U(A,A,A,1*C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ m :: * -> *
                   (w :: StreetRun.Common.HasCommonVars s)
                   (w1 :: Control.Monad.State.Class.MonadState s m) ->
                 case w1 of ww { Control.Monad.State.Class.C:MonadState ww1 ww2 ww3 ww4 ->
                 StreetRun.Sound_effects.$wclearSfx' @ s @ m w ww4 }) -}
dbd55b8fdd70aa1d37a8dd1968b5e306
  clearSfx'1 ::
    StreetRun.Common.CommonVars -> StreetRun.Common.CommonVars
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (cv :: StreetRun.Common.CommonVars) ->
                 case cv of wild { StreetRun.Common.CommonVars ds ds1 ds2 ->
                 StreetRun.Common.CommonVars
                   ds
                   ds1
                   (GHC.Types.[] @ StreetRun.Sfx.Sfx) }) -}
f4d0cc5cafbc5abe9a769bf6e82a0e5b
  playSfx' ::
    (StreetRun.Audio.Audio m, StreetRun.Common.HasCommonVars s,
     Control.Monad.State.Class.MonadState s m) =>
    m ()
  {- Arity: 3,
     Strictness: <S(S(LC(C(S))LLL)LLLLLLLLLLLLLLL),U(1*U(A,1*C1(C1(U)),C(C1(U)),1*C1(U),A),A,A,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,A,1*U,1*U,A,A)><L,1*C1(C1(C(U)))><L,1*U(1*U(A,1*C1(C1(U)),A,C(U),A),U,A,A)> -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

