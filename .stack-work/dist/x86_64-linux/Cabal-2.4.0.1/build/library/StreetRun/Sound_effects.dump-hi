
==================== FINAL INTERFACE ====================
2019-04-25 22:11:49.362585569 UTC

interface street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE:StreetRun.Sound_effects 8064
  interface hash: 494f6cf49a6e829a6b30586caf35cb02
  ABI hash: a85edcbc0529355d0d823628a5187457
  export-list hash: 4f505e3c45a92fc5611bc81b03b0dc47
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd6997935d09daa6a687cb8eb0447281
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  StreetRun.Sound_effects.addSfxs'
  StreetRun.Sound_effects.clearSfx'
  StreetRun.Sound_effects.playSfx'
  StreetRun.Sound_effects.AudioSfx{StreetRun.Sound_effects.addSfxs StreetRun.Sound_effects.clearSfx StreetRun.Sound_effects.playSfx}
module dependencies: StreetRun.Audio StreetRun.Building
                     StreetRun.Camera StreetRun.Common StreetRun.Config StreetRun.Font
                     StreetRun.Font_functions StreetRun.Frame StreetRun.Grass
                     StreetRun.Hurdle StreetRun.Hurdle_1 StreetRun.Input
                     StreetRun.Physics StreetRun.Quake StreetRun.Quake_BackStreet
                     StreetRun.Quake_Building StreetRun.Quake_Grass
                     StreetRun.Quake_Street StreetRun.Resource StreetRun.Runner
                     StreetRun.Runner_func_1 StreetRun.Runner_func_2 StreetRun.Sfx
                     StreetRun.Snag StreetRun.Step StreetRun.Types
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      aeson-1.4.2.0 animate-0.7.0 array-0.5.3.0 attoparsec-0.13.2.2
                      base-4.12.0.0 base-compat-0.10.5 base-orphans-0.8.1
                      base16-bytestring-0.1.1.6 base64-bytestring-1.0.0.2
                      bifunctors-5.5.3 binary-0.8.6.0 bytes-0.15.5 bytestring-0.10.8.2
                      call-stack-0.1.0 cereal-0.5.8.0 comonad-5.0.4 conduit-1.3.1.1
                      containers-0.6.0.1 contravariant-1.5 data-default-class-0.1.2.0
                      deepseq-1.4.4.0 distributive-0.6 dlist-0.8.0.6 errors-2.3.0
                      exceptions-0.10.1 free-5.1 ghc-boot-th-8.6.4 ghc-prim-0.5.3
                      hashable-1.2.7.0 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      kan-extensions-5.2 key-state-0.2.0 lens-4.17 libyaml-0.1.1.0
                      lifted-base-0.2.3.12 linear-1.20.8 monad-control-1.0.2.3 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      reflection-2.1.4 resourcet-1.2.2 safe-0.3.17
                      safe-exceptions-0.1.7.0 scientific-0.3.6.2 sdl2-2.4.1.0
                      sdl2-image-2.0.0 sdl2-mixer-1.1.0 sdl2-ttf-2.0.2
                      semigroupoids-5.3.2 stm-2.5.0.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 text-conversions-0.3.0
                      th-abstraction-0.2.11.0 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.6.2 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unliftio-core-0.1.2.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vector-0.12.0.2
                      yaml-0.11.0.0
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         reflection-2.1.4:Data.Reflection linear-1.20.8:Linear.Instances
         stm-2.5.0.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.2.0:Data.Aeson.Types.Internal animate-0.7.0:Animate
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17:Control.Lens.At
                         lens-4.17:Control.Lens.Internal.Indexed
                         lens-4.17:Control.Lens.Reified lens-4.17:Control.Lens.Tuple
                         lens-4.17:Control.Lens.Wrapped lens-4.17:Control.Lens.Zoom
                         linear-1.20.8:Linear.Affine linear-1.20.8:Linear.Plucker
                         linear-1.20.8:Linear.Quaternion linear-1.20.8:Linear.V
                         linear-1.20.8:Linear.V0 linear-1.20.8:Linear.V1
                         linear-1.20.8:Linear.V2 linear-1.20.8:Linear.V3
                         linear-1.20.8:Linear.V4
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         sdl2-2.4.1.0:SDL.Audio sdl2-2.4.1.0:SDL.Event
                         sdl2-2.4.1.0:SDL.Exception sdl2-2.4.1.0:SDL.Hint
                         sdl2-2.4.1.0:SDL.Init sdl2-2.4.1.0:SDL.Input.GameController
                         sdl2-2.4.1.0:SDL.Input.Joystick sdl2-2.4.1.0:SDL.Input.Keyboard
                         sdl2-2.4.1.0:SDL.Input.Keyboard.Codes sdl2-2.4.1.0:SDL.Input.Mouse
                         sdl2-2.4.1.0:SDL.Internal.Types sdl2-2.4.1.0:SDL.Power
                         sdl2-2.4.1.0:SDL.Time sdl2-2.4.1.0:SDL.Video
                         sdl2-2.4.1.0:SDL.Video.OpenGL sdl2-2.4.1.0:SDL.Video.Renderer
                         sdl2-image-2.0.0:SDL.Image sdl2-ttf-2.0.2:SDL.Font
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.11.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Data.Foldable 5f70351366640f007be66681d2212df8
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  lens-4.17:Control.Lens 531af2b540e6d8d8ce856b6f46207d94
import  -/  lens-4.17:Control.Lens.Getter 79a8b254c85ab59ff7c11b644140539d
import  -/  lens-4.17:Control.Lens.Setter 54f8dcf2fae78610733fc46eb59386aa
import  -/  mtl-2.2.2:Control.Monad.State 753def63fe8e937dc636f11e5230745a
import  -/  mtl-2.2.2:Control.Monad.State.Class 94cc1438f3f9a3259fb0a2c56d3d0303
import  -/  StreetRun.Audio e4505453c104c145fe044afc5f5d190c
  exports: ea2a64f8a738ac11df84a60ad5ddd8a8
  Audio c236b79048ac247852d9a2f1fb556e72
  playBirdSfx 68aa694f1f9cebd7ec6ad6d317d4e6f4
  playDuckSfx 1fc2b884f33440de844e8ed753a0be2b
  playHurtSfx 772e0962fb360b868ab602ff71565249
  playJumpSfx 1a2718d8933c891889df950afed9d8e3
  playLavaSfx 8e0332169e510b956a2715f438a7ac5c
  playPointSfx 4bf45c70858afc5e30ea05c294bfea2d
  playQuakeSfx 289c3bd8717bb5605f1f893207c5eaf8
  playRecoverSfx 1d80de0670fa8e5d4e2e059f3e0739cf
  playRockSfx 915db5a1fcfa76160ffd4c636014e1f4
  playStockSfx df9d9a52b534c90e441e1496c2e3a1a7
import  -/  StreetRun.Common ae88f6983cc973a550c263b8148feda8
  exports: 61e4030ffa8e91db9a54c7154cc3d232
  $sel:cvSfx:CommonVars 0f93d8dfb992b8c8431fd0dc1f0c54d0
  CommonVars f94202d5ec502f3e66bcae9443ddf369
  HasCommonVars 919b4731c41ba51a047a083b8a4cc9c7
  commonVars 0c52cc297fe39f10299147a803dcafdf
import  -/  StreetRun.Sfx 84ca787432fe5aa9b2474b5f085cc5ee
  exports: 40f6907587702e890ebc457991a6c86d
  Sfx fb15b7866cecd0ca9b160c975af7b405
  Sfx'Bird 56d9c3d909f8332ecd4ffcb7b1c107ad
  Sfx'Duck a8bf5cd4cb1c561920411ad7f641eb18
  Sfx'Hurt 600482c8a33e1e4ff0fb24a33a0daee0
  Sfx'Jump 41f52c8f3a08fa40afd6ace588b66b8e
  Sfx'Lava 4e2938551422e71645a3776a15050d95
  Sfx'Point 5a55a9de15e8149ca681efa151ccb1c0
  Sfx'Quake 7772cfe5f552ab11dedfd737f5b63915
  Sfx'Recover 19331d92cd30ddd345477ff1cd08c62d
  Sfx'Rock 967e0f28e833d4a8f3f7bc1299eabdf6
  Sfx'Stock 7a369fd19f98f35a1ea662a9a7aaa888
1c61a1d89f8921af43a282092528f4f5
  $tc'C:AudioSfx :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7206129354664863776##
                   8396889104909036394##
                   StreetRun.Sound_effects.$trModule
                   StreetRun.Sound_effects.$tc'C:AudioSfx2
                   1#
                   StreetRun.Sound_effects.$tc'C:AudioSfx1) -}
6c5996f0c51149a54b1d5790a0b597db
  $tc'C:AudioSfx1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c687f753196da0a067b97690687e0fb0
  $tc'C:AudioSfx2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Sound_effects.$tc'C:AudioSfx3) -}
4219c04886a5d33775d1cdfa2376cddf
  $tc'C:AudioSfx3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:AudioSfx"#) -}
9eff8bd9595a7d248e6b657ea4e6a030
  $tcAudioSfx :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10145645971605384964##
                   7157803343062094454##
                   StreetRun.Sound_effects.$trModule
                   StreetRun.Sound_effects.$tcAudioSfx2
                   0#
                   StreetRun.Sound_effects.$tcAudioSfx1) -}
81a6307cb75f5e25edbfae01d4a266a5
  $tcAudioSfx1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
db77f4f1c19ed83dfb481b898fb1aa89
  $tcAudioSfx2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Sound_effects.$tcAudioSfx3) -}
2d09258a25423854691231bb31a2e835
  $tcAudioSfx3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AudioSfx"#) -}
d2002d4e313e5ea81f109d405da8233c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   StreetRun.Sound_effects.$trModule3
                   StreetRun.Sound_effects.$trModule1) -}
42b859ce3a404783394a025b775b7329
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Sound_effects.$trModule2) -}
a2725bcf61e2955678b75667fd9c0a8e
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StreetRun.Sound_effects"#) -}
076d13e2363be24a0cd71eff4b0a01fc
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   StreetRun.Sound_effects.$trModule4) -}
45cad824989e1d43711876925c060ef2
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("street-runner-0.0.0-GEoHgSQZcIaHrT8BK7yHRE"#) -}
2c3a1765af1cff8fbaddd278ea7a95e7
  $waddSfxs' ::
    StreetRun.Common.HasCommonVars s =>
    (forall a. (s -> (a, s)) -> m a) -> [StreetRun.Sfx.Sfx] -> m ()
  {- Arity: 3, Strictness: <L,1*C1(C1(C(U)))><C(S),1*C1(U)><L,U>,
     Inline: [2],
     Unfolding: (\ @ s
                   @ m :: * -> *
                   (w :: StreetRun.Common.HasCommonVars s)
                   (ww :: forall a. (s -> (a, s)) -> m a)
                   (w1 :: [StreetRun.Sfx.Sfx]) ->
                 let {
                   f :: s -> Data.Functor.Identity.Identity s
                   = w `cast` (StreetRun.Common.N:HasCommonVars[0] <s>_N)
                       @ Data.Functor.Identity.Identity
                       Data.Functor.Identity.$fFunctorIdentity
                       (\ (cv :: StreetRun.Common.CommonVars) ->
                        case cv of wild { StreetRun.Common.CommonVars ds ds1 ds2 ->
                        StreetRun.Common.CommonVars
                          ds
                          ds1
                          (GHC.Base.++ @ StreetRun.Sfx.Sfx w1 ds2) })
                         `cast`
                       (<StreetRun.Common.CommonVars>_R
                        ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                      <StreetRun.Common.CommonVars>_R))
                 } in
                 ww
                   @ ()
                   (\ (s1 :: s) ->
                    (GHC.Tuple.(),
                     (f s1) `cast` (Data.Functor.Identity.N:Identity[0] <s>_R)))) -}
00c896cf1176f2fd1c5a64888c053a7a
  $wclearSfx' ::
    StreetRun.Common.HasCommonVars s =>
    (forall a. (s -> (a, s)) -> m a) -> m ()
  {- Arity: 2, Strictness: <L,1*C1(C1(C(U)))><C(S),1*C1(U)>,
     Inline: [2],
     Unfolding: (\ @ s
                   @ m :: * -> *
                   (w :: StreetRun.Common.HasCommonVars s)
                   (ww :: forall a. (s -> (a, s)) -> m a) ->
                 let {
                   f :: s -> Data.Functor.Identity.Identity s
                   = w `cast` (StreetRun.Common.N:HasCommonVars[0] <s>_N)
                       @ Data.Functor.Identity.Identity
                       Data.Functor.Identity.$fFunctorIdentity
                       StreetRun.Sound_effects.clearSfx'1
                         `cast`
                       (<StreetRun.Common.CommonVars>_R
                        ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                      <StreetRun.Common.CommonVars>_R))
                 } in
                 ww
                   @ ()
                   (\ (s1 :: s) ->
                    (GHC.Tuple.(),
                     (f s1) `cast` (Data.Functor.Identity.N:Identity[0] <s>_R)))) -}
59c875a47b0b4851b33ea127ea6242ec
  class GHC.Base.Monad m => AudioSfx (m :: * -> *) where
    clearSfx :: m ()
    addSfxs :: [StreetRun.Sfx.Sfx] -> m ()
    playSfx :: m ()
    {-# MINIMAL clearSfx, addSfxs, playSfx #-}
a1d16c5d5c83fa4ed5f5fe23e20b87e5
  addSfxs' ::
    (StreetRun.Common.HasCommonVars s,
     Control.Monad.State.Class.MonadState s m) =>
    [StreetRun.Sfx.Sfx] -> m ()
  {- Arity: 3,
     Strictness: <L,1*C1(C1(C(U)))><S(LLLC(S)),1*U(A,A,A,1*C1(U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ m :: * -> *
                   (w :: StreetRun.Common.HasCommonVars s)
                   (w1 :: Control.Monad.State.Class.MonadState s m)
                   (w2 :: [StreetRun.Sfx.Sfx]) ->
                 case w1 of ww { Control.Monad.State.Class.C:MonadState ww1 ww2 ww3 ww4 ->
                 StreetRun.Sound_effects.$waddSfxs' @ s @ m w ww4 w2 }) -}
abc36d23b521fdce048ece0e11cb8977
  clearSfx' ::
    (StreetRun.Common.HasCommonVars s,
     Control.Monad.State.Class.MonadState s m) =>
    m ()
  {- Arity: 2,
     Strictness: <L,1*C1(C1(C(U)))><S(LLLC(S)),1*U(A,A,A,1*C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ m :: * -> *
                   (w :: StreetRun.Common.HasCommonVars s)
                   (w1 :: Control.Monad.State.Class.MonadState s m) ->
                 case w1 of ww { Control.Monad.State.Class.C:MonadState ww1 ww2 ww3 ww4 ->
                 StreetRun.Sound_effects.$wclearSfx' @ s @ m w ww4 }) -}
4f1942c360e0ccbe90e7c096beef55a2
  clearSfx'1 ::
    StreetRun.Common.CommonVars -> StreetRun.Common.CommonVars
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (cv :: StreetRun.Common.CommonVars) ->
                 case cv of wild { StreetRun.Common.CommonVars ds ds1 ds2 ->
                 StreetRun.Common.CommonVars
                   ds
                   ds1
                   (GHC.Types.[] @ StreetRun.Sfx.Sfx) }) -}
011d33880344a376bd197c0c84b80490
  playSfx' ::
    (StreetRun.Audio.Audio m, StreetRun.Common.HasCommonVars s,
     Control.Monad.State.Class.MonadState s m) =>
    m ()
  {- Arity: 3,
     Strictness: <S(S(LC(C(S))LLL)LLLLLLLLLLLLLLL),U(1*U(A,1*C1(C1(U)),C(C1(U)),1*C1(U),A),A,A,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,A,1*U,1*U,A,A)><L,1*C1(C1(C(U)))><L,1*U(1*U(A,1*C1(C1(U)),A,C(U),A),U,A,A)> -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

