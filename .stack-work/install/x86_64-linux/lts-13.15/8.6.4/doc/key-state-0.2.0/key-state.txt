-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Manage key and button states and statuses
--   
--   Manage key and button states and statuses
@package key-state
@version 0.2.0

module KeyState
data KeyStatus
KeyStatus'Untouched :: KeyStatus
KeyStatus'Pressed :: KeyStatus
KeyStatus'Held :: KeyStatus
KeyStatus'Released :: KeyStatus
data KeyState count
KeyState :: KeyStatus -> Maybe count -> KeyState count
[ksStatus] :: KeyState count -> KeyStatus

-- | Counter
[ksCounter] :: KeyState count -> Maybe count
initKeyState :: KeyState count
pressedKeyState :: KeyState count
releasedKeyState :: KeyState count
updateKeyState :: Num count => count -> KeyState count -> Bool -> KeyState count
maintainKeyState :: Num count => count -> KeyState count -> KeyState count
isHeld :: KeyState a -> Bool
isPressed :: KeyState a -> Bool
isUntouched :: KeyState a -> Bool
isReleased :: KeyState a -> Bool
isTouched :: KeyState a -> Bool
instance GHC.Classes.Eq count => GHC.Classes.Eq (KeyState.KeyState count)
instance GHC.Show.Show count => GHC.Show.Show (KeyState.KeyState count)
instance GHC.Enum.Enum KeyState.KeyStatus
instance GHC.Classes.Ord KeyState.KeyStatus
instance GHC.Classes.Eq KeyState.KeyStatus
instance GHC.Show.Show KeyState.KeyStatus
